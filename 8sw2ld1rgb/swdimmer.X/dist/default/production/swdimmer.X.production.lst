

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 07 12:10:05 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext1,local,class=CONST,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 1.45
    63                           ; Generated 16/11/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1526 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0110                     	;# 
   150  0116                     	;# 
   151  0117                     	;# 
   152  011D                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0197                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  0199                     	;# 
   169  019A                     	;# 
   170  019A                     	;# 
   171  019A                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019C                     	;# 
   180  019D                     	;# 
   181  019D                     	;# 
   182  019D                     	;# 
   183  019E                     	;# 
   184  019E                     	;# 
   185  019E                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  019F                     	;# 
   189  020D                     	;# 
   190  020F                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  0219                     	;# 
   208  021A                     	;# 
   209  021B                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021E                     	;# 
   213  021F                     	;# 
   214  028C                     	;# 
   215  028D                     	;# 
   216  0291                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0298                     	;# 
   221  0298                     	;# 
   222  0299                     	;# 
   223  029A                     	;# 
   224  029D                     	;# 
   225  029E                     	;# 
   226  029F                     	;# 
   227  030C                     	;# 
   228  030D                     	;# 
   229  0311                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0318                     	;# 
   234  0318                     	;# 
   235  0319                     	;# 
   236  031A                     	;# 
   237  031C                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  038C                     	;# 
   242  038D                     	;# 
   243  0394                     	;# 
   244  0395                     	;# 
   245  0396                     	;# 
   246  040C                     	;# 
   247  040D                     	;# 
   248  0411                     	;# 
   249  0411                     	;# 
   250  0412                     	;# 
   251  0413                     	;# 
   252  0414                     	;# 
   253  0415                     	;# 
   254  0416                     	;# 
   255  0417                     	;# 
   256  0418                     	;# 
   257  0418                     	;# 
   258  0419                     	;# 
   259  041A                     	;# 
   260  041B                     	;# 
   261  041C                     	;# 
   262  041D                     	;# 
   263  041E                     	;# 
   264  048D                     	;# 
   265  0491                     	;# 
   266  0491                     	;# 
   267  0492                     	;# 
   268  0492                     	;# 
   269  0493                     	;# 
   270  0493                     	;# 
   271  0493                     	;# 
   272  0494                     	;# 
   273  0494                     	;# 
   274  0495                     	;# 
   275  0495                     	;# 
   276  0496                     	;# 
   277  0496                     	;# 
   278  0497                     	;# 
   279  0497                     	;# 
   280  0595                     	;# 
   281  0596                     	;# 
   282  0597                     	;# 
   283  059C                     	;# 
   284  059D                     	;# 
   285  059E                     	;# 
   286  0611                     	;# 
   287  0611                     	;# 
   288  0612                     	;# 
   289  0613                     	;# 
   290  0614                     	;# 
   291  0614                     	;# 
   292  0615                     	;# 
   293  0616                     	;# 
   294  0617                     	;# 
   295  0617                     	;# 
   296  0618                     	;# 
   297  0619                     	;# 
   298  061A                     	;# 
   299  061A                     	;# 
   300  061B                     	;# 
   301  061C                     	;# 
   302  061D                     	;# 
   303  061D                     	;# 
   304  061E                     	;# 
   305  061F                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317                           
   318                           	psect	idataBANK1
   319  0ACC                     __pidataBANK1:	
   320                           
   321                           ;initializer for _copy_parentalLockBuffer
   322  0ACC  3430               	retlw	48
   323  0ACD  3430               	retlw	48
   324  0ACE  3430               	retlw	48
   325  0ACF  3430               	retlw	48
   326  0AD0  3430               	retlw	48
   327  0AD1  3430               	retlw	48
   328  0AD2  3430               	retlw	48
   329  0AD3  3430               	retlw	48
   330  0AD4  3430               	retlw	48
   331  0AD5  3430               	retlw	48
   332  0AD6  3430               	retlw	48
   333  0AD7  3430               	retlw	48
   334  0AD8  3400               	retlw	0
   335  0AD9  3400               	retlw	0
   336                           
   337                           ;initializer for applianceControl@F3884
   338  0ADA  3423               	retlw	35
   339  0ADB  3400               	retlw	0
   340                           
   341                           ;initializer for applianceControl@F3882
   342  0ADC  3423               	retlw	35
   343  0ADD  3400               	retlw	0
   344                           
   345                           	psect	idataBANK2
   346  0BF5                     __pidataBANK2:	
   347                           
   348                           ;initializer for _mainReceivedDataBuffer
   349  0BF5  3423               	retlw	35
   350  0BF6  3400               	retlw	0
   351  0BF7  3400               	retlw	0
   352  0BF8  3400               	retlw	0
   353  0BF9  3400               	retlw	0
   354  0BFA  3400               	retlw	0
   355  0BFB  3400               	retlw	0
   356  0BFC  3400               	retlw	0
   357  0BFD  3400               	retlw	0
   358  0BFE  3400               	retlw	0
   359  0BFF  3400               	retlw	0
   360  0C00  3400               	retlw	0
   361  0C01  3400               	retlw	0
   362  0C02  3400               	retlw	0
   363  0C03  3400               	retlw	0
   364  0C04  3400               	retlw	0
   365  0C05  3400               	retlw	0
   366  0C06  3400               	retlw	0
   367                           
   368                           ;initializer for _parentalLockBuffer
   369  0C07  3430               	retlw	48
   370  0C08  3430               	retlw	48
   371  0C09  3430               	retlw	48
   372  0C0A  3430               	retlw	48
   373  0C0B  3430               	retlw	48
   374  0C0C  3430               	retlw	48
   375  0C0D  3430               	retlw	48
   376  0C0E  3430               	retlw	48
   377  0C0F  3430               	retlw	48
   378  0C10  3430               	retlw	48
   379  0C11  3430               	retlw	48
   380  0C12  3430               	retlw	48
   381  0C13  3400               	retlw	0
   382  0C14  3400               	retlw	0
   383                           
   384                           ;initializer for _tempReceivedDataBuffer
   385  0C15  3423               	retlw	35
   386  0C16  3400               	retlw	0
   387  0C17  3400               	retlw	0
   388  0C18  3400               	retlw	0
   389  0C19  3400               	retlw	0
   390  0C1A  3400               	retlw	0
   391  0C1B  3400               	retlw	0
   392  0C1C  3400               	retlw	0
   393  0C1D  3400               	retlw	0
   394  0C1E  3400               	retlw	0
   395                           
   396                           	psect	idataBANK3
   397  0D1B                     __pidataBANK3:	
   398                           
   399                           ;initializer for _currentStateBuffer
   400  0D1B  3423               	retlw	35
   401  0D1C  3400               	retlw	0
   402  0D1D  3400               	retlw	0
   403  0D1E  3400               	retlw	0
   404  0D1F  3400               	retlw	0
   405  0D20  3400               	retlw	0
   406  0D21  3400               	retlw	0
   407  0D22  3400               	retlw	0
   408  0D23  3400               	retlw	0
   409  0D24  3400               	retlw	0
   410  0D25  3400               	retlw	0
   411  0D26  3400               	retlw	0
   412  0D27  3400               	retlw	0
   413  0D28  3400               	retlw	0
   414  0D29  3400               	retlw	0
   415  0D2A  3400               	retlw	0
   416  0D2B  3400               	retlw	0
   417  0D2C  3400               	retlw	0
   418  0D2D  3400               	retlw	0
   419  0D2E  3400               	retlw	0
   420  0D2F  3400               	retlw	0
   421  0D30  3400               	retlw	0
   422  0D31  3400               	retlw	0
   423  0D32  3400               	retlw	0
   424  0D33  3400               	retlw	0
   425  0D34  3400               	retlw	0
   426  0D35  3400               	retlw	0
   427  0D36  3400               	retlw	0
   428  0D37  3400               	retlw	0
   429  0D38  3400               	retlw	0
   430  0D39  3400               	retlw	0
   431  0D3A  3400               	retlw	0
   432  0D3B  3400               	retlw	0
   433  0D3C  3400               	retlw	0
   434  0D3D  3400               	retlw	0
   435  0D3E  3400               	retlw	0
   436  0D3F  3400               	retlw	0
   437  0D40  3400               	retlw	0
   438  0D41  3400               	retlw	0
   439  0D42  3400               	retlw	0
   440  0D43  3400               	retlw	0
   441  0D44  3400               	retlw	0
   442  0D45  3400               	retlw	0
   443  0D46  3400               	retlw	0
   444  0D47  3400               	retlw	0
   445  0D48  3400               	retlw	0
   446  0D49  3400               	retlw	0
   447  0D4A  3400               	retlw	0
   448  0D4B  3400               	retlw	0
   449  0D4C  3400               	retlw	0
   450  0D4D  3400               	retlw	0
   451  0D4E  3400               	retlw	0
   452  0D4F  3400               	retlw	0
   453  0D50  3400               	retlw	0
   454  0D51  3400               	retlw	0
   455  0D52  3400               	retlw	0
   456  0D53  3400               	retlw	0
   457  0D54  3400               	retlw	0
   458                           
   459                           	psect	stringtext1
   460  1000                     __pstringtext1:	
   461  1000                     _hexpowers:	
   462  1000  3401               	retlw	1
   463  1001  3400               	retlw	0
   464  1002  3410               	retlw	16
   465  1003  3400               	retlw	0
   466  1004  3400               	retlw	0
   467  1005  3401               	retlw	1
   468  1006  3400               	retlw	0
   469  1007  3410               	retlw	16
   470  1008                     __end_of_hexpowers:	
   471  001A                     _TMR2	set	26
   472  001C                     _T2CON	set	28
   473  0019                     _T1GCON	set	25
   474  0018                     _T1CON	set	24
   475  000D                     _PORTBbits	set	13
   476  000F                     _PORTDbits	set	15
   477  0016                     _TMR1L	set	22
   478  0017                     _TMR1H	set	23
   479  0014                     _PIR4bits	set	20
   480  0018                     _T1CONbits	set	24
   481  001B                     _PR2	set	27
   482  001C                     _T2CONbits	set	28
   483  0011                     _PIR1bits	set	17
   484  0010                     _PORTEbits	set	16
   485  005E                     _PEIE	set	94
   486  005F                     _GIE	set	95
   487  00A7                     _CCP10IF	set	167
   488  008D                     _RC1IF	set	141
   489  0094                     _PIE4bits	set	148
   490  008E                     _TRISCbits	set	142
   491  0090                     _TRISEbits	set	144
   492  008D                     _TRISBbits	set	141
   493  008F                     _TRISDbits	set	143
   494  0091                     _PIE1bits	set	145
   495  018C                     _ANSELA	set	396
   496  018D                     _ANSELB	set	397
   497  018F                     _ANSELD	set	399
   498  0190                     _ANSELE	set	400
   499  019A                     _TX1REG	set	410
   500  019E                     _TX1STAbits	set	414
   501  019C                     _SP1BRGH	set	412
   502  019B                     _SP1BRGL	set	411
   503  019E                     _TX1STA	set	414
   504  019D                     _RC1STA	set	413
   505  019F                     _BAUD1CON	set	415
   506  0199                     _RC1REG	set	409
   507  019D                     _RC1STAbits	set	413
   508  020D                     _WPUB	set	525
   509  020F                     _WPUD	set	527
   510  0210                     _WPUE	set	528
   511  028C                     _PORTFbits	set	652
   512  028D                     _PORTGbits	set	653
   513  030C                     _TRISFbits	set	780
   514  030D                     _TRISGbits	set	781
   515  040C                     _ANSELF	set	1036
   516  040D                     _ANSELG	set	1037
   517  048D                     _WPUG	set	1165
   518  061D                     _CCPR10L	set	1565
   519  061E                     _CCPR10H	set	1566
   520  061F                     _CCP10CON	set	1567
   521  0617                     _CCPR8L	set	1559
   522  0618                     _CCPR8H	set	1560
   523  061C                     _CCP9CON	set	1564
   524  1008                     STR_5:	
   525  1008  3430               	retlw	48	;'0'
   526  1009  3431               	retlw	49	;'1'
   527  100A  3432               	retlw	50	;'2'
   528  100B  3433               	retlw	51	;'3'
   529  100C  3434               	retlw	52	;'4'
   530  100D  3435               	retlw	53	;'5'
   531  100E  3436               	retlw	54	;'6'
   532  100F  3437               	retlw	55	;'7'
   533  1010  3438               	retlw	56	;'8'
   534  1011  3439               	retlw	57	;'9'
   535  1012  3441               	retlw	65	;'A'
   536  1013  3442               	retlw	66	;'B'
   537  1014  3443               	retlw	67	;'C'
   538  1015  3444               	retlw	68	;'D'
   539  1016  3445               	retlw	69	;'E'
   540  1017  3446               	retlw	70	;'F'
   541  1018  3400               	retlw	0
   542                           
   543                           	psect	stringtext2
   544  1019                     __pstringtext2:	
   545  1019                     STR_4:	
   546  1019  3445               	retlw	69	;'E'
   547  101A  3452               	retlw	82	;'R'
   548  101B  344C               	retlw	76	;'L'
   549  101C  3453               	retlw	83	;'S'
   550  101D  3400               	retlw	0
   551                           
   552                           	psect	stringtext3
   553  101E                     __pstringtext3:	
   554  101E                     STR_2:	
   555  101E  3445               	retlw	69	;'E'
   556  101F  3452               	retlw	82	;'R'
   557  1020  344F               	retlw	79	;'O'
   558  1021  3456               	retlw	86	;'V'
   559  1022  3400               	retlw	0
   560                           
   561                           	psect	stringtext4
   562  1023                     __pstringtext4:	
   563  1023                     STR_3:	
   564  1023  3445               	retlw	69	;'E'
   565  1024  3452               	retlw	82	;'R'
   566  1025  3452               	retlw	82	;'R'
   567  1026  3458               	retlw	88	;'X'
   568  1027  3400               	retlw	0
   569                           
   570                           	psect	stringtext5
   571  1028                     __pstringtext5:	
   572  1028                     STR_1:	
   573  1028  3425               	retlw	37	;'%'
   574  1029  3458               	retlw	88	;'X'
   575  102A  3400               	retlw	0
   576                           
   577                           	psect	stringtext6
   578  0000                     __pstringtext6:	
   579                           
   580                           ; #config settings
   581  0000                     
   582                           	psect	cinit
   583  007E                     start_initialization:	
   584  007E                     __initialization:	
   585                           
   586                           ; Initialize objects allocated to BANK1
   587  007E  30CC               	movlw	low __pidataBANK1
   588  007F  0084               	movwf	4
   589  0080  308A               	movlw	(high __pidataBANK1)| (0+128)
   590  0081  0085               	movwf	5
   591  0082  30D5               	movlw	low __pdataBANK1
   592  0083  0086               	movwf	6
   593  0084  3000               	movlw	high __pdataBANK1
   594  0085  0087               	movwf	7
   595  0086  3012               	movlw	18
   596  0087  318A  2268  3180   	fcall	init_ram
   597                           
   598                           ; Initialize objects allocated to BANK2
   599  008A  30F5               	movlw	low __pidataBANK2
   600  008B  0084               	movwf	4
   601  008C  308B               	movlw	(high __pidataBANK2)| (0+128)
   602  008D  0085               	movwf	5
   603  008E  3020               	movlw	low __pdataBANK2
   604  008F  0086               	movwf	6
   605  0090  3001               	movlw	high __pdataBANK2
   606  0091  0087               	movwf	7
   607  0092  302A               	movlw	42
   608  0093  318A  2268  3180   	fcall	init_ram
   609                           
   610                           ; Initialize objects allocated to BANK3
   611  0096  301B               	movlw	low __pidataBANK3
   612  0097  0084               	movwf	4
   613  0098  308D               	movlw	(high __pidataBANK3)| (0+128)
   614  0099  0085               	movwf	5
   615  009A  30A0               	movlw	low __pdataBANK3
   616  009B  0086               	movwf	6
   617  009C  3001               	movlw	high __pdataBANK3
   618  009D  0087               	movwf	7
   619  009E  303A               	movlw	58
   620  009F  318A  2268  3180   	fcall	init_ram
   621                           
   622                           ; Clear objects allocated to COMMON
   623  00A2  01F5               	clrf	__pbssCOMMON& (0+127)
   624  00A3  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   625  00A4  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   626  00A5  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   627                           
   628                           ; Clear objects allocated to BANK0
   629  00A6  3060               	movlw	low __pbssBANK0
   630  00A7  0084               	movwf	4
   631  00A8  3000               	movlw	high __pbssBANK0
   632  00A9  0085               	movwf	5
   633  00AA  3010               	movlw	16
   634  00AB  318A  2262  3180   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK1
   637  00AE  30E7               	movlw	low __pbssBANK1
   638  00AF  0084               	movwf	4
   639  00B0  3000               	movlw	high __pbssBANK1
   640  00B1  0085               	movwf	5
   641  00B2  3008               	movlw	8
   642  00B3  318A  2262         	fcall	clear_ram0
   643  00B5                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  00B5                     __end_of__initialization:	
   647  00B5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   648  00B6  0020               	movlb	0
   649  00B7  3180  28B9         	ljmp	_main	;jump to C main() function
   650                           
   651                           	psect	bssCOMMON
   652  0075                     __pbssCOMMON:	
   653  0075                     _M9:	
   654  0075                     	ds	2
   655  0077                     _mainReceivedDataPosition:	
   656  0077                     	ds	2
   657                           
   658                           	psect	bssBANK0
   659  0060                     __pbssBANK0:	
   660  0060                     _M8:	
   661  0060                     	ds	2
   662  0062                     _M7:	
   663  0062                     	ds	2
   664  0064                     _M6:	
   665  0064                     	ds	2
   666  0066                     _M5:	
   667  0066                     	ds	2
   668  0068                     _M4:	
   669  0068                     	ds	2
   670  006A                     _M3:	
   671  006A                     	ds	2
   672  006C                     _M2:	
   673  006C                     	ds	2
   674  006E                     _M1:	
   675  006E                     	ds	2
   676                           
   677                           	psect	bssBANK1
   678  00E7                     __pbssBANK1:	
   679  00E7                     _start_PWM_Generation_For_DIMMER:	
   680  00E7                     	ds	2
   681  00E9                     _Timer1L:	
   682  00E9                     	ds	2
   683  00EB                     _Timer1H:	
   684  00EB                     	ds	2
   685  00ED                     _mainDataReceived:	
   686  00ED                     	ds	2
   687                           
   688                           	psect	dataBANK1
   689  00D5                     __pdataBANK1:	
   690  00D5                     _copy_parentalLockBuffer:	
   691  00D5                     	ds	14
   692  00E3                     applianceControl@F3884:	
   693  00E3                     	ds	2
   694  00E5                     applianceControl@F3882:	
   695  00E5                     	ds	2
   696                           
   697                           	psect	dataBANK2
   698  0120                     __pdataBANK2:	
   699  0120                     _mainReceivedDataBuffer:	
   700  0120                     	ds	18
   701  0132                     _parentalLockBuffer:	
   702  0132                     	ds	14
   703  0140                     _tempReceivedDataBuffer:	
   704  0140                     	ds	10
   705                           
   706                           	psect	dataBANK3
   707  01A0                     __pdataBANK3:	
   708  01A0                     _currentStateBuffer:	
   709  01A0                     	ds	58
   710                           
   711                           	psect	inittext
   712  0A68                     init_ram:	
   713  0A68  00FE               	movwf	126
   714  0A69                     initloop:	
   715  0A69  0012               	moviw fsr0++
   716  0A6A  001E               	movwi fsr1++
   717  0A6B  0BFE               	decfsz	126,f
   718  0A6C  2A69               	goto	initloop
   719  0A6D  3400               	retlw	0
   720                           
   721                           	psect	clrtext
   722  0A62                     clear_ram0:	
   723                           ;	Called with FSR0 containing the base address, and
   724                           ;	WREG with the size to clear
   725                           
   726  0A62  0064               	clrwdt	;clear the watchdog before getting into this loop
   727  0A63                     clrloop0:	
   728  0A63  0180               	clrf	0	;clear RAM location pointed to by FSR
   729  0A64  3101               	addfsr 0,1
   730  0A65  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   731  0A66  2A63               	goto	clrloop0	;have we reached the end yet?
   732  0A67  3400               	retlw	0	;all done for this memory range, return
   733                           
   734                           	psect	cstackBANK2
   735  014A                     __pcstackBANK2:	
   736  014A                     main@dataBufferCounter:	
   737                           
   738                           ; 2 bytes @ 0x0
   739  014A                     	ds	2
   740  014C                     main@man:	
   741                           
   742                           ; 2 bytes @ 0x2
   743  014C                     	ds	2
   744                           
   745                           	psect	cstackBANK1
   746  00A0                     __pcstackBANK1:	
   747  00A0                     applianceControl@ConvertStringIntoInt:	
   748                           
   749                           ; 2 bytes @ 0x0
   750  00A0                     	ds	2
   751  00A2                     applianceControl@remainder:	
   752                           
   753                           ; 2 bytes @ 0x2
   754  00A2                     	ds	2
   755  00A4                     applianceControl@start:	
   756                           
   757                           ; 2 bytes @ 0x4
   758  00A4                     	ds	2
   759  00A6                     applianceControl@end:	
   760                           
   761                           ; 2 bytes @ 0x6
   762  00A6                     	ds	2
   763  00A8                     applianceControl@HexlevelBuffer:	
   764                           
   765                           ; 5 bytes @ 0x8
   766  00A8                     	ds	5
   767  00AD                     applianceControl@CompleteClock:	
   768                           
   769                           ; 4 bytes @ 0xD
   770  00AD                     	ds	4
   771  00B1                     applianceControl@deno:	
   772                           
   773                           ; 3 bytes @ 0x11
   774  00B1                     	ds	3
   775  00B4                     applianceControl@clockPerCycle:	
   776                           
   777                           ; 3 bytes @ 0x14
   778  00B4                     	ds	3
   779  00B7                     applianceControl@Pulse:	
   780                           
   781                           ; 4 bytes @ 0x17
   782  00B7                     	ds	4
   783  00BB                     applianceControl@NeedPulse:	
   784                           
   785                           ; 4 bytes @ 0x1B
   786  00BB                     	ds	4
   787  00BF                     applianceControl@strH:	
   788                           
   789                           ; 3 bytes @ 0x1F
   790  00BF                     	ds	3
   791  00C2                     applianceControl@strL:	
   792                           
   793                           ; 3 bytes @ 0x22
   794  00C2                     	ds	3
   795  00C5                     applianceControl@charSwitchMSB:	
   796                           
   797                           ; 1 bytes @ 0x25
   798  00C5                     	ds	1
   799  00C6                     applianceControl@switchNumberStringBuffer:	
   800                           
   801                           ; 2 bytes @ 0x26
   802  00C6                     	ds	2
   803  00C8                     applianceControl@ConvertIntToTimeInMilisec:	
   804                           
   805                           ; 3 bytes @ 0x28
   806  00C8                     	ds	3
   807  00CB                     applianceControl@integerSpeed:	
   808                           
   809                           ; 2 bytes @ 0x2B
   810  00CB                     	ds	2
   811  00CD                     applianceControl@dimmerSpeedStringBuffer:	
   812                           
   813                           ; 2 bytes @ 0x2D
   814  00CD                     	ds	2
   815  00CF                     applianceControl@integerSwitchNumber:	
   816                           
   817                           ; 2 bytes @ 0x2F
   818  00CF                     	ds	2
   819  00D1                     applianceControl@currentStateBufferPositions:	
   820                           
   821                           ; 2 bytes @ 0x31
   822  00D1                     	ds	2
   823  00D3                     applianceControl@integerSwitchState:	
   824                           
   825                           ; 2 bytes @ 0x33
   826  00D3                     	ds	2
   827                           
   828                           	psect	cstackCOMMON
   829  0070                     __pcstackCOMMON:	
   830  0070                     ?_isdigit:	
   831  0070                     ?_sendAcknowledgment:	
   832                           ; 1 bit 
   833                           
   834  0070                     ?_errorsISR:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_GPIO_pin_Initialize:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_allPeripheralInit:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_ReceivingIndicationLedBlinking:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_copyReceivedDataBuffer:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_TransmissionIndicationLedBlinking:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_clearAllPorts:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_pinINIT_extra:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_EUSART_Initialize:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_TMR1_Initialize:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_TMR2_Initialize:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_CCP10_Initialize:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_CCP8_Initialize:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_isr:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_main:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     errorsISR@errNum:	
   880                           ; 2 bytes @ 0x0
   881                           
   882                           
   883                           ; 2 bytes @ 0x0
   884  0070                     	ds	2
   885  0072                     ??_errorsISR:	
   886                           
   887                           ; 1 bytes @ 0x2
   888  0072                     	ds	1
   889  0073                     ??_isr:	
   890                           
   891                           ; 1 bytes @ 0x3
   892  0073                     	ds	2
   893  0075                     ??_GPIO_pin_Initialize:	
   894  0075                     ??_allPeripheralInit:	
   895                           ; 1 bytes @ 0x5
   896                           
   897  0075                     ??_clearAllPorts:	
   898                           ; 1 bytes @ 0x5
   899                           
   900  0075                     ??_pinINIT_extra:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     ??_EUSART_Initialize:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0075                     ??_TMR1_Initialize:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     ??_TMR2_Initialize:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0075                     ??_CCP10_Initialize:	
   913                           ; 1 bytes @ 0x5
   914                           
   915  0075                     ??_CCP8_Initialize:	
   916                           ; 1 bytes @ 0x5
   917                           
   918  0075                     ??_isdigit:	
   919                           ; 1 bytes @ 0x5
   920                           
   921  0075                     ??___wmul:	
   922                           ; 1 bytes @ 0x5
   923                           
   924                           
   925                           	psect	cstackBANK0
   926  0020                     __pcstackBANK0:	
   927                           ; 1 bytes @ 0x5
   928                           
   929  0020                     ?_strncpy:	
   930  0020                     ??_sendAcknowledgment:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0020                     ??_ReceivingIndicationLedBlinking:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0020                     ??_copyReceivedDataBuffer:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0020                     ?_errorsMain:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0020                     ?_SwitchOnStatustToGatway:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0020                     ??_TransmissionIndicationLedBlinking:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0020                     ?_SwitchOffStatustToGatway:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0020                     ?_strlen:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0020                     ?___wmul:	
   955                           ; 2 bytes @ 0x0
   956                           
   957  0020                     ?___lwdiv:	
   958                           ; 2 bytes @ 0x0
   959                           
   960  0020                     ?___ftpack:	
   961                           ; 2 bytes @ 0x0
   962                           
   963  0020                     _isdigit$990:	
   964                           ; 3 bytes @ 0x0
   965                           
   966  0020                     strncpy@from:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0020                     errorsMain@errNum:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     SwitchOffStatustToGatway@SwitchOffNumber:	
   973                           ; 2 bytes @ 0x0
   974                           
   975  0020                     SwitchOnStatustToGatway@SwitchOnNumber:	
   976                           ; 2 bytes @ 0x0
   977                           
   978  0020                     ___wmul@multiplier:	
   979                           ; 2 bytes @ 0x0
   980                           
   981  0020                     ___lwdiv@divisor:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  0020                     ___ftpack@arg:	
   985                           ; 2 bytes @ 0x0
   986                           
   987                           
   988                           ; 3 bytes @ 0x0
   989  0020                     	ds	1
   990  0021                     isdigit@c:	
   991  0021                     sendAcknowledgment@Tx_count:	
   992                           ; 1 bytes @ 0x1
   993                           
   994  0021                     copyReceivedDataBuffer@dataBufferCounter:	
   995                           ; 2 bytes @ 0x1
   996                           
   997  0021                     strncpy@size:	
   998                           ; 2 bytes @ 0x1
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x1
  1002  0021                     	ds	1
  1003  0022                     ??_strlen:	
  1004  0022                     ??_errorsMain:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007  0022                     ??_SwitchOnStatustToGatway:	
  1008                           ; 1 bytes @ 0x2
  1009                           
  1010  0022                     ??_SwitchOffStatustToGatway:	
  1011                           ; 1 bytes @ 0x2
  1012                           
  1013  0022                     ___wmul@multiplicand:	
  1014                           ; 1 bytes @ 0x2
  1015                           
  1016  0022                     ___lwdiv@dividend:	
  1017                           ; 2 bytes @ 0x2
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x2
  1021  0022                     	ds	1
  1022  0023                     ??_strncpy:	
  1023  0023                     sendAcknowledgment@currentStateBuffer:	
  1024                           ; 1 bytes @ 0x3
  1025                           
  1026  0023                     ___ftpack@exp:	
  1027                           ; 1 bytes @ 0x3
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x3
  1031  0023                     	ds	1
  1032  0024                     ??___lwdiv:	
  1033  0024                     ___ftpack@sign:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  0024                     strncpy@to:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  0024                     ___wmul@product:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x4
  1044  0024                     	ds	1
  1045  0025                     ??___ftpack:	
  1046  0025                     ___lwdiv@counter:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049  0025                     strncpy@cp:	
  1050                           ; 1 bytes @ 0x5
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x5
  1054  0025                     	ds	1
  1055  0026                     ?_atoi:	
  1056  0026                     strlen@s:	
  1057                           ; 2 bytes @ 0x6
  1058                           
  1059  0026                     ___lwdiv@quotient:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0x6
  1064  0026                     	ds	1
  1065  0027                     strlen@cp:	
  1066                           
  1067                           ; 1 bytes @ 0x7
  1068  0027                     	ds	1
  1069  0028                     ??_atoi:	
  1070  0028                     ?_sprintf:	
  1071                           ; 1 bytes @ 0x8
  1072                           
  1073  0028                     ?_hexadecimalToDecimal:	
  1074                           ; 2 bytes @ 0x8
  1075                           
  1076  0028                     ?___awtoft:	
  1077                           ; 2 bytes @ 0x8
  1078                           
  1079  0028                     ?___ftmul:	
  1080                           ; 3 bytes @ 0x8
  1081                           
  1082  0028                     sprintf@f:	
  1083                           ; 3 bytes @ 0x8
  1084                           
  1085  0028                     ___awtoft@c:	
  1086                           ; 2 bytes @ 0x8
  1087                           
  1088  0028                     ___ftmul@f1:	
  1089                           ; 2 bytes @ 0x8
  1090                           
  1091                           
  1092                           ; 3 bytes @ 0x8
  1093  0028                     	ds	2
  1094  002A                     ??_hexadecimalToDecimal:	
  1095  002A                     atoi@sign:	
  1096                           ; 1 bytes @ 0xA
  1097                           
  1098                           
  1099                           ; 1 bytes @ 0xA
  1100  002A                     	ds	1
  1101  002B                     ??___awtoft:	
  1102  002B                     atoi@a:	
  1103                           ; 1 bytes @ 0xB
  1104                           
  1105  002B                     ___ftmul@f2:	
  1106                           ; 2 bytes @ 0xB
  1107                           
  1108                           
  1109                           ; 3 bytes @ 0xB
  1110  002B                     	ds	1
  1111  002C                     hexadecimalToDecimal@len:	
  1112                           
  1113                           ; 2 bytes @ 0xC
  1114  002C                     	ds	1
  1115  002D                     atoi@s:	
  1116  002D                     ___awtoft@sign:	
  1117                           ; 1 bytes @ 0xD
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0xD
  1121  002D                     	ds	1
  1122  002E                     ??_sprintf:	
  1123  002E                     ??___ftmul:	
  1124                           ; 1 bytes @ 0xE
  1125                           
  1126  002E                     ?___ftdiv:	
  1127                           ; 1 bytes @ 0xE
  1128                           
  1129  002E                     hexadecimalToDecimal@dec_val:	
  1130                           ; 3 bytes @ 0xE
  1131                           
  1132  002E                     ___ftdiv@f2:	
  1133                           ; 2 bytes @ 0xE
  1134                           
  1135                           
  1136                           ; 3 bytes @ 0xE
  1137  002E                     	ds	2
  1138  0030                     hexadecimalToDecimal@base:	
  1139                           
  1140                           ; 2 bytes @ 0x10
  1141  0030                     	ds	1
  1142  0031                     ___ftdiv@f1:	
  1143                           
  1144                           ; 3 bytes @ 0x11
  1145  0031                     	ds	1
  1146  0032                     hexadecimalToDecimal@hexVal:	
  1147  0032                     sprintf@flag:	
  1148                           ; 1 bytes @ 0x12
  1149                           
  1150  0032                     ___ftmul@exp:	
  1151                           ; 1 bytes @ 0x12
  1152                           
  1153                           
  1154                           ; 1 bytes @ 0x12
  1155  0032                     	ds	1
  1156  0033                     sprintf@idx:	
  1157  0033                     hexadecimalToDecimal@i:	
  1158                           ; 1 bytes @ 0x13
  1159                           
  1160  0033                     ___ftmul@f3_as_product:	
  1161                           ; 2 bytes @ 0x13
  1162                           
  1163                           
  1164                           ; 3 bytes @ 0x13
  1165  0033                     	ds	1
  1166  0034                     ??___ftdiv:	
  1167  0034                     sprintf@ap:	
  1168                           ; 1 bytes @ 0x14
  1169                           
  1170                           
  1171                           ; 1 bytes @ 0x14
  1172  0034                     	ds	1
  1173  0035                     sprintf@val:	
  1174                           
  1175                           ; 2 bytes @ 0x15
  1176  0035                     	ds	1
  1177  0036                     ___ftmul@cntr:	
  1178                           
  1179                           ; 1 bytes @ 0x16
  1180  0036                     	ds	1
  1181  0037                     sprintf@prec:	
  1182  0037                     ___ftmul@sign:	
  1183                           ; 1 bytes @ 0x17
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x17
  1187  0037                     	ds	1
  1188  0038                     sprintf@sp:	
  1189  0038                     ___ftdiv@cntr:	
  1190                           ; 1 bytes @ 0x18
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0x18
  1194  0038                     	ds	1
  1195  0039                     sprintf@c:	
  1196  0039                     ___ftdiv@f3:	
  1197                           ; 1 bytes @ 0x19
  1198                           
  1199                           
  1200                           ; 3 bytes @ 0x19
  1201  0039                     	ds	3
  1202  003C                     ___ftdiv@exp:	
  1203                           
  1204                           ; 1 bytes @ 0x1C
  1205  003C                     	ds	1
  1206  003D                     ___ftdiv@sign:	
  1207                           
  1208                           ; 1 bytes @ 0x1D
  1209  003D                     	ds	1
  1210  003E                     ?___fttol:	
  1211  003E                     ___fttol@f1:	
  1212                           ; 4 bytes @ 0x1E
  1213                           
  1214                           
  1215                           ; 3 bytes @ 0x1E
  1216  003E                     	ds	4
  1217  0042                     ??___fttol:	
  1218                           
  1219                           ; 1 bytes @ 0x22
  1220  0042                     	ds	4
  1221  0046                     ___fttol@sign1:	
  1222                           
  1223                           ; 1 bytes @ 0x26
  1224  0046                     	ds	1
  1225  0047                     ___fttol@lval:	
  1226                           
  1227                           ; 4 bytes @ 0x27
  1228  0047                     	ds	4
  1229  004B                     ___fttol@exp1:	
  1230                           
  1231                           ; 1 bytes @ 0x2B
  1232  004B                     	ds	1
  1233  004C                     ?_applianceControl:	
  1234  004C                     applianceControl@charSwitchLSB:	
  1235                           ; 1 bytes @ 0x2C
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x2C
  1239  004C                     	ds	1
  1240  004D                     applianceControl@charSwitchSTATE:	
  1241                           
  1242                           ; 1 bytes @ 0x2D
  1243  004D                     	ds	1
  1244  004E                     applianceControl@chDimmerSpeedMSB:	
  1245                           
  1246                           ; 1 bytes @ 0x2E
  1247  004E                     	ds	1
  1248  004F                     applianceControl@chDimmerSpeedLSB:	
  1249                           
  1250                           ; 1 bytes @ 0x2F
  1251  004F                     	ds	1
  1252  0050                     applianceControl@charParentalControl:	
  1253                           
  1254                           ; 1 bytes @ 0x30
  1255  0050                     	ds	1
  1256  0051                     applianceControl@charFinalFrameState:	
  1257                           
  1258                           ; 1 bytes @ 0x31
  1259  0051                     	ds	1
  1260  0052                     ??_applianceControl:	
  1261                           
  1262                           ; 1 bytes @ 0x32
  1263  0052                     	ds	8
  1264  005A                     ??_main:	
  1265                           
  1266                           ; 1 bytes @ 0x3A
  1267  005A                     	ds	6
  1268                           
  1269                           	psect	maintext
  1270  00B9                     __pmaintext:	
  1271 ;;
  1272 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1273 ;;
  1274 ;; *************** function _main *****************
  1275 ;; Defined at:
  1276 ;;		line 282 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  dataBufferCo    2    0[BANK2 ] int 
  1281 ;;  man             2    2[BANK2 ] int 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  2  234[None  ] int 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : B1F/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1292 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0
  1293 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1294 ;;      Totals:         0       6       0       4       0       0       0       0       0       0       0
  1295 ;;Total ram usage:       10 bytes
  1296 ;; Hardware stack levels required when called:    5
  1297 ;; This function calls:
  1298 ;;		_GPIO_pin_Initialize
  1299 ;;		_ReceivingIndicationLedBlinking
  1300 ;;		_SwitchOffStatustToGatway
  1301 ;;		_SwitchOnStatustToGatway
  1302 ;;		_TransmissionIndicationLedBlinking
  1303 ;;		_allPeripheralInit
  1304 ;;		_applianceControl
  1305 ;;		_copyReceivedDataBuffer
  1306 ;;		_errorsMain
  1307 ;; This function is called by:
  1308 ;;		Startup code after reset
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _main
  1314  00B9                     _main:	
  1315                           
  1316                           ;main.c: 283: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1320  00B9  3029               	movlw	41
  1321  00BA  0020               	movlb	0	; select bank0
  1322  00BB  00DB               	movwf	??_main+1
  1323  00BC  3096               	movlw	150
  1324  00BD  00DA               	movwf	??_main
  1325  00BE  307F               	movlw	127
  1326  00BF                     u5217:	
  1327  00BF  0B89               	decfsz	9,f
  1328  00C0  28BF               	goto	u5217
  1329  00C1  0BDA               	decfsz	??_main,f
  1330  00C2  28BF               	goto	u5217
  1331  00C3  0BDB               	decfsz	??_main+1,f
  1332  00C4  28BF               	goto	u5217
  1333                           
  1334                           ;main.c: 284: M1=1; M2=1; M3=1; M4=1; M5=1; M6=1; M7=1;M8=1;
  1335  00C5  3001               	movlw	1
  1336  00C6  0020               	movlb	0	; select bank0
  1337  00C7  00EE               	movwf	_M1
  1338  00C8  3000               	movlw	0
  1339  00C9  00EF               	movwf	_M1+1
  1340  00CA  3001               	movlw	1
  1341  00CB  00EC               	movwf	_M2
  1342  00CC  3000               	movlw	0
  1343  00CD  00ED               	movwf	_M2+1
  1344  00CE  3001               	movlw	1
  1345  00CF  00EA               	movwf	_M3
  1346  00D0  3000               	movlw	0
  1347  00D1  00EB               	movwf	_M3+1
  1348  00D2  3001               	movlw	1
  1349  00D3  00E8               	movwf	_M4
  1350  00D4  3000               	movlw	0
  1351  00D5  00E9               	movwf	_M4+1
  1352  00D6  3001               	movlw	1
  1353  00D7  00E6               	movwf	_M5
  1354  00D8  3000               	movlw	0
  1355  00D9  00E7               	movwf	_M5+1
  1356  00DA  3001               	movlw	1
  1357  00DB  00E4               	movwf	_M6
  1358  00DC  3000               	movlw	0
  1359  00DD  00E5               	movwf	_M6+1
  1360  00DE  3001               	movlw	1
  1361  00DF  00E2               	movwf	_M7
  1362  00E0  3000               	movlw	0
  1363  00E1  00E3               	movwf	_M7+1
  1364  00E2  3001               	movlw	1
  1365  00E3  00E0               	movwf	_M8
  1366  00E4  3000               	movlw	0
  1367  00E5  00E1               	movwf	_M8+1
  1368                           
  1369                           ;main.c: 285: M9=1;
  1370  00E6  3001               	movlw	1
  1371  00E7  00F5               	movwf	_M9
  1372  00E8  3000               	movlw	0
  1373  00E9  00F6               	movwf	_M9+1
  1374                           
  1375                           ;main.c: 286: GPIO_pin_Initialize();
  1376  00EA  318B  23CE  3180   	fcall	_GPIO_pin_Initialize
  1377                           
  1378                           ;main.c: 287: allPeripheralInit();
  1379  00ED  318A  228C  3180   	fcall	_allPeripheralInit
  1380  00F0                     l3722:	
  1381                           ;main.c: 289: while(1){
  1382                           
  1383                           
  1384                           ;main.c: 290: if(mainDataReceived==1){
  1385  00F0  0021               	movlb	1	; select bank1
  1386  00F1  036D               	decf	_mainDataReceived^(0+128),w
  1387  00F2  046E               	iorwf	(_mainDataReceived+1)^(0+128),w
  1388  00F3  1D03               	btfss	3,2
  1389  00F4  2974               	goto	l3758
  1390                           
  1391                           ;main.c: 291: mainDataReceived=0;
  1392  00F5  01ED               	clrf	_mainDataReceived^(0+128)
  1393  00F6  01EE               	clrf	(_mainDataReceived+1)^(0+128)
  1394                           
  1395                           ;main.c: 292: if(mainReceivedDataBuffer[0]=='%' && mainReceivedDataBuffer[1]=='%' && mai
      +                          nReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]=='@'){
  1396  00F7  3025               	movlw	37
  1397  00F8  0022               	movlb	2	; select bank2
  1398  00F9  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  1399  00FA  1D03               	btfss	3,2
  1400  00FB  2938               	goto	l3740
  1401  00FC  3025               	movlw	37
  1402  00FD  0621               	xorwf	(_mainReceivedDataBuffer^(0+256)+1),w
  1403  00FE  1D03               	btfss	3,2
  1404  00FF  2938               	goto	l3740
  1405  0100  3040               	movlw	64
  1406  0101  062E               	xorwf	(_mainReceivedDataBuffer^(0+256)+14),w
  1407  0102  1D03               	btfss	3,2
  1408  0103  2938               	goto	l3740
  1409  0104  3040               	movlw	64
  1410  0105  062F               	xorwf	(_mainReceivedDataBuffer^(0+256)+15),w
  1411  0106  1D03               	btfss	3,2
  1412  0107  2938               	goto	l3740
  1413                           
  1414                           ;main.c: 293: ReceivingIndicationLedBlinking();
  1415  0108  318A  22AA  3180   	fcall	_ReceivingIndicationLedBlinking
  1416                           
  1417                           ;main.c: 294: copyReceivedDataBuffer();
  1418  010B  318C  244E  3180   	fcall	_copyReceivedDataBuffer
  1419                           
  1420                           ;main.c: 296: applianceControl(tempReceivedDataBuffer[0],
  1421                           ;main.c: 297: tempReceivedDataBuffer[1],
  1422                           ;main.c: 298: tempReceivedDataBuffer[2],
  1423                           ;main.c: 299: tempReceivedDataBuffer[3],
  1424                           ;main.c: 300: tempReceivedDataBuffer[4],
  1425                           ;main.c: 301: tempReceivedDataBuffer[5],
  1426                           ;main.c: 302: tempReceivedDataBuffer[6]);
  1427  010E  0022               	movlb	2	; select bank2
  1428  010F  0841               	movf	(_tempReceivedDataBuffer^(0+256)+1),w
  1429  0110  0020               	movlb	0	; select bank0
  1430  0111  00DA               	movwf	??_main
  1431  0112  085A               	movf	??_main,w
  1432  0113  00CC               	movwf	applianceControl@charSwitchLSB
  1433  0114  0022               	movlb	2	; select bank2
  1434  0115  0842               	movf	(_tempReceivedDataBuffer^(0+256)+2),w
  1435  0116  0020               	movlb	0	; select bank0
  1436  0117  00DB               	movwf	??_main+1
  1437  0118  085B               	movf	??_main+1,w
  1438  0119  00CD               	movwf	applianceControl@charSwitchSTATE
  1439  011A  0022               	movlb	2	; select bank2
  1440  011B  0843               	movf	(_tempReceivedDataBuffer^(0+256)+3),w
  1441  011C  0020               	movlb	0	; select bank0
  1442  011D  00DC               	movwf	??_main+2
  1443  011E  085C               	movf	??_main+2,w
  1444  011F  00CE               	movwf	applianceControl@chDimmerSpeedMSB
  1445  0120  0022               	movlb	2	; select bank2
  1446  0121  0844               	movf	(_tempReceivedDataBuffer^(0+256)+4),w
  1447  0122  0020               	movlb	0	; select bank0
  1448  0123  00DD               	movwf	??_main+3
  1449  0124  085D               	movf	??_main+3,w
  1450  0125  00CF               	movwf	applianceControl@chDimmerSpeedLSB
  1451  0126  0022               	movlb	2	; select bank2
  1452  0127  0845               	movf	(_tempReceivedDataBuffer^(0+256)+5),w
  1453  0128  0020               	movlb	0	; select bank0
  1454  0129  00DE               	movwf	??_main+4
  1455  012A  085E               	movf	??_main+4,w
  1456  012B  00D0               	movwf	applianceControl@charParentalControl
  1457  012C  0022               	movlb	2	; select bank2
  1458  012D  0846               	movf	(_tempReceivedDataBuffer^(0+256)+6),w
  1459  012E  0020               	movlb	0	; select bank0
  1460  012F  00DF               	movwf	??_main+5
  1461  0130  085F               	movf	??_main+5,w
  1462  0131  00D1               	movwf	applianceControl@charFinalFrameState
  1463  0132  0022               	movlb	2	; select bank2
  1464  0133  0840               	movf	_tempReceivedDataBuffer^(0+256),w
  1465  0134  3184  2412  3180   	fcall	_applianceControl
  1466                           
  1467                           ;main.c: 304: }
  1468  0137  2974               	goto	l3758
  1469  0138                     l3740:	
  1470                           
  1471                           ;main.c: 305: else
  1472                           ;main.c: 306: {
  1473                           ;main.c: 308: errorsMain("ERLS");
  1474  0138  3019               	movlw	low (STR_4| (0+32768))
  1475  0139  0020               	movlb	0	; select bank0
  1476  013A  00A0               	movwf	errorsMain@errNum
  1477  013B  3090               	movlw	high (STR_4| (0+32768))
  1478  013C  00A1               	movwf	errorsMain@errNum+1
  1479  013D  318B  2332  3180   	fcall	_errorsMain
  1480                           
  1481                           ;main.c: 309: RC1STAbits.SPEN=0;
  1482  0140  0023               	movlb	3	; select bank3
  1483  0141  139D               	bcf	29,7	;volatile
  1484                           
  1485                           ;main.c: 310: RC1STAbits.CREN = 0;
  1486  0142  121D               	bcf	29,4	;volatile
  1487                           
  1488                           ;main.c: 311: for(int dataBufferCounter = 0; dataBufferCounter< 15; dataBufferCounter++)
  1489  0143  0022               	movlb	2	; select bank2
  1490  0144  01CA               	clrf	main@dataBufferCounter^(0+256)
  1491  0145  01CB               	clrf	(main@dataBufferCounter+1)^(0+256)
  1492  0146  084B               	movf	(main@dataBufferCounter+1)^(0+256),w
  1493  0147  3A80               	xorlw	128
  1494  0148  0020               	movlb	0	; select bank0
  1495  0149  00DA               	movwf	??_main
  1496  014A  3080               	movlw	128
  1497  014B  025A               	subwf	??_main,w
  1498  014C  1D03               	skipz
  1499  014D  2951               	goto	u4475
  1500  014E  300F               	movlw	15
  1501  014F  0022               	movlb	2	; select bank2
  1502  0150  024A               	subwf	main@dataBufferCounter^(0+256),w
  1503  0151                     u4475:	
  1504  0151  1803               	btfsc	3,0
  1505  0152  2971               	goto	l240
  1506  0153                     l3752:	
  1507                           
  1508                           ;main.c: 312: {
  1509                           ;main.c: 313: mainReceivedDataBuffer[dataBufferCounter] = '#';
  1510  0153  3023               	movlw	35
  1511  0154  0020               	movlb	0	; select bank0
  1512  0155  00DA               	movwf	??_main
  1513  0156  0022               	movlb	2	; select bank2
  1514  0157  084A               	movf	main@dataBufferCounter^(0+256),w
  1515  0158  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1516  0159  0086               	movwf	6
  1517  015A  3001               	movlw	1	; select bank2/3
  1518  015B  0087               	movwf	7
  1519  015C  0020               	movlb	0	; select bank0
  1520  015D  085A               	movf	??_main,w
  1521  015E  0081               	movwf	1
  1522  015F  3001               	movlw	1
  1523  0160  0022               	movlb	2	; select bank2
  1524  0161  07CA               	addwf	main@dataBufferCounter^(0+256),f
  1525  0162  3000               	movlw	0
  1526  0163  3DCB               	addwfc	(main@dataBufferCounter+1)^(0+256),f
  1527  0164  084B               	movf	(main@dataBufferCounter+1)^(0+256),w
  1528  0165  3A80               	xorlw	128
  1529  0166  0020               	movlb	0	; select bank0
  1530  0167  00DA               	movwf	??_main
  1531  0168  3080               	movlw	128
  1532  0169  025A               	subwf	??_main,w
  1533  016A  1D03               	skipz
  1534  016B  296F               	goto	u4485
  1535  016C  300F               	movlw	15
  1536  016D  0022               	movlb	2	; select bank2
  1537  016E  024A               	subwf	main@dataBufferCounter^(0+256),w
  1538  016F                     u4485:	
  1539  016F  1C03               	skipc
  1540  0170  2953               	goto	l3752
  1541  0171                     l240:	
  1542                           
  1543                           ;main.c: 314: }
  1544                           ;main.c: 315: RC1STAbits.CREN = 1;
  1545  0171  0023               	movlb	3	; select bank3
  1546  0172  161D               	bsf	29,4	;volatile
  1547                           
  1548                           ;main.c: 316: RC1STAbits.SPEN=1;
  1549  0173  179D               	bsf	29,7	;volatile
  1550  0174                     l3758:	
  1551                           
  1552                           ;main.c: 317: }
  1553                           ;main.c: 318: }
  1554                           ;main.c: 323: int man = 1;
  1555  0174  3001               	movlw	1
  1556  0175  0022               	movlb	2	; select bank2
  1557  0176  00CC               	movwf	main@man^(0+256)
  1558  0177  3000               	movlw	0
  1559  0178  00CD               	movwf	(main@man^(0+256)+1)
  1560                           
  1561                           ;main.c: 324: if(copy_parentalLockBuffer[1] == '0' && PORTDbits.RD6 == 0 && M1 == 0)
  1562  0179  3030               	movlw	48
  1563  017A  0021               	movlb	1	; select bank1
  1564  017B  0656               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  1565  017C  1D03               	btfss	3,2
  1566  017D  299F               	goto	l3776
  1567  017E  0020               	movlb	0	; select bank0
  1568  017F  1B0F               	btfsc	15,6	;volatile
  1569  0180  299F               	goto	l3776
  1570  0181  086E               	movf	_M1,w
  1571  0182  046F               	iorwf	_M1+1,w
  1572  0183  1D03               	btfss	3,2
  1573  0184  299F               	goto	l3776
  1574                           
  1575                           ;main.c: 325: {
  1576                           ;main.c: 326: if(man == 1)
  1577  0185  0022               	movlb	2	; select bank2
  1578  0186  034C               	decf	main@man^(0+256),w
  1579  0187  044D               	iorwf	(main@man+1)^(0+256),w
  1580  0188  1D03               	btfss	3,2
  1581  0189  2997               	goto	l3772
  1582                           
  1583                           ;main.c: 327: {
  1584                           ;main.c: 328: SwitchOnStatustToGatway(1);
  1585  018A  3001               	movlw	1
  1586  018B  0020               	movlb	0	; select bank0
  1587  018C  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  1588  018D  3000               	movlw	0
  1589  018E  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  1590  018F  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  1591                           
  1592                           ;main.c: 330: TransmissionIndicationLedBlinking();
  1593  0192  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1594                           
  1595                           ;main.c: 331: PORTEbits.RE0=1;
  1596  0195  0020               	movlb	0	; select bank0
  1597  0196  1410               	bsf	16,0	;volatile
  1598  0197                     l3772:	
  1599                           
  1600                           ;main.c: 333: }
  1601                           ;main.c: 334: man=0;
  1602  0197  0022               	movlb	2	; select bank2
  1603  0198  01CC               	clrf	main@man^(0+256)
  1604  0199  01CD               	clrf	(main@man+1)^(0+256)
  1605                           
  1606                           ;main.c: 335: M1=1;
  1607  019A  3001               	movlw	1
  1608  019B  0020               	movlb	0	; select bank0
  1609  019C  00EE               	movwf	_M1
  1610  019D  3000               	movlw	0
  1611  019E  00EF               	movwf	_M1+1
  1612  019F                     l3776:	
  1613                           
  1614                           ;main.c: 337: }
  1615                           ;main.c: 339: if(copy_parentalLockBuffer[1] == '0' && PORTDbits.RD6 == 1 && M1 == 1)
  1616  019F  3030               	movlw	48
  1617  01A0  0021               	movlb	1	; select bank1
  1618  01A1  0656               	xorwf	(_copy_parentalLockBuffer^(0+128)+1),w
  1619  01A2  1D03               	btfss	3,2
  1620  01A3  29C3               	goto	l3792
  1621  01A4  0020               	movlb	0	; select bank0
  1622  01A5  1F0F               	btfss	15,6	;volatile
  1623  01A6  29C3               	goto	l3792
  1624  01A7  036E               	decf	_M1,w
  1625  01A8  046F               	iorwf	_M1+1,w
  1626  01A9  1D03               	btfss	3,2
  1627  01AA  29C3               	goto	l3792
  1628                           
  1629                           ;main.c: 340: {
  1630                           ;main.c: 342: if(man==1)
  1631  01AB  0022               	movlb	2	; select bank2
  1632  01AC  034C               	decf	main@man^(0+256),w
  1633  01AD  044D               	iorwf	(main@man+1)^(0+256),w
  1634  01AE  1D03               	btfss	3,2
  1635  01AF  29BD               	goto	l3788
  1636                           
  1637                           ;main.c: 343: {
  1638                           ;main.c: 344: SwitchOffStatustToGatway(1);
  1639  01B0  3001               	movlw	1
  1640  01B1  0020               	movlb	0	; select bank0
  1641  01B2  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  1642  01B3  3000               	movlw	0
  1643  01B4  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  1644  01B5  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  1645                           
  1646                           ;main.c: 345: TransmissionIndicationLedBlinking();
  1647  01B8  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1648                           
  1649                           ;main.c: 346: PORTEbits.RE0=0;
  1650  01BB  0020               	movlb	0	; select bank0
  1651  01BC  1010               	bcf	16,0	;volatile
  1652  01BD                     l3788:	
  1653                           
  1654                           ;main.c: 347: }
  1655                           ;main.c: 348: man=0;
  1656  01BD  0022               	movlb	2	; select bank2
  1657  01BE  01CC               	clrf	main@man^(0+256)
  1658  01BF  01CD               	clrf	(main@man+1)^(0+256)
  1659                           
  1660                           ;main.c: 349: M1=0;
  1661  01C0  0020               	movlb	0	; select bank0
  1662  01C1  01EE               	clrf	_M1
  1663  01C2  01EF               	clrf	_M1+1
  1664  01C3                     l3792:	
  1665                           
  1666                           ;main.c: 350: }
  1667                           ;main.c: 354: if(copy_parentalLockBuffer[2] == '0' && PORTDbits.RD7 == 0 && M2 == 0)
  1668  01C3  3030               	movlw	48
  1669  01C4  0021               	movlb	1	; select bank1
  1670  01C5  0657               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  1671  01C6  1D03               	btfss	3,2
  1672  01C7  29E9               	goto	l3808
  1673  01C8  0020               	movlb	0	; select bank0
  1674  01C9  1B8F               	btfsc	15,7	;volatile
  1675  01CA  29E9               	goto	l3808
  1676  01CB  086C               	movf	_M2,w
  1677  01CC  046D               	iorwf	_M2+1,w
  1678  01CD  1D03               	btfss	3,2
  1679  01CE  29E9               	goto	l3808
  1680                           
  1681                           ;main.c: 355: {
  1682                           ;main.c: 356: if(man==1)
  1683  01CF  0022               	movlb	2	; select bank2
  1684  01D0  034C               	decf	main@man^(0+256),w
  1685  01D1  044D               	iorwf	(main@man+1)^(0+256),w
  1686  01D2  1D03               	btfss	3,2
  1687  01D3  29E1               	goto	l3804
  1688                           
  1689                           ;main.c: 357: {
  1690                           ;main.c: 358: SwitchOnStatustToGatway(2);
  1691  01D4  3002               	movlw	2
  1692  01D5  0020               	movlb	0	; select bank0
  1693  01D6  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  1694  01D7  3000               	movlw	0
  1695  01D8  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  1696  01D9  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  1697                           
  1698                           ;main.c: 359: TransmissionIndicationLedBlinking();
  1699  01DC  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1700                           
  1701                           ;main.c: 360: PORTEbits.RE1=1;
  1702  01DF  0020               	movlb	0	; select bank0
  1703  01E0  1490               	bsf	16,1	;volatile
  1704  01E1                     l3804:	
  1705                           
  1706                           ;main.c: 361: }
  1707                           ;main.c: 362: man=0;
  1708  01E1  0022               	movlb	2	; select bank2
  1709  01E2  01CC               	clrf	main@man^(0+256)
  1710  01E3  01CD               	clrf	(main@man+1)^(0+256)
  1711                           
  1712                           ;main.c: 363: M2=1;
  1713  01E4  3001               	movlw	1
  1714  01E5  0020               	movlb	0	; select bank0
  1715  01E6  00EC               	movwf	_M2
  1716  01E7  3000               	movlw	0
  1717  01E8  00ED               	movwf	_M2+1
  1718  01E9                     l3808:	
  1719                           
  1720                           ;main.c: 364: }
  1721                           ;main.c: 366: if(copy_parentalLockBuffer[2] == '0' && PORTDbits.RD7 == 1 && M2 == 1)
  1722  01E9  3030               	movlw	48
  1723  01EA  0021               	movlb	1	; select bank1
  1724  01EB  0657               	xorwf	(_copy_parentalLockBuffer^(0+128)+2),w
  1725  01EC  1D03               	btfss	3,2
  1726  01ED  2A0D               	goto	l3824
  1727  01EE  0020               	movlb	0	; select bank0
  1728  01EF  1F8F               	btfss	15,7	;volatile
  1729  01F0  2A0D               	goto	l3824
  1730  01F1  036C               	decf	_M2,w
  1731  01F2  046D               	iorwf	_M2+1,w
  1732  01F3  1D03               	btfss	3,2
  1733  01F4  2A0D               	goto	l3824
  1734                           
  1735                           ;main.c: 367: {
  1736                           ;main.c: 368: if(man==1)
  1737  01F5  0022               	movlb	2	; select bank2
  1738  01F6  034C               	decf	main@man^(0+256),w
  1739  01F7  044D               	iorwf	(main@man+1)^(0+256),w
  1740  01F8  1D03               	btfss	3,2
  1741  01F9  2A07               	goto	l3820
  1742                           
  1743                           ;main.c: 369: {
  1744                           ;main.c: 370: SwitchOffStatustToGatway(2);
  1745  01FA  3002               	movlw	2
  1746  01FB  0020               	movlb	0	; select bank0
  1747  01FC  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  1748  01FD  3000               	movlw	0
  1749  01FE  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  1750  01FF  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  1751                           
  1752                           ;main.c: 371: TransmissionIndicationLedBlinking();
  1753  0202  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1754                           
  1755                           ;main.c: 372: PORTEbits.RE1=0;
  1756  0205  0020               	movlb	0	; select bank0
  1757  0206  1090               	bcf	16,1	;volatile
  1758  0207                     l3820:	
  1759                           
  1760                           ;main.c: 373: }
  1761                           ;main.c: 374: man=0;
  1762  0207  0022               	movlb	2	; select bank2
  1763  0208  01CC               	clrf	main@man^(0+256)
  1764  0209  01CD               	clrf	(main@man+1)^(0+256)
  1765                           
  1766                           ;main.c: 375: M2=0;
  1767  020A  0020               	movlb	0	; select bank0
  1768  020B  01EC               	clrf	_M2
  1769  020C  01ED               	clrf	_M2+1
  1770  020D                     l3824:	
  1771                           
  1772                           ;main.c: 376: }
  1773                           ;main.c: 381: if(copy_parentalLockBuffer[3] == '0' && PORTBbits.RB0 == 0 && M3 == 0)
  1774  020D  3030               	movlw	48
  1775  020E  0021               	movlb	1	; select bank1
  1776  020F  0658               	xorwf	(_copy_parentalLockBuffer^(0+128)+3),w
  1777  0210  1D03               	btfss	3,2
  1778  0211  2A33               	goto	l3840
  1779  0212  0020               	movlb	0	; select bank0
  1780  0213  180D               	btfsc	13,0	;volatile
  1781  0214  2A33               	goto	l3840
  1782  0215  086A               	movf	_M3,w
  1783  0216  046B               	iorwf	_M3+1,w
  1784  0217  1D03               	btfss	3,2
  1785  0218  2A33               	goto	l3840
  1786                           
  1787                           ;main.c: 382: {
  1788                           ;main.c: 383: if(man == 1)
  1789  0219  0022               	movlb	2	; select bank2
  1790  021A  034C               	decf	main@man^(0+256),w
  1791  021B  044D               	iorwf	(main@man+1)^(0+256),w
  1792  021C  1D03               	btfss	3,2
  1793  021D  2A2B               	goto	l3836
  1794                           
  1795                           ;main.c: 384: {
  1796                           ;main.c: 385: SwitchOnStatustToGatway(3);
  1797  021E  3003               	movlw	3
  1798  021F  0020               	movlb	0	; select bank0
  1799  0220  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  1800  0221  3000               	movlw	0
  1801  0222  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  1802  0223  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  1803                           
  1804                           ;main.c: 386: TransmissionIndicationLedBlinking();
  1805  0226  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1806                           
  1807                           ;main.c: 387: PORTGbits.RG0=1;
  1808  0229  0025               	movlb	5	; select bank5
  1809  022A  140D               	bsf	13,0	;volatile
  1810  022B                     l3836:	
  1811                           
  1812                           ;main.c: 388: }
  1813                           ;main.c: 389: man=0;
  1814  022B  0022               	movlb	2	; select bank2
  1815  022C  01CC               	clrf	main@man^(0+256)
  1816  022D  01CD               	clrf	(main@man+1)^(0+256)
  1817                           
  1818                           ;main.c: 390: M3=1;
  1819  022E  3001               	movlw	1
  1820  022F  0020               	movlb	0	; select bank0
  1821  0230  00EA               	movwf	_M3
  1822  0231  3000               	movlw	0
  1823  0232  00EB               	movwf	_M3+1
  1824  0233                     l3840:	
  1825                           
  1826                           ;main.c: 392: }
  1827                           ;main.c: 394: if(copy_parentalLockBuffer[3] == '0' && PORTBbits.RB0 == 1 && M3 == 1)
  1828  0233  3030               	movlw	48
  1829  0234  0021               	movlb	1	; select bank1
  1830  0235  0658               	xorwf	(_copy_parentalLockBuffer^(0+128)+3),w
  1831  0236  1D03               	btfss	3,2
  1832  0237  2A57               	goto	l3856
  1833  0238  0020               	movlb	0	; select bank0
  1834  0239  1C0D               	btfss	13,0	;volatile
  1835  023A  2A57               	goto	l3856
  1836  023B  036A               	decf	_M3,w
  1837  023C  046B               	iorwf	_M3+1,w
  1838  023D  1D03               	btfss	3,2
  1839  023E  2A57               	goto	l3856
  1840                           
  1841                           ;main.c: 395: {
  1842                           ;main.c: 396: if(man==1)
  1843  023F  0022               	movlb	2	; select bank2
  1844  0240  034C               	decf	main@man^(0+256),w
  1845  0241  044D               	iorwf	(main@man+1)^(0+256),w
  1846  0242  1D03               	btfss	3,2
  1847  0243  2A51               	goto	l3852
  1848                           
  1849                           ;main.c: 397: {
  1850                           ;main.c: 398: SwitchOffStatustToGatway(3);
  1851  0244  3003               	movlw	3
  1852  0245  0020               	movlb	0	; select bank0
  1853  0246  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  1854  0247  3000               	movlw	0
  1855  0248  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  1856  0249  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  1857                           
  1858                           ;main.c: 399: TransmissionIndicationLedBlinking();
  1859  024C  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1860                           
  1861                           ;main.c: 400: PORTGbits.RG0=0;
  1862  024F  0025               	movlb	5	; select bank5
  1863  0250  100D               	bcf	13,0	;volatile
  1864  0251                     l3852:	
  1865                           
  1866                           ;main.c: 401: }
  1867                           ;main.c: 402: man=0;
  1868  0251  0022               	movlb	2	; select bank2
  1869  0252  01CC               	clrf	main@man^(0+256)
  1870  0253  01CD               	clrf	(main@man+1)^(0+256)
  1871                           
  1872                           ;main.c: 403: M3=0;
  1873  0254  0020               	movlb	0	; select bank0
  1874  0255  01EA               	clrf	_M3
  1875  0256  01EB               	clrf	_M3+1
  1876  0257                     l3856:	
  1877                           
  1878                           ;main.c: 405: }
  1879                           ;main.c: 410: if(copy_parentalLockBuffer[4] == '0' && PORTBbits.RB1 == 0 && M4 == 0)
  1880  0257  3030               	movlw	48
  1881  0258  0021               	movlb	1	; select bank1
  1882  0259  0659               	xorwf	(_copy_parentalLockBuffer^(0+128)+4),w
  1883  025A  1D03               	btfss	3,2
  1884  025B  2A7D               	goto	l3872
  1885  025C  0020               	movlb	0	; select bank0
  1886  025D  188D               	btfsc	13,1	;volatile
  1887  025E  2A7D               	goto	l3872
  1888  025F  0868               	movf	_M4,w
  1889  0260  0469               	iorwf	_M4+1,w
  1890  0261  1D03               	btfss	3,2
  1891  0262  2A7D               	goto	l3872
  1892                           
  1893                           ;main.c: 411: {
  1894                           ;main.c: 412: if(man==1)
  1895  0263  0022               	movlb	2	; select bank2
  1896  0264  034C               	decf	main@man^(0+256),w
  1897  0265  044D               	iorwf	(main@man+1)^(0+256),w
  1898  0266  1D03               	btfss	3,2
  1899  0267  2A75               	goto	l3868
  1900                           
  1901                           ;main.c: 413: {
  1902                           ;main.c: 414: SwitchOnStatustToGatway(4);
  1903  0268  3004               	movlw	4
  1904  0269  0020               	movlb	0	; select bank0
  1905  026A  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  1906  026B  3000               	movlw	0
  1907  026C  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  1908  026D  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  1909                           
  1910                           ;main.c: 415: TransmissionIndicationLedBlinking();
  1911  0270  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1912                           
  1913                           ;main.c: 416: PORTGbits.RG3=1;
  1914  0273  0025               	movlb	5	; select bank5
  1915  0274  158D               	bsf	13,3	;volatile
  1916  0275                     l3868:	
  1917                           
  1918                           ;main.c: 417: }
  1919                           ;main.c: 418: man=0;
  1920  0275  0022               	movlb	2	; select bank2
  1921  0276  01CC               	clrf	main@man^(0+256)
  1922  0277  01CD               	clrf	(main@man+1)^(0+256)
  1923                           
  1924                           ;main.c: 419: M4=1;
  1925  0278  3001               	movlw	1
  1926  0279  0020               	movlb	0	; select bank0
  1927  027A  00E8               	movwf	_M4
  1928  027B  3000               	movlw	0
  1929  027C  00E9               	movwf	_M4+1
  1930  027D                     l3872:	
  1931                           
  1932                           ;main.c: 421: }
  1933                           ;main.c: 423: if(copy_parentalLockBuffer[4] == '0' && PORTBbits.RB1 == 1 && M4 == 1)
  1934  027D  3030               	movlw	48
  1935  027E  0021               	movlb	1	; select bank1
  1936  027F  0659               	xorwf	(_copy_parentalLockBuffer^(0+128)+4),w
  1937  0280  1D03               	btfss	3,2
  1938  0281  2AA1               	goto	l3888
  1939  0282  0020               	movlb	0	; select bank0
  1940  0283  1C8D               	btfss	13,1	;volatile
  1941  0284  2AA1               	goto	l3888
  1942  0285  0368               	decf	_M4,w
  1943  0286  0469               	iorwf	_M4+1,w
  1944  0287  1D03               	btfss	3,2
  1945  0288  2AA1               	goto	l3888
  1946                           
  1947                           ;main.c: 424: {
  1948                           ;main.c: 425: if(man==1)
  1949  0289  0022               	movlb	2	; select bank2
  1950  028A  034C               	decf	main@man^(0+256),w
  1951  028B  044D               	iorwf	(main@man+1)^(0+256),w
  1952  028C  1D03               	btfss	3,2
  1953  028D  2A9B               	goto	l3884
  1954                           
  1955                           ;main.c: 426: {
  1956                           ;main.c: 428: SwitchOffStatustToGatway(4);
  1957  028E  3004               	movlw	4
  1958  028F  0020               	movlb	0	; select bank0
  1959  0290  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  1960  0291  3000               	movlw	0
  1961  0292  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  1962  0293  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  1963                           
  1964                           ;main.c: 429: TransmissionIndicationLedBlinking();
  1965  0296  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  1966                           
  1967                           ;main.c: 430: PORTGbits.RG3=0;
  1968  0299  0025               	movlb	5	; select bank5
  1969  029A  118D               	bcf	13,3	;volatile
  1970  029B                     l3884:	
  1971                           
  1972                           ;main.c: 431: }
  1973                           ;main.c: 432: man=0;
  1974  029B  0022               	movlb	2	; select bank2
  1975  029C  01CC               	clrf	main@man^(0+256)
  1976  029D  01CD               	clrf	(main@man+1)^(0+256)
  1977                           
  1978                           ;main.c: 433: M4=0;
  1979  029E  0020               	movlb	0	; select bank0
  1980  029F  01E8               	clrf	_M4
  1981  02A0  01E9               	clrf	_M4+1
  1982  02A1                     l3888:	
  1983                           
  1984                           ;main.c: 435: }
  1985                           ;main.c: 437: if(copy_parentalLockBuffer[5] == '0' && PORTBbits.RB2 == 0 && M5 == 0)
  1986  02A1  3030               	movlw	48
  1987  02A2  0021               	movlb	1	; select bank1
  1988  02A3  065A               	xorwf	(_copy_parentalLockBuffer^(0+128)+5),w
  1989  02A4  1D03               	btfss	3,2
  1990  02A5  2AC7               	goto	l3904
  1991  02A6  0020               	movlb	0	; select bank0
  1992  02A7  190D               	btfsc	13,2	;volatile
  1993  02A8  2AC7               	goto	l3904
  1994  02A9  0866               	movf	_M5,w
  1995  02AA  0467               	iorwf	_M5+1,w
  1996  02AB  1D03               	btfss	3,2
  1997  02AC  2AC7               	goto	l3904
  1998                           
  1999                           ;main.c: 438: {
  2000                           ;main.c: 439: if(man==1)
  2001  02AD  0022               	movlb	2	; select bank2
  2002  02AE  034C               	decf	main@man^(0+256),w
  2003  02AF  044D               	iorwf	(main@man+1)^(0+256),w
  2004  02B0  1D03               	btfss	3,2
  2005  02B1  2ABF               	goto	l3900
  2006                           
  2007                           ;main.c: 440: {
  2008                           ;main.c: 441: SwitchOnStatustToGatway(5);
  2009  02B2  3005               	movlw	5
  2010  02B3  0020               	movlb	0	; select bank0
  2011  02B4  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2012  02B5  3000               	movlw	0
  2013  02B6  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2014  02B7  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  2015                           
  2016                           ;main.c: 442: TransmissionIndicationLedBlinking();
  2017  02BA  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2018                           
  2019                           ;main.c: 443: PORTGbits.RG4=1;
  2020  02BD  0025               	movlb	5	; select bank5
  2021  02BE  160D               	bsf	13,4	;volatile
  2022  02BF                     l3900:	
  2023                           
  2024                           ;main.c: 444: }
  2025                           ;main.c: 445: man=0;
  2026  02BF  0022               	movlb	2	; select bank2
  2027  02C0  01CC               	clrf	main@man^(0+256)
  2028  02C1  01CD               	clrf	(main@man+1)^(0+256)
  2029                           
  2030                           ;main.c: 446: M5=1;
  2031  02C2  3001               	movlw	1
  2032  02C3  0020               	movlb	0	; select bank0
  2033  02C4  00E6               	movwf	_M5
  2034  02C5  3000               	movlw	0
  2035  02C6  00E7               	movwf	_M5+1
  2036  02C7                     l3904:	
  2037                           
  2038                           ;main.c: 448: }
  2039                           ;main.c: 450: if(copy_parentalLockBuffer[5] == '0' && PORTBbits.RB2 == 1 && M5 == 1)
  2040  02C7  3030               	movlw	48
  2041  02C8  0021               	movlb	1	; select bank1
  2042  02C9  065A               	xorwf	(_copy_parentalLockBuffer^(0+128)+5),w
  2043  02CA  1D03               	btfss	3,2
  2044  02CB  2AEB               	goto	l3920
  2045  02CC  0020               	movlb	0	; select bank0
  2046  02CD  1D0D               	btfss	13,2	;volatile
  2047  02CE  2AEB               	goto	l3920
  2048  02CF  0366               	decf	_M5,w
  2049  02D0  0467               	iorwf	_M5+1,w
  2050  02D1  1D03               	btfss	3,2
  2051  02D2  2AEB               	goto	l3920
  2052                           
  2053                           ;main.c: 451: {
  2054                           ;main.c: 452: if(man==1)
  2055  02D3  0022               	movlb	2	; select bank2
  2056  02D4  034C               	decf	main@man^(0+256),w
  2057  02D5  044D               	iorwf	(main@man+1)^(0+256),w
  2058  02D6  1D03               	btfss	3,2
  2059  02D7  2AE5               	goto	l3916
  2060                           
  2061                           ;main.c: 453: {
  2062                           ;main.c: 455: SwitchOffStatustToGatway(5);
  2063  02D8  3005               	movlw	5
  2064  02D9  0020               	movlb	0	; select bank0
  2065  02DA  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2066  02DB  3000               	movlw	0
  2067  02DC  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2068  02DD  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  2069                           
  2070                           ;main.c: 456: TransmissionIndicationLedBlinking();
  2071  02E0  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2072                           
  2073                           ;main.c: 457: PORTGbits.RG4=0;
  2074  02E3  0025               	movlb	5	; select bank5
  2075  02E4  120D               	bcf	13,4	;volatile
  2076  02E5                     l3916:	
  2077                           
  2078                           ;main.c: 458: }
  2079                           ;main.c: 459: man=0;
  2080  02E5  0022               	movlb	2	; select bank2
  2081  02E6  01CC               	clrf	main@man^(0+256)
  2082  02E7  01CD               	clrf	(main@man+1)^(0+256)
  2083                           
  2084                           ;main.c: 460: M5=0;
  2085  02E8  0020               	movlb	0	; select bank0
  2086  02E9  01E6               	clrf	_M5
  2087  02EA  01E7               	clrf	_M5+1
  2088  02EB                     l3920:	
  2089                           
  2090                           ;main.c: 462: }
  2091                           ;main.c: 465: if(copy_parentalLockBuffer[6] == '0' && PORTBbits.RB3 == 0 && M6 == 0)
  2092  02EB  3030               	movlw	48
  2093  02EC  0021               	movlb	1	; select bank1
  2094  02ED  065B               	xorwf	(_copy_parentalLockBuffer^(0+128)+6),w
  2095  02EE  1D03               	btfss	3,2
  2096  02EF  2B11               	goto	l3936
  2097  02F0  0020               	movlb	0	; select bank0
  2098  02F1  198D               	btfsc	13,3	;volatile
  2099  02F2  2B11               	goto	l3936
  2100  02F3  0864               	movf	_M6,w
  2101  02F4  0465               	iorwf	_M6+1,w
  2102  02F5  1D03               	btfss	3,2
  2103  02F6  2B11               	goto	l3936
  2104                           
  2105                           ;main.c: 466: {
  2106                           ;main.c: 467: if(man==1)
  2107  02F7  0022               	movlb	2	; select bank2
  2108  02F8  034C               	decf	main@man^(0+256),w
  2109  02F9  044D               	iorwf	(main@man+1)^(0+256),w
  2110  02FA  1D03               	btfss	3,2
  2111  02FB  2B09               	goto	l3932
  2112                           
  2113                           ;main.c: 468: {
  2114                           ;main.c: 469: SwitchOnStatustToGatway(6);
  2115  02FC  3006               	movlw	6
  2116  02FD  0020               	movlb	0	; select bank0
  2117  02FE  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2118  02FF  3000               	movlw	0
  2119  0300  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2120  0301  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  2121                           
  2122                           ;main.c: 470: TransmissionIndicationLedBlinking();
  2123  0304  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2124                           
  2125                           ;main.c: 471: PORTFbits.RF6=1;
  2126  0307  0025               	movlb	5	; select bank5
  2127  0308  170C               	bsf	12,6	;volatile
  2128  0309                     l3932:	
  2129                           
  2130                           ;main.c: 472: }
  2131                           ;main.c: 473: man=0;
  2132  0309  0022               	movlb	2	; select bank2
  2133  030A  01CC               	clrf	main@man^(0+256)
  2134  030B  01CD               	clrf	(main@man+1)^(0+256)
  2135                           
  2136                           ;main.c: 474: M6=1;
  2137  030C  3001               	movlw	1
  2138  030D  0020               	movlb	0	; select bank0
  2139  030E  00E4               	movwf	_M6
  2140  030F  3000               	movlw	0
  2141  0310  00E5               	movwf	_M6+1
  2142  0311                     l3936:	
  2143                           
  2144                           ;main.c: 476: }
  2145                           ;main.c: 478: if(copy_parentalLockBuffer[6] == '0' && PORTBbits.RB3 == 1 && M6 == 1)
  2146  0311  3030               	movlw	48
  2147  0312  0021               	movlb	1	; select bank1
  2148  0313  065B               	xorwf	(_copy_parentalLockBuffer^(0+128)+6),w
  2149  0314  1D03               	btfss	3,2
  2150  0315  2B35               	goto	l3952
  2151  0316  0020               	movlb	0	; select bank0
  2152  0317  1D8D               	btfss	13,3	;volatile
  2153  0318  2B35               	goto	l3952
  2154  0319  0364               	decf	_M6,w
  2155  031A  0465               	iorwf	_M6+1,w
  2156  031B  1D03               	btfss	3,2
  2157  031C  2B35               	goto	l3952
  2158                           
  2159                           ;main.c: 479: {
  2160                           ;main.c: 480: if(man==1)
  2161  031D  0022               	movlb	2	; select bank2
  2162  031E  034C               	decf	main@man^(0+256),w
  2163  031F  044D               	iorwf	(main@man+1)^(0+256),w
  2164  0320  1D03               	btfss	3,2
  2165  0321  2B2F               	goto	l3948
  2166                           
  2167                           ;main.c: 481: {
  2168                           ;main.c: 483: SwitchOffStatustToGatway(6);
  2169  0322  3006               	movlw	6
  2170  0323  0020               	movlb	0	; select bank0
  2171  0324  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2172  0325  3000               	movlw	0
  2173  0326  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2174  0327  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  2175                           
  2176                           ;main.c: 484: TransmissionIndicationLedBlinking();
  2177  032A  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2178                           
  2179                           ;main.c: 485: PORTFbits.RF6=0;
  2180  032D  0025               	movlb	5	; select bank5
  2181  032E  130C               	bcf	12,6	;volatile
  2182  032F                     l3948:	
  2183                           
  2184                           ;main.c: 486: }
  2185                           ;main.c: 487: man=0;
  2186  032F  0022               	movlb	2	; select bank2
  2187  0330  01CC               	clrf	main@man^(0+256)
  2188  0331  01CD               	clrf	(main@man+1)^(0+256)
  2189                           
  2190                           ;main.c: 488: M6=0;
  2191  0332  0020               	movlb	0	; select bank0
  2192  0333  01E4               	clrf	_M6
  2193  0334  01E5               	clrf	_M6+1
  2194  0335                     l3952:	
  2195                           
  2196                           ;main.c: 490: }
  2197                           ;main.c: 494: if(copy_parentalLockBuffer[7] == '0' && PORTBbits.RB4 == 0 && M7 == 0)
  2198  0335  3030               	movlw	48
  2199  0336  0021               	movlb	1	; select bank1
  2200  0337  065C               	xorwf	(_copy_parentalLockBuffer^(0+128)+7),w
  2201  0338  1D03               	btfss	3,2
  2202  0339  2B5B               	goto	l3968
  2203  033A  0020               	movlb	0	; select bank0
  2204  033B  1A0D               	btfsc	13,4	;volatile
  2205  033C  2B5B               	goto	l3968
  2206  033D  0862               	movf	_M7,w
  2207  033E  0463               	iorwf	_M7+1,w
  2208  033F  1D03               	btfss	3,2
  2209  0340  2B5B               	goto	l3968
  2210                           
  2211                           ;main.c: 495: {
  2212                           ;main.c: 496: if(man==1)
  2213  0341  0022               	movlb	2	; select bank2
  2214  0342  034C               	decf	main@man^(0+256),w
  2215  0343  044D               	iorwf	(main@man+1)^(0+256),w
  2216  0344  1D03               	btfss	3,2
  2217  0345  2B53               	goto	l3964
  2218                           
  2219                           ;main.c: 497: {
  2220                           ;main.c: 498: SwitchOnStatustToGatway(7);
  2221  0346  3007               	movlw	7
  2222  0347  0020               	movlb	0	; select bank0
  2223  0348  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2224  0349  3000               	movlw	0
  2225  034A  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2226  034B  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  2227                           
  2228                           ;main.c: 499: TransmissionIndicationLedBlinking();
  2229  034E  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2230                           
  2231                           ;main.c: 500: PORTFbits.RF5=1;
  2232  0351  0025               	movlb	5	; select bank5
  2233  0352  168C               	bsf	12,5	;volatile
  2234  0353                     l3964:	
  2235                           
  2236                           ;main.c: 501: }
  2237                           ;main.c: 502: man=0;
  2238  0353  0022               	movlb	2	; select bank2
  2239  0354  01CC               	clrf	main@man^(0+256)
  2240  0355  01CD               	clrf	(main@man+1)^(0+256)
  2241                           
  2242                           ;main.c: 503: M7=1;
  2243  0356  3001               	movlw	1
  2244  0357  0020               	movlb	0	; select bank0
  2245  0358  00E2               	movwf	_M7
  2246  0359  3000               	movlw	0
  2247  035A  00E3               	movwf	_M7+1
  2248  035B                     l3968:	
  2249                           
  2250                           ;main.c: 505: }
  2251                           ;main.c: 507: if(copy_parentalLockBuffer[7] == '0' && PORTBbits.RB4 == 1 && M7 == 1)
  2252  035B  3030               	movlw	48
  2253  035C  0021               	movlb	1	; select bank1
  2254  035D  065C               	xorwf	(_copy_parentalLockBuffer^(0+128)+7),w
  2255  035E  1D03               	btfss	3,2
  2256  035F  2B7F               	goto	l3984
  2257  0360  0020               	movlb	0	; select bank0
  2258  0361  1E0D               	btfss	13,4	;volatile
  2259  0362  2B7F               	goto	l3984
  2260  0363  0362               	decf	_M7,w
  2261  0364  0463               	iorwf	_M7+1,w
  2262  0365  1D03               	btfss	3,2
  2263  0366  2B7F               	goto	l3984
  2264                           
  2265                           ;main.c: 508: {
  2266                           ;main.c: 509: if(man==1)
  2267  0367  0022               	movlb	2	; select bank2
  2268  0368  034C               	decf	main@man^(0+256),w
  2269  0369  044D               	iorwf	(main@man+1)^(0+256),w
  2270  036A  1D03               	btfss	3,2
  2271  036B  2B79               	goto	l3980
  2272                           
  2273                           ;main.c: 510: {
  2274                           ;main.c: 512: SwitchOffStatustToGatway(7);
  2275  036C  3007               	movlw	7
  2276  036D  0020               	movlb	0	; select bank0
  2277  036E  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2278  036F  3000               	movlw	0
  2279  0370  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2280  0371  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  2281                           
  2282                           ;main.c: 513: TransmissionIndicationLedBlinking();
  2283  0374  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2284                           
  2285                           ;main.c: 514: PORTFbits.RF5=0;
  2286  0377  0025               	movlb	5	; select bank5
  2287  0378  128C               	bcf	12,5	;volatile
  2288  0379                     l3980:	
  2289                           
  2290                           ;main.c: 515: }
  2291                           ;main.c: 516: man=0;
  2292  0379  0022               	movlb	2	; select bank2
  2293  037A  01CC               	clrf	main@man^(0+256)
  2294  037B  01CD               	clrf	(main@man+1)^(0+256)
  2295                           
  2296                           ;main.c: 517: M7=0;
  2297  037C  0020               	movlb	0	; select bank0
  2298  037D  01E2               	clrf	_M7
  2299  037E  01E3               	clrf	_M7+1
  2300  037F                     l3984:	
  2301                           
  2302                           ;main.c: 519: }
  2303                           ;main.c: 524: if(copy_parentalLockBuffer[8] == '0' && PORTBbits.RB5 == 0 && M8 == 0)
  2304  037F  3030               	movlw	48
  2305  0380  0021               	movlb	1	; select bank1
  2306  0381  065D               	xorwf	(_copy_parentalLockBuffer^(0+128)+8),w
  2307  0382  1D03               	btfss	3,2
  2308  0383  2BA5               	goto	l4000
  2309  0384  0020               	movlb	0	; select bank0
  2310  0385  1A8D               	btfsc	13,5	;volatile
  2311  0386  2BA5               	goto	l4000
  2312  0387  0860               	movf	_M8,w
  2313  0388  0461               	iorwf	_M8+1,w
  2314  0389  1D03               	btfss	3,2
  2315  038A  2BA5               	goto	l4000
  2316                           
  2317                           ;main.c: 525: {
  2318                           ;main.c: 526: if(man==1)
  2319  038B  0022               	movlb	2	; select bank2
  2320  038C  034C               	decf	main@man^(0+256),w
  2321  038D  044D               	iorwf	(main@man+1)^(0+256),w
  2322  038E  1D03               	btfss	3,2
  2323  038F  2B9D               	goto	l3996
  2324                           
  2325                           ;main.c: 527: {
  2326                           ;main.c: 528: SwitchOnStatustToGatway(8);
  2327  0390  3008               	movlw	8
  2328  0391  0020               	movlb	0	; select bank0
  2329  0392  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2330  0393  3000               	movlw	0
  2331  0394  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2332  0395  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  2333                           
  2334                           ;main.c: 529: TransmissionIndicationLedBlinking();
  2335  0398  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2336                           
  2337                           ;main.c: 530: PORTFbits.RF4=1;
  2338  039B  0025               	movlb	5	; select bank5
  2339  039C  160C               	bsf	12,4	;volatile
  2340  039D                     l3996:	
  2341                           
  2342                           ;main.c: 531: }
  2343                           ;main.c: 532: man=0;
  2344  039D  0022               	movlb	2	; select bank2
  2345  039E  01CC               	clrf	main@man^(0+256)
  2346  039F  01CD               	clrf	(main@man+1)^(0+256)
  2347                           
  2348                           ;main.c: 533: M8=1;
  2349  03A0  3001               	movlw	1
  2350  03A1  0020               	movlb	0	; select bank0
  2351  03A2  00E0               	movwf	_M8
  2352  03A3  3000               	movlw	0
  2353  03A4  00E1               	movwf	_M8+1
  2354  03A5                     l4000:	
  2355                           
  2356                           ;main.c: 535: }
  2357                           ;main.c: 537: if(copy_parentalLockBuffer[8] == '0' && PORTBbits.RB5 == 1 && M8 == 1)
  2358  03A5  3030               	movlw	48
  2359  03A6  0021               	movlb	1	; select bank1
  2360  03A7  065D               	xorwf	(_copy_parentalLockBuffer^(0+128)+8),w
  2361  03A8  1D03               	btfss	3,2
  2362  03A9  2BC9               	goto	l4016
  2363  03AA  0020               	movlb	0	; select bank0
  2364  03AB  1E8D               	btfss	13,5	;volatile
  2365  03AC  2BC9               	goto	l4016
  2366  03AD  0360               	decf	_M8,w
  2367  03AE  0461               	iorwf	_M8+1,w
  2368  03AF  1D03               	btfss	3,2
  2369  03B0  2BC9               	goto	l4016
  2370                           
  2371                           ;main.c: 538: {
  2372                           ;main.c: 539: if(man==1)
  2373  03B1  0022               	movlb	2	; select bank2
  2374  03B2  034C               	decf	main@man^(0+256),w
  2375  03B3  044D               	iorwf	(main@man+1)^(0+256),w
  2376  03B4  1D03               	btfss	3,2
  2377  03B5  2BC3               	goto	l4012
  2378                           
  2379                           ;main.c: 540: {
  2380                           ;main.c: 542: SwitchOffStatustToGatway(8);
  2381  03B6  3008               	movlw	8
  2382  03B7  0020               	movlb	0	; select bank0
  2383  03B8  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2384  03B9  3000               	movlw	0
  2385  03BA  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2386  03BB  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  2387                           
  2388                           ;main.c: 543: TransmissionIndicationLedBlinking();
  2389  03BE  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2390                           
  2391                           ;main.c: 544: PORTFbits.RF4=0;
  2392  03C1  0025               	movlb	5	; select bank5
  2393  03C2  120C               	bcf	12,4	;volatile
  2394  03C3                     l4012:	
  2395                           
  2396                           ;main.c: 545: }
  2397                           ;main.c: 546: man=0;
  2398  03C3  0022               	movlb	2	; select bank2
  2399  03C4  01CC               	clrf	main@man^(0+256)
  2400  03C5  01CD               	clrf	(main@man+1)^(0+256)
  2401                           
  2402                           ;main.c: 547: M8=0;
  2403  03C6  0020               	movlb	0	; select bank0
  2404  03C7  01E0               	clrf	_M8
  2405  03C8  01E1               	clrf	_M8+1
  2406  03C9                     l4016:	
  2407                           
  2408                           ;main.c: 549: }
  2409                           ;main.c: 551: if(copy_parentalLockBuffer[9] == '0' && PORTDbits.RD5 == 0 && M9 == 0)
  2410  03C9  3030               	movlw	48
  2411  03CA  0021               	movlb	1	; select bank1
  2412  03CB  065E               	xorwf	(_copy_parentalLockBuffer^(0+128)+9),w
  2413  03CC  1D03               	btfss	3,2
  2414  03CD  2BEE               	goto	l4032
  2415  03CE  0020               	movlb	0	; select bank0
  2416  03CF  1A8F               	btfsc	15,5	;volatile
  2417  03D0  2BEE               	goto	l4032
  2418  03D1  0875               	movf	_M9,w
  2419  03D2  0476               	iorwf	_M9+1,w
  2420  03D3  1D03               	btfss	3,2
  2421  03D4  2BEE               	goto	l4032
  2422                           
  2423                           ;main.c: 552: {
  2424                           ;main.c: 553: if(man==1)
  2425  03D5  0022               	movlb	2	; select bank2
  2426  03D6  034C               	decf	main@man^(0+256),w
  2427  03D7  044D               	iorwf	(main@man+1)^(0+256),w
  2428  03D8  1D03               	btfss	3,2
  2429  03D9  2BE7               	goto	l4028
  2430                           
  2431                           ;main.c: 554: {
  2432                           ;main.c: 557: SwitchOnStatustToGatway(10);
  2433  03DA  300A               	movlw	10
  2434  03DB  0020               	movlb	0	; select bank0
  2435  03DC  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2436  03DD  3000               	movlw	0
  2437  03DE  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2438  03DF  318C  24B3  3180   	fcall	_SwitchOnStatustToGatway
  2439                           
  2440                           ;main.c: 558: TransmissionIndicationLedBlinking();
  2441  03E2  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2442                           
  2443                           ;main.c: 559: PORTFbits.RF3=0;
  2444  03E5  0025               	movlb	5	; select bank5
  2445  03E6  118C               	bcf	12,3	;volatile
  2446  03E7                     l4028:	
  2447                           
  2448                           ;main.c: 560: }
  2449                           ;main.c: 561: man=0;
  2450  03E7  0022               	movlb	2	; select bank2
  2451  03E8  01CC               	clrf	main@man^(0+256)
  2452  03E9  01CD               	clrf	(main@man+1)^(0+256)
  2453                           
  2454                           ;main.c: 562: M9=1;
  2455  03EA  3001               	movlw	1
  2456  03EB  00F5               	movwf	_M9
  2457  03EC  3000               	movlw	0
  2458  03ED  00F6               	movwf	_M9+1
  2459  03EE                     l4032:	
  2460                           
  2461                           ;main.c: 564: }
  2462                           ;main.c: 566: if(copy_parentalLockBuffer[9] == '0' && PORTDbits.RD5 == 1 && M9 == 1)
  2463  03EE  3030               	movlw	48
  2464  03EF  0021               	movlb	1	; select bank1
  2465  03F0  065E               	xorwf	(_copy_parentalLockBuffer^(0+128)+9),w
  2466  03F1  1D03               	btfss	3,2
  2467  03F2  28F0               	goto	l3722
  2468  03F3  0020               	movlb	0	; select bank0
  2469  03F4  1E8F               	btfss	15,5	;volatile
  2470  03F5  28F0               	goto	l3722
  2471  03F6  0375               	decf	_M9,w
  2472  03F7  0476               	iorwf	_M9+1,w
  2473  03F8  1D03               	btfss	3,2
  2474  03F9  28F0               	goto	l3722
  2475                           
  2476                           ;main.c: 567: {
  2477                           ;main.c: 568: if(man==1)
  2478  03FA  0022               	movlb	2	; select bank2
  2479  03FB  034C               	decf	main@man^(0+256),w
  2480  03FC  044D               	iorwf	(main@man+1)^(0+256),w
  2481  03FD  1D03               	btfss	3,2
  2482  03FE  2C0C               	goto	l4044
  2483                           
  2484                           ;main.c: 569: {
  2485                           ;main.c: 571: SwitchOffStatustToGatway(10);
  2486  03FF  300A               	movlw	10
  2487  0400  0020               	movlb	0	; select bank0
  2488  0401  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2489  0402  3000               	movlw	0
  2490  0403  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2491  0404  318C  2480  3180   	fcall	_SwitchOffStatustToGatway
  2492                           
  2493                           ;main.c: 572: TransmissionIndicationLedBlinking();
  2494  0407  318A  22BB  3180   	fcall	_TransmissionIndicationLedBlinking
  2495                           
  2496                           ;main.c: 573: PORTFbits.RF3=1;
  2497  040A  0025               	movlb	5	; select bank5
  2498  040B  158C               	bsf	12,3	;volatile
  2499  040C                     l4044:	
  2500                           
  2501                           ;main.c: 574: }
  2502                           ;main.c: 575: man=0;
  2503  040C  0022               	movlb	2	; select bank2
  2504  040D  01CC               	clrf	main@man^(0+256)
  2505  040E  01CD               	clrf	(main@man+1)^(0+256)
  2506                           
  2507                           ;main.c: 576: M9=0;
  2508  040F  01F5               	clrf	_M9
  2509  0410  01F6               	clrf	_M9+1
  2510  0411  28F0               	goto	l3722
  2511  0412                     __end_of_main:	
  2512                           
  2513                           	psect	text1
  2514  0B32                     __ptext1:	
  2515 ;; *************** function _errorsMain *****************
  2516 ;; Defined at:
  2517 ;;		line 828 in file "main.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  errNum          2    0[BANK0 ] PTR const unsigned char 
  2520 ;;		 -> STR_4(5), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  2535 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  2536 ;;Total ram usage:        3 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _errorsMain
  2548  0B32                     _errorsMain:	
  2549  0B32                     l3698:	
  2550                           ;main.c: 830: while(*errNum != (0))
  2551                           
  2552                           ;incstack = 0
  2553                           ; Regs used in _errorsMain: [wreg-fsr0h+status,2+status,0+pclath]
  2554                           
  2555  0B32  0020               	movlb	0	; select bank0
  2556  0B33  0820               	movf	errorsMain@errNum,w
  2557  0B34  0084               	movwf	4
  2558  0B35  0821               	movf	errorsMain@errNum+1,w
  2559  0B36  0085               	movwf	5
  2560  0B37  0012               	moviw fsr0++
  2561  0B38  1903               	btfsc	3,2
  2562  0B39  0008               	return
  2563  0B3A                     l322:	
  2564                           ;main.c: 831: {
  2565                           ;main.c: 832: while (!TX1STAbits.TRMT);
  2566                           
  2567  0B3A  0023               	movlb	3	; select bank3
  2568  0B3B  1C9E               	btfss	30,1	;volatile
  2569  0B3C  2B3A               	goto	l322
  2570                           
  2571                           ;main.c: 833: TX1REG = *errNum;
  2572  0B3D  0020               	movlb	0	; select bank0
  2573  0B3E  0820               	movf	errorsMain@errNum,w
  2574  0B3F  0084               	movwf	4
  2575  0B40  0821               	movf	errorsMain@errNum+1,w
  2576  0B41  0085               	movwf	5
  2577  0B42  0800               	movf	0,w	;code access
  2578  0B43  0023               	movlb	3	; select bank3
  2579  0B44  009A               	movwf	26	;volatile
  2580                           
  2581                           ;main.c: 834: *errNum++;
  2582  0B45  3001               	movlw	1
  2583  0B46  0020               	movlb	0	; select bank0
  2584  0B47  07A0               	addwf	errorsMain@errNum,f
  2585  0B48  3000               	movlw	0
  2586  0B49  3DA1               	addwfc	errorsMain@errNum+1,f
  2587  0B4A  2B32               	goto	l3698
  2588  0B4B                     __end_of_errorsMain:	
  2589                           
  2590                           	psect	text2
  2591  0C4E                     __ptext2:	
  2592 ;; *************** function _copyReceivedDataBuffer *****************
  2593 ;; Defined at:
  2594 ;;		line 875 in file "main.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  dataBufferCo    2    1[BANK0 ] int 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2609 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  2610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  2611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  2612 ;;Total ram usage:        3 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    2
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function _copyReceivedDataBuffer
  2624  0C4E                     _copyReceivedDataBuffer:	
  2625                           
  2626                           ;main.c: 876: int dataBufferCounter=2;
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _copyReceivedDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2630  0C4E  3002               	movlw	2
  2631  0C4F  0020               	movlb	0	; select bank0
  2632  0C50  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  2633  0C51  3000               	movlw	0
  2634  0C52  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  2635                           
  2636                           ;main.c: 877: for(dataBufferCounter=2;dataBufferCounter<9;dataBufferCounter++){
  2637  0C53  3002               	movlw	2
  2638  0C54  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  2639  0C55  3000               	movlw	0
  2640  0C56  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  2641  0C57                     L1:	
  2642  0C57  0822               	movf	copyReceivedDataBuffer@dataBufferCounter+1,w
  2643  0C58  3A80               	xorlw	128
  2644  0C59  00A0               	movwf	??_copyReceivedDataBuffer
  2645  0C5A  3080               	movlw	128
  2646  0C5B  0220               	subwf	??_copyReceivedDataBuffer,w
  2647  0C5C  1D03               	skipz
  2648  0C5D  2C60               	goto	u4385
  2649  0C5E  3009               	movlw	9
  2650  0C5F  0221               	subwf	copyReceivedDataBuffer@dataBufferCounter,w
  2651  0C60                     u4385:	
  2652  0C60  1803               	btfsc	3,0
  2653  0C61  0008               	return
  2654                           
  2655                           ;main.c: 878: tempReceivedDataBuffer[dataBufferCounter-2]=mainReceivedDataBuffer[dataBuf
      +                          ferCounter];
  2656  0C62  0020               	movlb	0	; select bank0
  2657  0C63  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  2658  0C64  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  2659  0C65  0086               	movwf	6
  2660  0C66  3001               	movlw	1	; select bank2/3
  2661  0C67  0087               	movwf	7
  2662  0C68  0801               	movf	1,w
  2663  0C69  00A0               	movwf	??_copyReceivedDataBuffer
  2664  0C6A  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  2665  0C6B  3EFE               	addlw	254
  2666  0C6C  3E40               	addlw	(low (_tempReceivedDataBuffer| (0+256)))& (0+255)
  2667  0C6D  0086               	movwf	6
  2668  0C6E  3001               	movlw	1	; select bank2/3
  2669  0C6F  0087               	movwf	7
  2670  0C70  0820               	movf	??_copyReceivedDataBuffer,w
  2671  0C71  0081               	movwf	1
  2672                           
  2673                           ;main.c: 879: mainReceivedDataBuffer[dataBufferCounter]='#';
  2674  0C72  3023               	movlw	35
  2675  0C73  00A0               	movwf	??_copyReceivedDataBuffer
  2676  0C74  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  2677  0C75  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  2678  0C76  0086               	movwf	6
  2679  0C77  3001               	movlw	1	; select bank2/3
  2680  0C78  0087               	movwf	7
  2681  0C79  0820               	movf	??_copyReceivedDataBuffer,w
  2682  0C7A  0081               	movwf	1
  2683  0C7B  3001               	movlw	1
  2684  0C7C  07A1               	addwf	copyReceivedDataBuffer@dataBufferCounter,f
  2685  0C7D  3000               	movlw	0
  2686  0C7E  3DA2               	addwfc	copyReceivedDataBuffer@dataBufferCounter+1,f
  2687  0C7F  2C57               	goto	L1
  2688  0C80                     __end_of_copyReceivedDataBuffer:	
  2689                           
  2690                           	psect	text3
  2691  0412                     __ptext3:	
  2692 ;; *************** function _applianceControl *****************
  2693 ;; Defined at:
  2694 ;;		line 3 in file "applicationcontrol.h"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  charSwitchMS    1    wreg     unsigned char 
  2697 ;;  charSwitchLS    1   44[BANK0 ] unsigned char 
  2698 ;;  charSwitchST    1   45[BANK0 ] unsigned char 
  2699 ;;  chDimmerSpee    1   46[BANK0 ] unsigned char 
  2700 ;;  chDimmerSpee    1   47[BANK0 ] unsigned char 
  2701 ;;  charParental    1   48[BANK0 ] unsigned char 
  2702 ;;  charFinalFra    1   49[BANK0 ] unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  charSwitchMS    1   37[BANK1 ] unsigned char 
  2705 ;;  HexlevelBuff    5    8[BANK1 ] unsigned char [5]
  2706 ;;  NeedPulse       4   27[BANK1 ] unsigned long 
  2707 ;;  Pulse           4   23[BANK1 ] unsigned long 
  2708 ;;  CompleteCloc    4   13[BANK1 ] unsigned long 
  2709 ;;  strL            3   34[BANK1 ] unsigned char [3]
  2710 ;;  strH            3   31[BANK1 ] unsigned char [3]
  2711 ;;  ConvertIntTo    3   40[BANK1 ] float 
  2712 ;;  clockPerCycl    3   20[BANK1 ] float 
  2713 ;;  deno            3   17[BANK1 ] float 
  2714 ;;  integerSwitc    2   51[BANK1 ] int 
  2715 ;;  dimmerSpeedS    2   45[BANK1 ] unsigned char [2]
  2716 ;;  currentState    2   49[BANK1 ] int 
  2717 ;;  integerSwitc    2   47[BANK1 ] int 
  2718 ;;  switchNumber    2   38[BANK1 ] unsigned char [2]
  2719 ;;  integerSpeed    2   43[BANK1 ] int 
  2720 ;;  end             2    6[BANK1 ] int 
  2721 ;;  start           2    4[BANK1 ] int 
  2722 ;;  remainder       2    2[BANK1 ] int 
  2723 ;;  ConvertStrin    2    0[BANK1 ] int 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2733 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         0       0      53       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         0      14      53       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:       67 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    4
  2740 ;; This function calls:
  2741 ;;		___awtoft
  2742 ;;		___ftdiv
  2743 ;;		___ftmul
  2744 ;;		___fttol
  2745 ;;		_atoi
  2746 ;;		_hexadecimalToDecimal
  2747 ;;		_sendAcknowledgment
  2748 ;;		_sprintf
  2749 ;;		_strlen
  2750 ;;		_strncpy
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _applianceControl
  2758  0412                     _applianceControl:	
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _applianceControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2762                           ;applianceControl@charSwitchMSB stored from wreg
  2763  0412  0021               	movlb	1	; select bank1
  2764  0413  00C5               	movwf	applianceControl@charSwitchMSB^(0+128)
  2765                           
  2766                           ;applicationcontrol.h: 7: int integerSwitchNumber = 0;
  2767  0414  01CF               	clrf	applianceControl@integerSwitchNumber^(0+128)
  2768  0415  01D0               	clrf	(applianceControl@integerSwitchNumber+1)^(0+128)
  2769                           
  2770                           ;applicationcontrol.h: 8: int integerSwitchState = 0;
  2771  0416  01D3               	clrf	applianceControl@integerSwitchState^(0+128)
  2772  0417  01D4               	clrf	(applianceControl@integerSwitchState+1)^(0+128)
  2773                           
  2774                           ;applicationcontrol.h: 9: int integerSpeed = 0;
  2775  0418  01CB               	clrf	applianceControl@integerSpeed^(0+128)
  2776  0419  01CC               	clrf	(applianceControl@integerSpeed+1)^(0+128)
  2777                           
  2778                           ;applicationcontrol.h: 10: int currentStateBufferPositions=0;
  2779  041A  01D1               	clrf	applianceControl@currentStateBufferPositions^(0+128)
  2780  041B  01D2               	clrf	(applianceControl@currentStateBufferPositions+1)^(0+128)
  2781                           
  2782                           ;applicationcontrol.h: 12: int ConvertStringIntoInt=0;
  2783  041C  01A0               	clrf	applianceControl@ConvertStringIntoInt^(0+128)
  2784  041D  01A1               	clrf	(applianceControl@ConvertStringIntoInt+1)^(0+128)
  2785                           
  2786                           ;applicationcontrol.h: 13: float ConvertIntToTimeInMilisec=0;
  2787  041E  3000               	movlw	0
  2788  041F  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  2789  0420  3000               	movlw	0
  2790  0421  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  2791  0422  3000               	movlw	0
  2792  0423  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  2793                           
  2794                           ;applicationcontrol.h: 14: unsigned long long int Pulse=0,NeedPulse=0,CompleteClock =655
      +                          35;
  2795  0424  3000               	movlw	0
  2796  0425  00BA               	movwf	(applianceControl@Pulse+3)^(0+128)
  2797  0426  3000               	movlw	0
  2798  0427  00B9               	movwf	(applianceControl@Pulse+2)^(0+128)
  2799  0428  3000               	movlw	0
  2800  0429  00B8               	movwf	(applianceControl@Pulse+1)^(0+128)
  2801  042A  3000               	movlw	0
  2802  042B  00B7               	movwf	applianceControl@Pulse^(0+128)
  2803  042C  3000               	movlw	0
  2804  042D  00BE               	movwf	(applianceControl@NeedPulse+3)^(0+128)
  2805  042E  3000               	movlw	0
  2806  042F  00BD               	movwf	(applianceControl@NeedPulse+2)^(0+128)
  2807  0430  3000               	movlw	0
  2808  0431  00BC               	movwf	(applianceControl@NeedPulse+1)^(0+128)
  2809  0432  3000               	movlw	0
  2810  0433  00BB               	movwf	applianceControl@NeedPulse^(0+128)
  2811  0434  3000               	movlw	0
  2812  0435  00B0               	movwf	(applianceControl@CompleteClock+3)^(0+128)
  2813  0436  3000               	movlw	0
  2814  0437  00AF               	movwf	(applianceControl@CompleteClock+2)^(0+128)
  2815  0438  30FF               	movlw	255
  2816  0439  00AE               	movwf	(applianceControl@CompleteClock+1)^(0+128)
  2817  043A  30FF               	movlw	255
  2818  043B  00AD               	movwf	applianceControl@CompleteClock^(0+128)
  2819                           
  2820                           ;applicationcontrol.h: 15: float deno = 20.0;
  2821  043C  3000               	movlw	0
  2822  043D  00B1               	movwf	applianceControl@deno^(0+128)
  2823  043E  30A0               	movlw	160
  2824  043F  00B2               	movwf	(applianceControl@deno+1)^(0+128)
  2825  0440  3041               	movlw	65
  2826  0441  00B3               	movwf	(applianceControl@deno+2)^(0+128)
  2827                           
  2828                           ;applicationcontrol.h: 16: float clockPerCycle=0.25;
  2829  0442  3000               	movlw	0
  2830  0443  00B4               	movwf	applianceControl@clockPerCycle^(0+128)
  2831  0444  3080               	movlw	128
  2832  0445  00B5               	movwf	(applianceControl@clockPerCycle+1)^(0+128)
  2833  0446  303E               	movlw	62
  2834  0447  00B6               	movwf	(applianceControl@clockPerCycle+2)^(0+128)
  2835                           
  2836                           ;applicationcontrol.h: 17: int remainder=0;
  2837  0448  01A2               	clrf	applianceControl@remainder^(0+128)
  2838  0449  01A3               	clrf	(applianceControl@remainder+1)^(0+128)
  2839                           
  2840                           ;applicationcontrol.h: 18: char HexlevelBuffer[5];
  2841                           ;applicationcontrol.h: 19: int start=0;
  2842  044A  01A4               	clrf	applianceControl@start^(0+128)
  2843  044B  01A5               	clrf	(applianceControl@start+1)^(0+128)
  2844                           
  2845                           ;applicationcontrol.h: 20: int end = strlen(HexlevelBuffer)-1;
  2846  044C  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  2847  044D  318B  23A9  3184   	fcall	_strlen
  2848  0450  0020               	movlb	0	; select bank0
  2849  0451  0820               	movf	?_strlen,w
  2850  0452  3EFF               	addlw	255
  2851  0453  0021               	movlb	1	; select bank1
  2852  0454  00A6               	movwf	applianceControl@end^(0+128)
  2853  0455  30FF               	movlw	255
  2854  0456  0020               	movlb	0	; select bank0
  2855  0457  3D21               	addwfc	?_strlen+1,w
  2856  0458  0021               	movlb	1	; select bank1
  2857  0459  00A7               	movwf	(applianceControl@end+1)^(0+128)
  2858                           
  2859                           ;applicationcontrol.h: 21: char strH[3],strL[3];
  2860                           ;applicationcontrol.h: 24: char switchNumberStringBuffer[2]="#";
  2861  045A  0866               	movf	(applianceControl@F3882+1)^(0+128),w
  2862  045B  00C7               	movwf	(applianceControl@switchNumberStringBuffer+1)^(0+128)
  2863  045C  0865               	movf	applianceControl@F3882^(0+128),w
  2864  045D  00C6               	movwf	applianceControl@switchNumberStringBuffer^(0+128)
  2865                           
  2866                           ;applicationcontrol.h: 25: char dimmerSpeedStringBuffer[2]="#";
  2867  045E  0864               	movf	(applianceControl@F3884+1)^(0+128),w
  2868  045F  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer+1)^(0+128)
  2869  0460  0863               	movf	applianceControl@F3884^(0+128),w
  2870  0461  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  2871                           
  2872                           ;applicationcontrol.h: 27: switchNumberStringBuffer[0]=charSwitchMSB;
  2873  0462  0845               	movf	applianceControl@charSwitchMSB^(0+128),w
  2874  0463  0020               	movlb	0	; select bank0
  2875  0464  00D2               	movwf	??_applianceControl
  2876  0465  0852               	movf	??_applianceControl,w
  2877  0466  0021               	movlb	1	; select bank1
  2878  0467  00C6               	movwf	applianceControl@switchNumberStringBuffer^(0+128)
  2879                           
  2880                           ;applicationcontrol.h: 28: switchNumberStringBuffer[1]=charSwitchLSB;
  2881  0468  0020               	movlb	0	; select bank0
  2882  0469  084C               	movf	applianceControl@charSwitchLSB,w
  2883  046A  00D2               	movwf	??_applianceControl
  2884  046B  0852               	movf	??_applianceControl,w
  2885  046C  0021               	movlb	1	; select bank1
  2886  046D  00C7               	movwf	(applianceControl@switchNumberStringBuffer^(0+128)+1)
  2887                           
  2888                           ;applicationcontrol.h: 29: integerSwitchNumber = atoi(switchNumberStringBuffer);
  2889  046E  30C6               	movlw	(low (applianceControl@switchNumberStringBuffer| 0))& (0+255)
  2890  046F  318D  25BA  3184   	fcall	_atoi
  2891  0472  0020               	movlb	0	; select bank0
  2892  0473  0827               	movf	?_atoi+1,w
  2893  0474  0021               	movlb	1	; select bank1
  2894  0475  00D0               	movwf	(applianceControl@integerSwitchNumber+1)^(0+128)
  2895  0476  0020               	movlb	0	; select bank0
  2896  0477  0826               	movf	?_atoi,w
  2897  0478  0021               	movlb	1	; select bank1
  2898  0479  00CF               	movwf	applianceControl@integerSwitchNumber^(0+128)
  2899                           
  2900                           ;applicationcontrol.h: 33: integerSwitchState = charSwitchSTATE-'0';
  2901  047A  0020               	movlb	0	; select bank0
  2902  047B  084D               	movf	applianceControl@charSwitchSTATE,w
  2903  047C  3ED0               	addlw	208
  2904  047D  0021               	movlb	1	; select bank1
  2905  047E  00D3               	movwf	applianceControl@integerSwitchState^(0+128)
  2906  047F  30FF               	movlw	255
  2907  0480  1803               	skipnc
  2908  0481  3000               	movlw	0
  2909  0482  00D4               	movwf	(applianceControl@integerSwitchState^(0+128)+1)
  2910                           
  2911                           ;applicationcontrol.h: 36: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  2912  0483  0020               	movlb	0	; select bank0
  2913  0484  084E               	movf	applianceControl@chDimmerSpeedMSB,w
  2914  0485  00D2               	movwf	??_applianceControl
  2915  0486  0852               	movf	??_applianceControl,w
  2916  0487  0021               	movlb	1	; select bank1
  2917  0488  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  2918                           
  2919                           ;applicationcontrol.h: 37: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  2920  0489  0020               	movlb	0	; select bank0
  2921  048A  084F               	movf	applianceControl@chDimmerSpeedLSB,w
  2922  048B  00D2               	movwf	??_applianceControl
  2923  048C  0852               	movf	??_applianceControl,w
  2924  048D  0021               	movlb	1	; select bank1
  2925  048E  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer^(0+128)+1)
  2926                           
  2927                           ;applicationcontrol.h: 38: integerSpeed = atoi(dimmerSpeedStringBuffer);
  2928  048F  30CD               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  2929  0490  318D  25BA  3184   	fcall	_atoi
  2930  0493  0020               	movlb	0	; select bank0
  2931  0494  0827               	movf	?_atoi+1,w
  2932  0495  0021               	movlb	1	; select bank1
  2933  0496  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  2934  0497  0020               	movlb	0	; select bank0
  2935  0498  0826               	movf	?_atoi,w
  2936  0499  0021               	movlb	1	; select bank1
  2937  049A  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  2938                           
  2939                           ;applicationcontrol.h: 41: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  2940  049B  0020               	movlb	0	; select bank0
  2941  049C  084E               	movf	applianceControl@chDimmerSpeedMSB,w
  2942  049D  00D2               	movwf	??_applianceControl
  2943  049E  0852               	movf	??_applianceControl,w
  2944  049F  0021               	movlb	1	; select bank1
  2945  04A0  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  2946                           
  2947                           ;applicationcontrol.h: 42: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  2948  04A1  0020               	movlb	0	; select bank0
  2949  04A2  084F               	movf	applianceControl@chDimmerSpeedLSB,w
  2950  04A3  00D2               	movwf	??_applianceControl
  2951  04A4  0852               	movf	??_applianceControl,w
  2952  04A5  0021               	movlb	1	; select bank1
  2953  04A6  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer^(0+128)+1)
  2954                           
  2955                           ;applicationcontrol.h: 43: integerSpeed = atoi(dimmerSpeedStringBuffer);
  2956  04A7  30CD               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  2957  04A8  318D  25BA  3184   	fcall	_atoi
  2958  04AB  0020               	movlb	0	; select bank0
  2959  04AC  0827               	movf	?_atoi+1,w
  2960  04AD  0021               	movlb	1	; select bank1
  2961  04AE  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  2962  04AF  0020               	movlb	0	; select bank0
  2963  04B0  0826               	movf	?_atoi,w
  2964  04B1  0021               	movlb	1	; select bank1
  2965  04B2  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  2966                           
  2967                           ;applicationcontrol.h: 44: integerSpeed = 99-integerSpeed;
  2968  04B3  094B               	comf	applianceControl@integerSpeed^(0+128),w
  2969  04B4  0020               	movlb	0	; select bank0
  2970  04B5  00D2               	movwf	??_applianceControl
  2971  04B6  0021               	movlb	1	; select bank1
  2972  04B7  094C               	comf	(applianceControl@integerSpeed+1)^(0+128),w
  2973  04B8  0020               	movlb	0	; select bank0
  2974  04B9  00D3               	movwf	??_applianceControl+1
  2975  04BA  0AD2               	incf	??_applianceControl,f
  2976  04BB  1903               	skipnz
  2977  04BC  0AD3               	incf	??_applianceControl+1,f
  2978  04BD  0852               	movf	??_applianceControl,w
  2979  04BE  3E63               	addlw	99
  2980  04BF  0021               	movlb	1	; select bank1
  2981  04C0  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  2982  04C1  3000               	movlw	0
  2983  04C2  0020               	movlb	0	; select bank0
  2984  04C3  3D53               	addwfc	??_applianceControl+1,w
  2985  04C4  0021               	movlb	1	; select bank1
  2986  04C5  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  2987                           
  2988                           ;applicationcontrol.h: 45: ConvertIntToTimeInMilisec = (integerSpeed/deno);
  2989  04C6  0831               	movf	applianceControl@deno^(0+128),w
  2990  04C7  0020               	movlb	0	; select bank0
  2991  04C8  00AE               	movwf	___ftdiv@f2
  2992  04C9  0021               	movlb	1	; select bank1
  2993  04CA  0832               	movf	(applianceControl@deno+1)^(0+128),w
  2994  04CB  0020               	movlb	0	; select bank0
  2995  04CC  00AF               	movwf	___ftdiv@f2+1
  2996  04CD  0021               	movlb	1	; select bank1
  2997  04CE  0833               	movf	(applianceControl@deno+2)^(0+128),w
  2998  04CF  0020               	movlb	0	; select bank0
  2999  04D0  00B0               	movwf	___ftdiv@f2+2
  3000  04D1  0021               	movlb	1	; select bank1
  3001  04D2  084C               	movf	(applianceControl@integerSpeed+1)^(0+128),w
  3002  04D3  0020               	movlb	0	; select bank0
  3003  04D4  00A9               	movwf	___awtoft@c+1
  3004  04D5  0021               	movlb	1	; select bank1
  3005  04D6  084B               	movf	applianceControl@integerSpeed^(0+128),w
  3006  04D7  0020               	movlb	0	; select bank0
  3007  04D8  00A8               	movwf	___awtoft@c
  3008  04D9  318B  2387  3184   	fcall	___awtoft
  3009  04DC  0020               	movlb	0	; select bank0
  3010  04DD  0828               	movf	?___awtoft,w
  3011  04DE  00B1               	movwf	___ftdiv@f1
  3012  04DF  0829               	movf	?___awtoft+1,w
  3013  04E0  00B2               	movwf	___ftdiv@f1+1
  3014  04E1  082A               	movf	?___awtoft+2,w
  3015  04E2  00B3               	movwf	___ftdiv@f1+2
  3016  04E3  318E  26A4  3184   	fcall	___ftdiv
  3017  04E6  0020               	movlb	0	; select bank0
  3018  04E7  082E               	movf	?___ftdiv,w
  3019  04E8  0021               	movlb	1	; select bank1
  3020  04E9  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  3021  04EA  0020               	movlb	0	; select bank0
  3022  04EB  082F               	movf	?___ftdiv+1,w
  3023  04EC  0021               	movlb	1	; select bank1
  3024  04ED  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  3025  04EE  0020               	movlb	0	; select bank0
  3026  04EF  0830               	movf	?___ftdiv+2,w
  3027  04F0  0021               	movlb	1	; select bank1
  3028  04F1  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  3029                           
  3030                           ;applicationcontrol.h: 46: ConvertIntToTimeInMilisec = (ConvertIntToTimeInMilisec*1000);
  3031  04F2  3000               	movlw	0
  3032  04F3  0020               	movlb	0	; select bank0
  3033  04F4  00A8               	movwf	___ftmul@f1
  3034  04F5  307A               	movlw	122
  3035  04F6  00A9               	movwf	___ftmul@f1+1
  3036  04F7  3044               	movlw	68
  3037  04F8  00AA               	movwf	___ftmul@f1+2
  3038  04F9  0021               	movlb	1	; select bank1
  3039  04FA  0848               	movf	applianceControl@ConvertIntToTimeInMilisec^(0+128),w
  3040  04FB  0020               	movlb	0	; select bank0
  3041  04FC  00AB               	movwf	___ftmul@f2
  3042  04FD  0021               	movlb	1	; select bank1
  3043  04FE  0849               	movf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128),w
  3044  04FF  0020               	movlb	0	; select bank0
  3045  0500  00AC               	movwf	___ftmul@f2+1
  3046  0501  0021               	movlb	1	; select bank1
  3047  0502  084A               	movf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128),w
  3048  0503  0020               	movlb	0	; select bank0
  3049  0504  00AD               	movwf	___ftmul@f2+2
  3050  0505  3186  26B9  3184   	fcall	___ftmul
  3051  0508  0020               	movlb	0	; select bank0
  3052  0509  0828               	movf	?___ftmul,w
  3053  050A  0021               	movlb	1	; select bank1
  3054  050B  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  3055  050C  0020               	movlb	0	; select bank0
  3056  050D  0829               	movf	?___ftmul+1,w
  3057  050E  0021               	movlb	1	; select bank1
  3058  050F  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  3059  0510  0020               	movlb	0	; select bank0
  3060  0511  082A               	movf	?___ftmul+2,w
  3061  0512  0021               	movlb	1	; select bank1
  3062  0513  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  3063                           
  3064                           ;applicationcontrol.h: 47: Pulse = (ConvertIntToTimeInMilisec/clockPerCycle);
  3065  0514  0848               	movf	applianceControl@ConvertIntToTimeInMilisec^(0+128),w
  3066  0515  0020               	movlb	0	; select bank0
  3067  0516  00B1               	movwf	___ftdiv@f1
  3068  0517  0021               	movlb	1	; select bank1
  3069  0518  0849               	movf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128),w
  3070  0519  0020               	movlb	0	; select bank0
  3071  051A  00B2               	movwf	___ftdiv@f1+1
  3072  051B  0021               	movlb	1	; select bank1
  3073  051C  084A               	movf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128),w
  3074  051D  0020               	movlb	0	; select bank0
  3075  051E  00B3               	movwf	___ftdiv@f1+2
  3076  051F  0021               	movlb	1	; select bank1
  3077  0520  0834               	movf	applianceControl@clockPerCycle^(0+128),w
  3078  0521  0020               	movlb	0	; select bank0
  3079  0522  00AE               	movwf	___ftdiv@f2
  3080  0523  0021               	movlb	1	; select bank1
  3081  0524  0835               	movf	(applianceControl@clockPerCycle+1)^(0+128),w
  3082  0525  0020               	movlb	0	; select bank0
  3083  0526  00AF               	movwf	___ftdiv@f2+1
  3084  0527  0021               	movlb	1	; select bank1
  3085  0528  0836               	movf	(applianceControl@clockPerCycle+2)^(0+128),w
  3086  0529  0020               	movlb	0	; select bank0
  3087  052A  00B0               	movwf	___ftdiv@f2+2
  3088  052B  318E  26A4  3184   	fcall	___ftdiv
  3089  052E  0020               	movlb	0	; select bank0
  3090  052F  082E               	movf	?___ftdiv,w
  3091  0530  00BE               	movwf	___fttol@f1
  3092  0531  082F               	movf	?___ftdiv+1,w
  3093  0532  00BF               	movwf	___fttol@f1+1
  3094  0533  0830               	movf	?___ftdiv+2,w
  3095  0534  00C0               	movwf	___fttol@f1+2
  3096  0535  3187  276D  3184   	fcall	___fttol
  3097  0538  0020               	movlb	0	; select bank0
  3098  0539  0841               	movf	?___fttol+3,w
  3099  053A  0021               	movlb	1	; select bank1
  3100  053B  00BA               	movwf	(applianceControl@Pulse+3)^(0+128)
  3101  053C  0020               	movlb	0	; select bank0
  3102  053D  0840               	movf	?___fttol+2,w
  3103  053E  0021               	movlb	1	; select bank1
  3104  053F  00B9               	movwf	(applianceControl@Pulse+2)^(0+128)
  3105  0540  0020               	movlb	0	; select bank0
  3106  0541  083F               	movf	?___fttol+1,w
  3107  0542  0021               	movlb	1	; select bank1
  3108  0543  00B8               	movwf	(applianceControl@Pulse+1)^(0+128)
  3109  0544  0020               	movlb	0	; select bank0
  3110  0545  083E               	movf	?___fttol,w
  3111  0546  0021               	movlb	1	; select bank1
  3112  0547  00B7               	movwf	applianceControl@Pulse^(0+128)
  3113                           
  3114                           ;applicationcontrol.h: 48: NeedPulse = CompleteClock - Pulse;
  3115  0548  082D               	movf	applianceControl@CompleteClock^(0+128),w
  3116  0549  0020               	movlb	0	; select bank0
  3117  054A  00D2               	movwf	??_applianceControl
  3118  054B  0021               	movlb	1	; select bank1
  3119  054C  082E               	movf	(applianceControl@CompleteClock+1)^(0+128),w
  3120  054D  0020               	movlb	0	; select bank0
  3121  054E  00D3               	movwf	??_applianceControl+1
  3122  054F  0021               	movlb	1	; select bank1
  3123  0550  082F               	movf	(applianceControl@CompleteClock+2)^(0+128),w
  3124  0551  0020               	movlb	0	; select bank0
  3125  0552  00D4               	movwf	??_applianceControl+2
  3126  0553  0021               	movlb	1	; select bank1
  3127  0554  0830               	movf	(applianceControl@CompleteClock+3)^(0+128),w
  3128  0555  0020               	movlb	0	; select bank0
  3129  0556  00D5               	movwf	??_applianceControl+3
  3130  0557  0021               	movlb	1	; select bank1
  3131  0558  0937               	comf	applianceControl@Pulse^(0+128),w
  3132  0559  0020               	movlb	0	; select bank0
  3133  055A  00D6               	movwf	??_applianceControl+4
  3134  055B  0021               	movlb	1	; select bank1
  3135  055C  0938               	comf	(applianceControl@Pulse+1)^(0+128),w
  3136  055D  0020               	movlb	0	; select bank0
  3137  055E  00D7               	movwf	??_applianceControl+5
  3138  055F  0021               	movlb	1	; select bank1
  3139  0560  0939               	comf	(applianceControl@Pulse+2)^(0+128),w
  3140  0561  0020               	movlb	0	; select bank0
  3141  0562  00D8               	movwf	??_applianceControl+6
  3142  0563  0021               	movlb	1	; select bank1
  3143  0564  093A               	comf	(applianceControl@Pulse+3)^(0+128),w
  3144  0565  0020               	movlb	0	; select bank0
  3145  0566  00D9               	movwf	??_applianceControl+7
  3146  0567  0AD6               	incf	??_applianceControl+4,f
  3147  0568  1903               	skipnz
  3148  0569  0AD7               	incf	??_applianceControl+5,f
  3149  056A  1903               	skipnz
  3150  056B  0AD8               	incf	??_applianceControl+6,f
  3151  056C  1903               	skipnz
  3152  056D  0AD9               	incf	??_applianceControl+7,f
  3153  056E  0856               	movf	??_applianceControl+4,w
  3154  056F  07D2               	addwf	??_applianceControl,f
  3155  0570  0857               	movf	??_applianceControl+5,w
  3156  0571  3DD3               	addwfc	??_applianceControl+1,f
  3157  0572  0858               	movf	??_applianceControl+6,w
  3158  0573  3DD4               	addwfc	??_applianceControl+2,f
  3159  0574  0859               	movf	??_applianceControl+7,w
  3160  0575  3DD5               	addwfc	??_applianceControl+3,f
  3161  0576  0855               	movf	??_applianceControl+3,w
  3162  0577  0021               	movlb	1	; select bank1
  3163  0578  00BE               	movwf	(applianceControl@NeedPulse+3)^(0+128)
  3164  0579  0020               	movlb	0	; select bank0
  3165  057A  0854               	movf	??_applianceControl+2,w
  3166  057B  0021               	movlb	1	; select bank1
  3167  057C  00BD               	movwf	(applianceControl@NeedPulse+2)^(0+128)
  3168  057D  0020               	movlb	0	; select bank0
  3169  057E  0853               	movf	??_applianceControl+1,w
  3170  057F  0021               	movlb	1	; select bank1
  3171  0580  00BC               	movwf	(applianceControl@NeedPulse+1)^(0+128)
  3172  0581  0020               	movlb	0	; select bank0
  3173  0582  0852               	movf	??_applianceControl,w
  3174  0583  0021               	movlb	1	; select bank1
  3175  0584  00BB               	movwf	applianceControl@NeedPulse^(0+128)
  3176                           
  3177                           ;applicationcontrol.h: 49: sprintf(HexlevelBuffer,"%X",NeedPulse);
  3178  0585  3028               	movlw	low (STR_1| (0+32768))
  3179  0586  0020               	movlb	0	; select bank0
  3180  0587  00A8               	movwf	sprintf@f
  3181  0588  3090               	movlw	high (STR_1| (0+32768))
  3182  0589  00A9               	movwf	sprintf@f+1
  3183  058A  0021               	movlb	1	; select bank1
  3184  058B  083E               	movf	(applianceControl@NeedPulse+3)^(0+128),w
  3185  058C  0020               	movlb	0	; select bank0
  3186  058D  00AD               	movwf	?_sprintf+5
  3187  058E  0021               	movlb	1	; select bank1
  3188  058F  083D               	movf	(applianceControl@NeedPulse+2)^(0+128),w
  3189  0590  0020               	movlb	0	; select bank0
  3190  0591  00AC               	movwf	?_sprintf+4
  3191  0592  0021               	movlb	1	; select bank1
  3192  0593  083C               	movf	(applianceControl@NeedPulse+1)^(0+128),w
  3193  0594  0020               	movlb	0	; select bank0
  3194  0595  00AB               	movwf	?_sprintf+3
  3195  0596  0021               	movlb	1	; select bank1
  3196  0597  083B               	movf	applianceControl@NeedPulse^(0+128),w
  3197  0598  0020               	movlb	0	; select bank0
  3198  0599  00AA               	movwf	?_sprintf+2
  3199  059A  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  3200  059B  318F  274D  3184   	fcall	_sprintf
  3201                           
  3202                           ;applicationcontrol.h: 50: strncpy(strH,HexlevelBuffer,2);
  3203  059E  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  3204  059F  0020               	movlb	0	; select bank0
  3205  05A0  00D2               	movwf	??_applianceControl
  3206  05A1  0852               	movf	??_applianceControl,w
  3207  05A2  00A0               	movwf	strncpy@from
  3208  05A3  3002               	movlw	2
  3209  05A4  00A1               	movwf	strncpy@size
  3210  05A5  3000               	movlw	0
  3211  05A6  00A2               	movwf	strncpy@size+1
  3212  05A7  30BF               	movlw	(low (applianceControl@strH| 0))& (0+255)
  3213  05A8  318C  241F  3184   	fcall	_strncpy
  3214                           
  3215                           ;applicationcontrol.h: 51: strH[2]='\0';
  3216  05AB  0021               	movlb	1	; select bank1
  3217  05AC  01C1               	clrf	(applianceControl@strH^(0+128)+2)
  3218                           
  3219                           ;applicationcontrol.h: 54: strncpy(strL,HexlevelBuffer+2,2);
  3220  05AD  30AA               	movlw	(low ((applianceControl@HexlevelBuffer| 0+2)))& (0+255)
  3221  05AE  0020               	movlb	0	; select bank0
  3222  05AF  00D2               	movwf	??_applianceControl
  3223  05B0  0852               	movf	??_applianceControl,w
  3224  05B1  00A0               	movwf	strncpy@from
  3225  05B2  3002               	movlw	2
  3226  05B3  00A1               	movwf	strncpy@size
  3227  05B4  3000               	movlw	0
  3228  05B5  00A2               	movwf	strncpy@size+1
  3229  05B6  30C2               	movlw	(low (applianceControl@strL| 0))& (0+255)
  3230  05B7  318C  241F  3184   	fcall	_strncpy
  3231                           
  3232                           ;applicationcontrol.h: 55: strL[2]='\0';
  3233  05BA  0021               	movlb	1	; select bank1
  3234  05BB  01C4               	clrf	(applianceControl@strL^(0+128)+2)
  3235                           
  3236                           ;applicationcontrol.h: 58: parentalLockBuffer[integerSwitchNumber] = charParentalControl
      +                          ;
  3237  05BC  0020               	movlb	0	; select bank0
  3238  05BD  0850               	movf	applianceControl@charParentalControl,w
  3239  05BE  00D2               	movwf	??_applianceControl
  3240  05BF  0021               	movlb	1	; select bank1
  3241  05C0  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  3242  05C1  3E32               	addlw	(low (_parentalLockBuffer| (0+256)))& (0+255)
  3243  05C2  0086               	movwf	6
  3244  05C3  3001               	movlw	1	; select bank2/3
  3245  05C4  0087               	movwf	7
  3246  05C5  0020               	movlb	0	; select bank0
  3247  05C6  0852               	movf	??_applianceControl,w
  3248  05C7  0081               	movwf	1
  3249                           
  3250                           ;applicationcontrol.h: 59: copy_parentalLockBuffer[integerSwitchNumber]=parentalLockBuff
      +                          er[integerSwitchNumber];
  3251  05C8  0021               	movlb	1	; select bank1
  3252  05C9  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  3253  05CA  3E32               	addlw	(low (_parentalLockBuffer| (0+256)))& (0+255)
  3254  05CB  0086               	movwf	6
  3255  05CC  3001               	movlw	1	; select bank2/3
  3256  05CD  0087               	movwf	7
  3257  05CE  0801               	movf	1,w
  3258  05CF  0020               	movlb	0	; select bank0
  3259  05D0  00D2               	movwf	??_applianceControl
  3260  05D1  0021               	movlb	1	; select bank1
  3261  05D2  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  3262  05D3  3ED5               	addlw	(low (_copy_parentalLockBuffer| 0))& (0+255)
  3263  05D4  0086               	movwf	6
  3264  05D5  0187               	clrf	7
  3265  05D6  0020               	movlb	0	; select bank0
  3266  05D7  0852               	movf	??_applianceControl,w
  3267  05D8  0081               	movwf	1
  3268                           
  3269                           ;applicationcontrol.h: 62: currentStateBufferPositions = ((1+4*(integerSwitchNumber))-5)
      +                          ;
  3270  05D9  0021               	movlb	1	; select bank1
  3271  05DA  0850               	movf	(applianceControl@integerSwitchNumber+1)^(0+128),w
  3272  05DB  0020               	movlb	0	; select bank0
  3273  05DC  00D3               	movwf	??_applianceControl+1
  3274  05DD  0021               	movlb	1	; select bank1
  3275  05DE  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  3276  05DF  0020               	movlb	0	; select bank0
  3277  05E0  00D2               	movwf	??_applianceControl
  3278  05E1  35D2               	lslf	??_applianceControl,f
  3279  05E2  0DD3               	rlf	??_applianceControl+1,f
  3280  05E3  35D2               	lslf	??_applianceControl,f
  3281  05E4  0DD3               	rlf	??_applianceControl+1,f
  3282  05E5  0852               	movf	??_applianceControl,w
  3283  05E6  3EFC               	addlw	252
  3284  05E7  0021               	movlb	1	; select bank1
  3285  05E8  00D1               	movwf	applianceControl@currentStateBufferPositions^(0+128)
  3286  05E9  30FF               	movlw	255
  3287  05EA  0020               	movlb	0	; select bank0
  3288  05EB  3D53               	addwfc	??_applianceControl+1,w
  3289  05EC  0021               	movlb	1	; select bank1
  3290  05ED  00D2               	movwf	(applianceControl@currentStateBufferPositions+1)^(0+128)
  3291                           
  3292                           ;applicationcontrol.h: 63: currentStateBuffer[currentStateBufferPositions++] = 'G';
  3293  05EE  3047               	movlw	71
  3294  05EF  0020               	movlb	0	; select bank0
  3295  05F0  00D2               	movwf	??_applianceControl
  3296  05F1  0021               	movlb	1	; select bank1
  3297  05F2  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  3298  05F3  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  3299  05F4  0086               	movwf	6
  3300  05F5  3001               	movlw	1	; select bank3/4
  3301  05F6  0087               	movwf	7
  3302  05F7  0020               	movlb	0	; select bank0
  3303  05F8  0852               	movf	??_applianceControl,w
  3304  05F9  0081               	movwf	1
  3305  05FA  3001               	movlw	1
  3306  05FB  0021               	movlb	1	; select bank1
  3307  05FC  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  3308  05FD  3000               	movlw	0
  3309  05FE  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  3310                           
  3311                           ;applicationcontrol.h: 64: currentStateBuffer[currentStateBufferPositions++] = charSwitc
      +                          hSTATE;
  3312  05FF  0020               	movlb	0	; select bank0
  3313  0600  084D               	movf	applianceControl@charSwitchSTATE,w
  3314  0601  00D2               	movwf	??_applianceControl
  3315  0602  0021               	movlb	1	; select bank1
  3316  0603  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  3317  0604  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  3318  0605  0086               	movwf	6
  3319  0606  3001               	movlw	1	; select bank3/4
  3320  0607  0087               	movwf	7
  3321  0608  0020               	movlb	0	; select bank0
  3322  0609  0852               	movf	??_applianceControl,w
  3323  060A  0081               	movwf	1
  3324  060B  3001               	movlw	1
  3325  060C  0021               	movlb	1	; select bank1
  3326  060D  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  3327  060E  3000               	movlw	0
  3328  060F  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  3329                           
  3330                           ;applicationcontrol.h: 65: currentStateBuffer[currentStateBufferPositions++] = charSwitc
      +                          hMSB;
  3331  0610  0845               	movf	applianceControl@charSwitchMSB^(0+128),w
  3332  0611  0020               	movlb	0	; select bank0
  3333  0612  00D2               	movwf	??_applianceControl
  3334  0613  0021               	movlb	1	; select bank1
  3335  0614  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  3336  0615  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  3337  0616  0086               	movwf	6
  3338  0617  3001               	movlw	1	; select bank3/4
  3339  0618  0087               	movwf	7
  3340  0619  0020               	movlb	0	; select bank0
  3341  061A  0852               	movf	??_applianceControl,w
  3342  061B  0081               	movwf	1
  3343  061C  3001               	movlw	1
  3344  061D  0021               	movlb	1	; select bank1
  3345  061E  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  3346  061F  3000               	movlw	0
  3347  0620  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  3348                           
  3349                           ;applicationcontrol.h: 66: currentStateBuffer[currentStateBufferPositions] = charSwitchL
      +                          SB;
  3350  0621  0020               	movlb	0	; select bank0
  3351  0622  084C               	movf	applianceControl@charSwitchLSB,w
  3352  0623  00D2               	movwf	??_applianceControl
  3353  0624  0021               	movlb	1	; select bank1
  3354  0625  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  3355  0626  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  3356  0627  0086               	movwf	6
  3357  0628  3001               	movlw	1	; select bank3/4
  3358  0629  0087               	movwf	7
  3359  062A  0020               	movlb	0	; select bank0
  3360  062B  0852               	movf	??_applianceControl,w
  3361  062C  0081               	movwf	1
  3362                           
  3363                           ;applicationcontrol.h: 68: currentStateBufferPositions-=3;
  3364  062D  30FD               	movlw	253
  3365  062E  0021               	movlb	1	; select bank1
  3366  062F  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  3367  0630  30FF               	movlw	255
  3368  0631  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  3369                           
  3370                           ;applicationcontrol.h: 69: if(charFinalFrameState=='1')
  3371  0632  3031               	movlw	49
  3372  0633  0020               	movlb	0	; select bank0
  3373  0634  0651               	xorwf	applianceControl@charFinalFrameState,w
  3374  0635  1D03               	btfss	3,2
  3375  0636  2EA5               	goto	l3600
  3376                           
  3377                           ;applicationcontrol.h: 70: {
  3378                           ;applicationcontrol.h: 71: sendAcknowledgment(currentStateBuffer+currentStateBufferPosit
      +                          ions);
  3379  0637  0021               	movlb	1	; select bank1
  3380  0638  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  3381  0639  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  3382  063A  318B  2367  3184   	fcall	_sendAcknowledgment
  3383                           
  3384                           ;applicationcontrol.h: 72: }
  3385                           ;applicationcontrol.h: 74: switch(integerSwitchNumber){
  3386  063D  2EA5               	goto	l3600
  3387  063E                     l3576:	
  3388                           ;applicationcontrol.h: 75: case 1:
  3389                           
  3390                           
  3391                           ;applicationcontrol.h: 76: {
  3392                           ;applicationcontrol.h: 77: PORTEbits.RE0 = integerSwitchState;
  3393  063E  0021               	movlb	1	; select bank1
  3394  063F  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3395  0640  0020               	movlb	0	; select bank0
  3396  0641  1C03               	skipc
  3397  0642  1010               	bcf	16,0	;volatile
  3398  0643  1803               	skipnc
  3399  0644  1410               	bsf	16,0	;volatile
  3400                           
  3401                           ;applicationcontrol.h: 78: }break;
  3402  0645  0008               	return
  3403  0646                     l3578:	
  3404                           ;applicationcontrol.h: 80: case 2:
  3405                           
  3406                           
  3407                           ;applicationcontrol.h: 81: {
  3408                           ;applicationcontrol.h: 82: PORTEbits.RE1 = integerSwitchState;
  3409  0646  0021               	movlb	1	; select bank1
  3410  0647  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3411  0648  0020               	movlb	0	; select bank0
  3412  0649  1C03               	skipc
  3413  064A  1090               	bcf	16,1	;volatile
  3414  064B  1803               	skipnc
  3415  064C  1490               	bsf	16,1	;volatile
  3416                           
  3417                           ;applicationcontrol.h: 84: } break;
  3418  064D  0008               	return
  3419  064E                     l3580:	
  3420                           ;applicationcontrol.h: 85: case 3:
  3421                           
  3422                           
  3423                           ;applicationcontrol.h: 86: {
  3424                           ;applicationcontrol.h: 87: PORTGbits.RG0 = integerSwitchState;
  3425  064E  0021               	movlb	1	; select bank1
  3426  064F  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3427  0650  0025               	movlb	5	; select bank5
  3428  0651  1C03               	skipc
  3429  0652  100D               	bcf	13,0	;volatile
  3430  0653  1803               	skipnc
  3431  0654  140D               	bsf	13,0	;volatile
  3432                           
  3433                           ;applicationcontrol.h: 89: } break;
  3434  0655  0008               	return
  3435  0656                     l3582:	
  3436                           ;applicationcontrol.h: 91: case 4:
  3437                           
  3438                           
  3439                           ;applicationcontrol.h: 92: {
  3440                           ;applicationcontrol.h: 93: PORTGbits.RG3 = integerSwitchState;
  3441  0656  0021               	movlb	1	; select bank1
  3442  0657  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3443  0658  0025               	movlb	5	; select bank5
  3444  0659  1C03               	skipc
  3445  065A  118D               	bcf	13,3	;volatile
  3446  065B  1803               	skipnc
  3447  065C  158D               	bsf	13,3	;volatile
  3448                           
  3449                           ;applicationcontrol.h: 94: }break;
  3450  065D  0008               	return
  3451  065E                     l3584:	
  3452                           ;applicationcontrol.h: 95: case 5:
  3453                           
  3454                           
  3455                           ;applicationcontrol.h: 96: {
  3456                           ;applicationcontrol.h: 97: PORTGbits.RG4 = integerSwitchState;
  3457  065E  0021               	movlb	1	; select bank1
  3458  065F  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3459  0660  0025               	movlb	5	; select bank5
  3460  0661  1C03               	skipc
  3461  0662  120D               	bcf	13,4	;volatile
  3462  0663  1803               	skipnc
  3463  0664  160D               	bsf	13,4	;volatile
  3464                           
  3465                           ;applicationcontrol.h: 98: }break;
  3466  0665  0008               	return
  3467  0666                     l3586:	
  3468                           ;applicationcontrol.h: 99: case 6:
  3469                           
  3470                           
  3471                           ;applicationcontrol.h: 100: {
  3472                           ;applicationcontrol.h: 101: PORTFbits.RF6 = integerSwitchState;
  3473  0666  0021               	movlb	1	; select bank1
  3474  0667  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3475  0668  0025               	movlb	5	; select bank5
  3476  0669  1C03               	skipc
  3477  066A  130C               	bcf	12,6	;volatile
  3478  066B  1803               	skipnc
  3479  066C  170C               	bsf	12,6	;volatile
  3480                           
  3481                           ;applicationcontrol.h: 102: }break;
  3482  066D  0008               	return
  3483  066E                     l3588:	
  3484                           ;applicationcontrol.h: 104: case 7:
  3485                           
  3486                           
  3487                           ;applicationcontrol.h: 105: {
  3488                           ;applicationcontrol.h: 106: PORTFbits.RF5 = integerSwitchState;
  3489  066E  0021               	movlb	1	; select bank1
  3490  066F  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3491  0670  0025               	movlb	5	; select bank5
  3492  0671  1C03               	skipc
  3493  0672  128C               	bcf	12,5	;volatile
  3494  0673  1803               	skipnc
  3495  0674  168C               	bsf	12,5	;volatile
  3496                           
  3497                           ;applicationcontrol.h: 107: }break;
  3498  0675  0008               	return
  3499  0676                     l3590:	
  3500                           ;applicationcontrol.h: 113: case 8:{
  3501                           
  3502                           
  3503                           ;applicationcontrol.h: 114: start_PWM_Generation_For_DIMMER = integerSwitchState;
  3504  0676  0021               	movlb	1	; select bank1
  3505  0677  0854               	movf	(applianceControl@integerSwitchState+1)^(0+128),w
  3506  0678  00E8               	movwf	(_start_PWM_Generation_For_DIMMER+1)^(0+128)
  3507  0679  0853               	movf	applianceControl@integerSwitchState^(0+128),w
  3508  067A  00E7               	movwf	_start_PWM_Generation_For_DIMMER^(0+128)
  3509                           
  3510                           ;applicationcontrol.h: 115: switch(integerSwitchState){
  3511  067B  2E97               	goto	l3596
  3512  067C                     l209:	
  3513                           ;applicationcontrol.h: 116: case 0:
  3514                           
  3515                           
  3516                           ;applicationcontrol.h: 117: PORTFbits.RF3=1;
  3517  067C  0025               	movlb	5	; select bank5
  3518  067D  158C               	bsf	12,3	;volatile
  3519                           
  3520                           ;applicationcontrol.h: 118: break;
  3521  067E  0008               	return
  3522  067F                     l3592:	
  3523                           ;applicationcontrol.h: 119: case 1:
  3524                           
  3525                           
  3526                           ;applicationcontrol.h: 120: Timer1H = hexadecimalToDecimal(strH);
  3527  067F  30BF               	movlw	(low (applianceControl@strH| 0))& (0+255)
  3528  0680  318E  2625  3184   	fcall	_hexadecimalToDecimal
  3529  0683  0020               	movlb	0	; select bank0
  3530  0684  0829               	movf	?_hexadecimalToDecimal+1,w
  3531  0685  0021               	movlb	1	; select bank1
  3532  0686  00EC               	movwf	(_Timer1H+1)^(0+128)
  3533  0687  0020               	movlb	0	; select bank0
  3534  0688  0828               	movf	?_hexadecimalToDecimal,w
  3535  0689  0021               	movlb	1	; select bank1
  3536  068A  00EB               	movwf	_Timer1H^(0+128)
  3537                           
  3538                           ;applicationcontrol.h: 121: Timer1L = hexadecimalToDecimal(strL);
  3539  068B  30C2               	movlw	(low (applianceControl@strL| 0))& (0+255)
  3540  068C  318E  2625         	fcall	_hexadecimalToDecimal
  3541  068E  0020               	movlb	0	; select bank0
  3542  068F  0829               	movf	?_hexadecimalToDecimal+1,w
  3543  0690  0021               	movlb	1	; select bank1
  3544  0691  00EA               	movwf	(_Timer1L+1)^(0+128)
  3545  0692  0020               	movlb	0	; select bank0
  3546  0693  0828               	movf	?_hexadecimalToDecimal,w
  3547  0694  0021               	movlb	1	; select bank1
  3548  0695  00E9               	movwf	_Timer1L^(0+128)
  3549                           
  3550                           ;applicationcontrol.h: 125: }
  3551                           
  3552                           ;applicationcontrol.h: 124: break;
  3553                           
  3554                           ;applicationcontrol.h: 123: default:
  3555                           
  3556                           ;applicationcontrol.h: 122: break;
  3557  0696  0008               	return
  3558  0697                     l3596:	
  3559                           
  3560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3561                           ; Switch size 1, requested type "space"
  3562                           ; Number of cases is 1, Range of values is 0 to 0
  3563                           ; switch strategies available:
  3564                           ; Name         Instructions Cycles
  3565                           ; simple_byte            4     3 (average)
  3566                           ; direct_byte            8     6 (fixed)
  3567                           ; jumptable            260     6 (fixed)
  3568                           ;	Chosen strategy is simple_byte
  3569  0697  0854               	movf	(applianceControl@integerSwitchState+1)^(0+128),w
  3570  0698  3A00               	xorlw	0	; case 0
  3571  0699  1903               	skipnz
  3572  069A  2E9C               	goto	l4108
  3573  069B  2EB8               	goto	l214
  3574  069C                     l4108:	
  3575                           
  3576                           ; Switch size 1, requested type "space"
  3577                           ; Number of cases is 2, Range of values is 0 to 1
  3578                           ; switch strategies available:
  3579                           ; Name         Instructions Cycles
  3580                           ; simple_byte            7     4 (average)
  3581                           ; direct_byte           10     6 (fixed)
  3582                           ; jumptable            260     6 (fixed)
  3583                           ;	Chosen strategy is simple_byte
  3584  069C  0853               	movf	applianceControl@integerSwitchState^(0+128),w
  3585  069D  3A00               	xorlw	0	; case 0
  3586  069E  1903               	skipnz
  3587  069F  2E7C               	goto	l209
  3588  06A0  3A01               	xorlw	1	; case 1
  3589  06A1  1903               	skipnz
  3590  06A2  2E7F               	goto	l3592
  3591  06A3  2EB8               	goto	l214
  3592                           
  3593                           ;applicationcontrol.h: 129: }
  3594                           
  3595                           ;applicationcontrol.h: 128: break;
  3596                           
  3597                           ;applicationcontrol.h: 127: default:
  3598                           
  3599                           ;applicationcontrol.h: 126: }break;
  3600  06A4  0008               	return
  3601  06A5                     l3600:	
  3602                           
  3603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3604                           ; Switch size 1, requested type "space"
  3605                           ; Number of cases is 1, Range of values is 0 to 0
  3606                           ; switch strategies available:
  3607                           ; Name         Instructions Cycles
  3608                           ; simple_byte            4     3 (average)
  3609                           ; direct_byte            8     6 (fixed)
  3610                           ; jumptable            260     6 (fixed)
  3611                           ;	Chosen strategy is simple_byte
  3612  06A5  0021               	movlb	1	; select bank1
  3613  06A6  0850               	movf	(applianceControl@integerSwitchNumber+1)^(0+128),w
  3614  06A7  3A00               	xorlw	0	; case 0
  3615  06A8  1903               	skipnz
  3616  06A9  2EAB               	goto	l4110
  3617  06AA  2EB8               	goto	l214
  3618  06AB                     l4110:	
  3619                           
  3620                           ; Switch size 1, requested type "space"
  3621                           ; Number of cases is 8, Range of values is 1 to 8
  3622                           ; switch strategies available:
  3623                           ; Name         Instructions Cycles
  3624                           ; direct_byte           25     9 (fixed)
  3625                           ; simple_byte           25    13 (average)
  3626                           ; jumptable            263     9 (fixed)
  3627                           ;	Chosen strategy is direct_byte
  3628  06AB  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  3629  06AC  3EFF               	addlw	-1
  3630  06AD  1C03               	skipc
  3631  06AE  0008               	return
  3632  06AF  0084               	movwf	4
  3633  06B0  3008               	movlw	8
  3634  06B1  0204               	subwf	4,w
  3635  06B2  1803               	skipnc
  3636  06B3  0008               	return
  3637  06B4  3188               	movlp	high S4112
  3638  06B5  3504               	lslf	4,w
  3639  06B6  3E00               	addlw	low S4112
  3640  06B7  0082               	movwf	2
  3641  06B8                     l214:	
  3642  06B8  0008               	return
  3643  06B9                     __end_of_applianceControl:	
  3644                           
  3645                           	psect	swtext1
  3646  0800                     __pswtext1:	
  3647  0800                     S4112:	
  3648  0800  3186  2E3E         	ljmp	l3576
  3649  0802  3186  2E46         	ljmp	l3578
  3650  0804  3186  2E4E         	ljmp	l3580
  3651  0806  3186  2E56         	ljmp	l3582
  3652  0808  3186  2E5E         	ljmp	l3584
  3653  080A  3186  2E66         	ljmp	l3586
  3654  080C  3186  2E6E         	ljmp	l3588
  3655  080E  3186  2E76         	ljmp	l3590
  3656                           
  3657                           	psect	text4
  3658  0C1F                     __ptext4:	
  3659 ;; *************** function _strncpy *****************
  3660 ;; Defined at:
  3661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  to              1    wreg     PTR unsigned char 
  3664 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3665 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  3666 ;;		 -> applianceControl@HexlevelBuffer(5), 
  3667 ;;  size            2    1[BANK0 ] unsigned int 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  to              1    4[BANK0 ] PTR unsigned char 
  3670 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3671 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  3672 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      PTR unsigned char 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3682 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  3683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  3684 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3685 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  3686 ;;Total ram usage:        6 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    2
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_applianceControl
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function _strncpy
  3698  0C1F                     _strncpy:	
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
  3702                           ;strncpy@to stored from wreg
  3703  0C1F  0020               	movlb	0	; select bank0
  3704  0C20  00A4               	movwf	strncpy@to
  3705  0C21  0824               	movf	strncpy@to,w
  3706  0C22  00A3               	movwf	??_strncpy
  3707  0C23  0823               	movf	??_strncpy,w
  3708  0C24  00A5               	movwf	strncpy@cp
  3709  0C25                     l3232:	
  3710  0C25  0821               	movf	strncpy@size,w
  3711  0C26  0422               	iorwf	strncpy@size+1,w
  3712  0C27  1903               	btfsc	3,2
  3713  0C28  2C43               	goto	l3238
  3714  0C29  3001               	movlw	1
  3715  0C2A  02A1               	subwf	strncpy@size,f
  3716  0C2B  3000               	movlw	0
  3717  0C2C  3BA2               	subwfb	strncpy@size+1,f
  3718  0C2D  0825               	movf	strncpy@cp,w
  3719  0C2E  0086               	movwf	6
  3720  0C2F  0187               	clrf	7
  3721  0C30  0AA5               	incf	strncpy@cp,f
  3722  0C31  0820               	movf	strncpy@from,w
  3723  0C32  0084               	movwf	4
  3724  0C33  0185               	clrf	5
  3725  0C34  0AA0               	incf	strncpy@from,f
  3726  0C35  0800               	movf	0,w
  3727  0C36  3FC0               	movwi [0]fsr1
  3728  0C37  0889               	movf	9,f
  3729  0C38  1903               	btfsc	3,2
  3730  0C39  2C43               	goto	l3238
  3731  0C3A  2C25               	goto	l3232
  3732  0C3B                     l3234:	
  3733  0C3B  0825               	movf	strncpy@cp,w
  3734  0C3C  0086               	movwf	6
  3735  0C3D  0187               	clrf	7
  3736  0C3E  0181               	clrf	1
  3737  0C3F  3001               	movlw	1
  3738  0C40  00A3               	movwf	??_strncpy
  3739  0C41  0823               	movf	??_strncpy,w
  3740  0C42  07A5               	addwf	strncpy@cp,f
  3741  0C43                     l3238:	
  3742  0C43  3001               	movlw	1
  3743  0C44  02A1               	subwf	strncpy@size,f
  3744  0C45  3000               	movlw	0
  3745  0C46  3BA2               	subwfb	strncpy@size+1,f
  3746  0C47  0A21               	incf	strncpy@size,w
  3747  0C48  1D03               	skipz
  3748  0C49  2C3B               	goto	l3234
  3749  0C4A  0A22               	incf	strncpy@size+1,w
  3750  0C4B  1903               	btfsc	3,2
  3751  0C4C  0008               	return
  3752  0C4D  2C3B               	goto	l3234
  3753  0C4E                     __end_of_strncpy:	
  3754                           ;	Return value of _strncpy is never used
  3755                           
  3756                           
  3757                           	psect	text5
  3758  0F4D                     __ptext5:	
  3759 ;; *************** function _sprintf *****************
  3760 ;; Defined at:
  3761 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  sp              1    wreg     PTR unsigned char 
  3764 ;;		 -> applianceControl@HexlevelBuffer(5), 
  3765 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  3766 ;;		 -> STR_1(3), 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  sp              1   24[BANK0 ] PTR unsigned char 
  3769 ;;		 -> applianceControl@HexlevelBuffer(5), 
  3770 ;;  idx             1   19[BANK0 ] unsigned char 
  3771 ;;  tmpval          4    0        struct .
  3772 ;;  val             2   21[BANK0 ] unsigned int 
  3773 ;;  cp              2    0        PTR const unsigned char 
  3774 ;;  len             2    0        unsigned int 
  3775 ;;  c               1   25[BANK0 ] char 
  3776 ;;  prec            1   23[BANK0 ] char 
  3777 ;;  ap              1   20[BANK0 ] PTR void [1]
  3778 ;;		 -> ?_sprintf(2), 
  3779 ;;  flag            1   18[BANK0 ] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  2    8[BANK0 ] int 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3789 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:       18 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    3
  3796 ;; This function calls:
  3797 ;;		___lwdiv
  3798 ;; This function is called by:
  3799 ;;		_applianceControl
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _sprintf
  3805  0F4D                     _sprintf:	
  3806                           
  3807                           ;incstack = 0
  3808                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3809                           ;sprintf@sp stored from wreg
  3810  0F4D  0020               	movlb	0	; select bank0
  3811  0F4E  00B8               	movwf	sprintf@sp
  3812                           
  3813                           ;doprnt.c: 494: va_list ap;
  3814                           ;doprnt.c: 499: signed char c;
  3815                           ;doprnt.c: 506: signed char prec;
  3816                           ;doprnt.c: 508: unsigned char flag;
  3817                           ;doprnt.c: 523: union {
  3818                           ;doprnt.c: 524: unsigned long vd;
  3819                           ;doprnt.c: 525: double integ;
  3820                           ;doprnt.c: 526: } tmpval;
  3821                           ;doprnt.c: 528: unsigned int val;
  3822                           ;doprnt.c: 529: unsigned len;
  3823                           ;doprnt.c: 530: const char * cp;
  3824                           ;doprnt.c: 533: *ap = __va_start();
  3825  0F4F  302A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3826  0F50  00AE               	movwf	??_sprintf
  3827  0F51  082E               	movf	??_sprintf,w
  3828  0F52  00B4               	movwf	sprintf@ap
  3829  0F53                     l3218:	
  3830                           ;doprnt.c: 536: while(c = *f++) {
  3831                           
  3832  0F53  0829               	movf	sprintf@f+1,w
  3833  0F54  00AF               	movwf	??_sprintf+1
  3834  0F55  0828               	movf	sprintf@f,w
  3835  0F56  00AE               	movwf	??_sprintf
  3836  0F57  0AA8               	incf	sprintf@f,f
  3837  0F58  1903               	skipnz
  3838  0F59  0AA9               	incf	sprintf@f+1,f
  3839  0F5A  082E               	movf	??_sprintf,w
  3840  0F5B  0084               	movwf	4
  3841  0F5C  082F               	movf	??_sprintf+1,w
  3842  0F5D  0085               	movwf	5
  3843  0F5E  0800               	movf	0,w	;code access
  3844  0F5F  00B0               	movwf	??_sprintf+2
  3845  0F60  0830               	movf	??_sprintf+2,w
  3846  0F61  00B9               	movwf	sprintf@c
  3847  0F62  0839               	movf	sprintf@c,w
  3848  0F63  1903               	btfsc	3,2
  3849  0F64  2FFB               	goto	l3220
  3850                           
  3851                           ;doprnt.c: 538: if(c != '%')
  3852  0F65  3025               	movlw	37
  3853  0F66  0639               	xorwf	sprintf@c,w
  3854  0F67  1903               	btfsc	3,2
  3855  0F68  2F75               	goto	l3184
  3856                           
  3857                           ;doprnt.c: 540: {
  3858                           ;doprnt.c: 541: ((*sp++ = (c)));
  3859  0F69  0839               	movf	sprintf@c,w
  3860  0F6A  00AE               	movwf	??_sprintf
  3861  0F6B  0838               	movf	sprintf@sp,w
  3862  0F6C  0086               	movwf	6
  3863  0F6D  0187               	clrf	7
  3864  0F6E  082E               	movf	??_sprintf,w
  3865  0F6F  0081               	movwf	1
  3866  0F70  3001               	movlw	1
  3867  0F71  00AE               	movwf	??_sprintf
  3868  0F72  082E               	movf	??_sprintf,w
  3869  0F73  07B8               	addwf	sprintf@sp,f
  3870                           
  3871                           ;doprnt.c: 542: continue;
  3872  0F74  2F53               	goto	l3218
  3873  0F75                     l3184:	
  3874                           
  3875                           ;doprnt.c: 543: }
  3876                           ;doprnt.c: 548: flag = 0;
  3877  0F75  01B2               	clrf	sprintf@flag
  3878                           
  3879                           ;doprnt.c: 822: }
  3880                           
  3881                           ;doprnt.c: 813: continue;
  3882                           
  3883                           ;doprnt.c: 802: default:
  3884                           
  3885                           ;doprnt.c: 718: case 'x':
  3886                           ;doprnt.c: 723: break;
  3887                           
  3888                           ;doprnt.c: 712: case 'X':
  3889                           
  3890                           ;doprnt.c: 638: goto alldone;
  3891                           
  3892                           ;doprnt.c: 637: case 0:
  3893                           
  3894                           ;doprnt.c: 635: switch(c = *f++) {
  3895  0F76  0829               	movf	sprintf@f+1,w
  3896  0F77  00AF               	movwf	??_sprintf+1
  3897  0F78  0828               	movf	sprintf@f,w
  3898  0F79  00AE               	movwf	??_sprintf
  3899  0F7A  0AA8               	incf	sprintf@f,f
  3900  0F7B  1903               	skipnz
  3901  0F7C  0AA9               	incf	sprintf@f+1,f
  3902  0F7D  082E               	movf	??_sprintf,w
  3903  0F7E  0084               	movwf	4
  3904  0F7F  082F               	movf	??_sprintf+1,w
  3905  0F80  0085               	movwf	5
  3906  0F81  0800               	movf	0,w	;code access
  3907  0F82  00B9               	movwf	sprintf@c
  3908                           
  3909                           ; Switch size 1, requested type "space"
  3910                           ; Number of cases is 3, Range of values is 0 to 120
  3911                           ; switch strategies available:
  3912                           ; Name         Instructions Cycles
  3913                           ; simple_byte           10     6 (average)
  3914                           ; direct_byte          248     6 (fixed)
  3915                           ; jumptable            260     6 (fixed)
  3916                           ;	Chosen strategy is simple_byte
  3917  0F83  3A00               	xorlw	0	; case 0
  3918  0F84  1903               	skipnz
  3919  0F85  2FFB               	goto	l3220
  3920  0F86  3A58               	xorlw	88	; case 88
  3921  0F87  1903               	skipnz
  3922  0F88  2F8D               	goto	l3190
  3923  0F89  3A20               	xorlw	32	; case 120
  3924  0F8A  1903               	skipnz
  3925  0F8B  2F8D               	goto	l3190
  3926  0F8C  2F53               	goto	l3218
  3927  0F8D                     l3190:	
  3928                           
  3929                           ;doprnt.c: 1273: {
  3930                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3931  0F8D  0834               	movf	sprintf@ap,w
  3932  0F8E  0086               	movwf	6
  3933  0F8F  0187               	clrf	7
  3934  0F90  3F40               	moviw [0]fsr1
  3935  0F91  00B5               	movwf	sprintf@val
  3936  0F92  3F41               	moviw [1]fsr1
  3937  0F93  00B6               	movwf	sprintf@val+1
  3938  0F94  3002               	movlw	2
  3939  0F95  00AE               	movwf	??_sprintf
  3940  0F96  082E               	movf	??_sprintf,w
  3941  0F97  07B4               	addwf	sprintf@ap,f
  3942                           
  3943                           ;doprnt.c: 1287: }
  3944                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3945  0F98  01B9               	clrf	sprintf@c
  3946  0F99  0AB9               	incf	sprintf@c,f
  3947  0F9A  3004               	movlw	4
  3948  0F9B  0639               	xorwf	sprintf@c,w
  3949  0F9C  1903               	btfsc	3,2
  3950  0F9D  2FBD               	goto	l3206
  3951  0F9E                     l3200:	
  3952                           
  3953                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3954  0F9E  0839               	movf	sprintf@c,w
  3955  0F9F  00AE               	movwf	??_sprintf
  3956  0FA0  01AF               	clrf	??_sprintf+1
  3957  0FA1  35AE               	lslf	??_sprintf,f
  3958  0FA2  0DAF               	rlf	??_sprintf+1,f
  3959  0FA3  3000               	movlw	low (_hexpowers| (0+32768))
  3960  0FA4  072E               	addwf	??_sprintf,w
  3961  0FA5  0084               	movwf	4
  3962  0FA6  3090               	movlw	high (_hexpowers| (0+32768))
  3963  0FA7  3D2F               	addwfc	??_sprintf+1,w
  3964  0FA8  0085               	movwf	5
  3965  0FA9  3F00               	moviw [0]fsr0
  3966  0FAA  00B0               	movwf	??_sprintf+2
  3967  0FAB  3F01               	moviw [1]fsr0
  3968  0FAC  00B1               	movwf	??_sprintf+3
  3969  0FAD  0831               	movf	??_sprintf+3,w
  3970  0FAE  0236               	subwf	sprintf@val+1,w
  3971  0FAF  1D03               	skipz
  3972  0FB0  2FB3               	goto	u3915
  3973  0FB1  0830               	movf	??_sprintf+2,w
  3974  0FB2  0235               	subwf	sprintf@val,w
  3975  0FB3                     u3915:	
  3976  0FB3  1C03               	btfss	3,0
  3977  0FB4  2FBD               	goto	l3206
  3978                           
  3979                           ;doprnt.c: 1318: break;
  3980  0FB5  3001               	movlw	1
  3981  0FB6  00AE               	movwf	??_sprintf
  3982  0FB7  082E               	movf	??_sprintf,w
  3983  0FB8  07B9               	addwf	sprintf@c,f
  3984  0FB9  3004               	movlw	4
  3985  0FBA  0639               	xorwf	sprintf@c,w
  3986  0FBB  1D03               	btfss	3,2
  3987  0FBC  2F9E               	goto	l3200
  3988  0FBD                     l3206:	
  3989                           
  3990                           ;doprnt.c: 1422: {
  3991                           ;doprnt.c: 1469: }
  3992                           ;doprnt.c: 1472: prec = c;
  3993  0FBD  0839               	movf	sprintf@c,w
  3994  0FBE  00AE               	movwf	??_sprintf
  3995  0FBF  082E               	movf	??_sprintf,w
  3996  0FC0  00B7               	movwf	sprintf@prec
  3997  0FC1                     l3216:	
  3998                           ;doprnt.c: 1474: while(prec--) {
  3999                           
  4000  0FC1  30FF               	movlw	255
  4001  0FC2  00AE               	movwf	??_sprintf
  4002  0FC3  082E               	movf	??_sprintf,w
  4003  0FC4  07B7               	addwf	sprintf@prec,f
  4004  0FC5  0A37               	incf	sprintf@prec,w
  4005  0FC6  1903               	btfsc	3,2
  4006  0FC7  2F53               	goto	l3218
  4007                           
  4008                           ;doprnt.c: 1478: {
  4009                           ;doprnt.c: 1499: {
  4010                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4011  0FC8  0837               	movf	sprintf@prec,w
  4012  0FC9  00AE               	movwf	??_sprintf
  4013  0FCA  01AF               	clrf	??_sprintf+1
  4014  0FCB  35AE               	lslf	??_sprintf,f
  4015  0FCC  0DAF               	rlf	??_sprintf+1,f
  4016  0FCD  3000               	movlw	low (_hexpowers| (0+32768))
  4017  0FCE  072E               	addwf	??_sprintf,w
  4018  0FCF  0084               	movwf	4
  4019  0FD0  3090               	movlw	high (_hexpowers| (0+32768))
  4020  0FD1  3D2F               	addwfc	??_sprintf+1,w
  4021  0FD2  0085               	movwf	5
  4022  0FD3  3F00               	moviw [0]fsr0
  4023  0FD4  00A0               	movwf	___lwdiv@divisor
  4024  0FD5  3F01               	moviw [1]fsr0
  4025  0FD6  00A1               	movwf	___lwdiv@divisor+1
  4026  0FD7  0836               	movf	sprintf@val+1,w
  4027  0FD8  00A3               	movwf	___lwdiv@dividend+1
  4028  0FD9  0835               	movf	sprintf@val,w
  4029  0FDA  00A2               	movwf	___lwdiv@dividend
  4030  0FDB  318C  24E6  318F   	fcall	___lwdiv
  4031  0FDE  0020               	movlb	0	; select bank0
  4032  0FDF  0820               	movf	?___lwdiv,w
  4033  0FE0  390F               	andlw	15
  4034  0FE1  00B0               	movwf	??_sprintf+2
  4035  0FE2  0830               	movf	??_sprintf+2,w
  4036  0FE3  00B3               	movwf	sprintf@idx
  4037                           
  4038                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4039  0FE4  0833               	movf	sprintf@idx,w
  4040  0FE5  3E08               	addlw	low (STR_5| (0+32768))
  4041  0FE6  0084               	movwf	4
  4042  0FE7  3090               	movlw	high (STR_5| (0+32768))
  4043  0FE8  1803               	skipnc
  4044  0FE9  3E01               	addlw	1
  4045  0FEA  0085               	movwf	5
  4046  0FEB  0800               	movf	0,w	;code access
  4047  0FEC  00AE               	movwf	??_sprintf
  4048  0FED  082E               	movf	??_sprintf,w
  4049  0FEE  00B9               	movwf	sprintf@c
  4050                           
  4051                           ;doprnt.c: 1508: }
  4052                           ;doprnt.c: 1523: }
  4053                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4054  0FEF  0839               	movf	sprintf@c,w
  4055  0FF0  00AE               	movwf	??_sprintf
  4056  0FF1  0838               	movf	sprintf@sp,w
  4057  0FF2  0086               	movwf	6
  4058  0FF3  0187               	clrf	7
  4059  0FF4  082E               	movf	??_sprintf,w
  4060  0FF5  0081               	movwf	1
  4061  0FF6  3001               	movlw	1
  4062  0FF7  00AE               	movwf	??_sprintf
  4063  0FF8  082E               	movf	??_sprintf,w
  4064  0FF9  07B8               	addwf	sprintf@sp,f
  4065  0FFA  2FC1               	goto	l3216
  4066  0FFB                     l3220:	
  4067                           ;doprnt.c: 1525: }
  4068                           ;doprnt.c: 1533: }
  4069                           ;doprnt.c: 1535: alldone:
  4070                           
  4071                           
  4072                           ;doprnt.c: 1538: *sp = 0;
  4073  0FFB  0838               	movf	sprintf@sp,w
  4074  0FFC  0086               	movwf	6
  4075  0FFD  0187               	clrf	7
  4076  0FFE  0181               	clrf	1
  4077  0FFF  0008               	return
  4078  1000                     __end_of_sprintf:	
  4079                           ;doprnt.c: 1540: return 0;
  4080                           ;	Return value of _sprintf is never used
  4081                           
  4082                           
  4083                           	psect	text6
  4084  0CE6                     __ptext6:	
  4085 ;; *************** function ___lwdiv *****************
  4086 ;; Defined at:
  4087 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  divisor         2    0[BANK0 ] unsigned int 
  4090 ;;  dividend        2    2[BANK0 ] unsigned int 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  quotient        2    6[BANK0 ] unsigned int 
  4093 ;;  counter         1    5[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  2    0[BANK0 ] unsigned int 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  4104 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  4105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  4106 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  4107 ;;Total ram usage:        8 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    2
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_sprintf
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function ___lwdiv
  4119  0CE6                     ___lwdiv:	
  4120                           
  4121                           ;incstack = 0
  4122                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4123  0CE6  0020               	movlb	0	; select bank0
  4124  0CE7  01A6               	clrf	___lwdiv@quotient
  4125  0CE8  01A7               	clrf	___lwdiv@quotient+1
  4126  0CE9  0820               	movf	___lwdiv@divisor,w
  4127  0CEA  0421               	iorwf	___lwdiv@divisor+1,w
  4128  0CEB  1903               	btfsc	3,2
  4129  0CEC  2D16               	goto	l3138
  4130  0CED  01A5               	clrf	___lwdiv@counter
  4131  0CEE  0AA5               	incf	___lwdiv@counter,f
  4132  0CEF                     l3126:	
  4133  0CEF  1BA1               	btfsc	___lwdiv@divisor+1,7
  4134  0CF0  2CFB               	goto	l3128
  4135  0CF1  3001               	movlw	1
  4136  0CF2                     u3775:	
  4137  0CF2  35A0               	lslf	___lwdiv@divisor,f
  4138  0CF3  0DA1               	rlf	___lwdiv@divisor+1,f
  4139  0CF4  0B89               	decfsz	9,f
  4140  0CF5  2CF2               	goto	u3775
  4141  0CF6  3001               	movlw	1
  4142  0CF7  00A4               	movwf	??___lwdiv
  4143  0CF8  0824               	movf	??___lwdiv,w
  4144  0CF9  07A5               	addwf	___lwdiv@counter,f
  4145  0CFA  2CEF               	goto	l3126
  4146  0CFB                     l3128:	
  4147  0CFB  3001               	movlw	1
  4148  0CFC                     u3795:	
  4149  0CFC  35A6               	lslf	___lwdiv@quotient,f
  4150  0CFD  0DA7               	rlf	___lwdiv@quotient+1,f
  4151  0CFE  0B89               	decfsz	9,f
  4152  0CFF  2CFC               	goto	u3795
  4153  0D00  0821               	movf	___lwdiv@divisor+1,w
  4154  0D01  0223               	subwf	___lwdiv@dividend+1,w
  4155  0D02  1D03               	skipz
  4156  0D03  2D06               	goto	u3805
  4157  0D04  0820               	movf	___lwdiv@divisor,w
  4158  0D05  0222               	subwf	___lwdiv@dividend,w
  4159  0D06                     u3805:	
  4160  0D06  1C03               	skipc
  4161  0D07  2D0D               	goto	l3134
  4162  0D08  0820               	movf	___lwdiv@divisor,w
  4163  0D09  02A2               	subwf	___lwdiv@dividend,f
  4164  0D0A  0821               	movf	___lwdiv@divisor+1,w
  4165  0D0B  3BA3               	subwfb	___lwdiv@dividend+1,f
  4166  0D0C  1426               	bsf	___lwdiv@quotient,0
  4167  0D0D                     l3134:	
  4168  0D0D  3001               	movlw	1
  4169  0D0E                     u3815:	
  4170  0D0E  36A1               	lsrf	___lwdiv@divisor+1,f
  4171  0D0F  0CA0               	rrf	___lwdiv@divisor,f
  4172  0D10  0B89               	decfsz	9,f
  4173  0D11  2D0E               	goto	u3815
  4174  0D12  3001               	movlw	1
  4175  0D13  02A5               	subwf	___lwdiv@counter,f
  4176  0D14  1D03               	btfss	3,2
  4177  0D15  2CFB               	goto	l3128
  4178  0D16                     l3138:	
  4179  0D16  0827               	movf	___lwdiv@quotient+1,w
  4180  0D17  00A1               	movwf	?___lwdiv+1
  4181  0D18  0826               	movf	___lwdiv@quotient,w
  4182  0D19  00A0               	movwf	?___lwdiv
  4183  0D1A  0008               	return
  4184  0D1B                     __end_of___lwdiv:	
  4185                           
  4186                           	psect	text7
  4187  0B67                     __ptext7:	
  4188 ;; *************** function _sendAcknowledgment *****************
  4189 ;; Defined at:
  4190 ;;		line 850 in file "main.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  currentState    1    wreg     PTR unsigned char 
  4193 ;;		 -> currentStateBuffer(58), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  currentState    1    3[BANK0 ] PTR unsigned char 
  4196 ;;		 -> currentStateBuffer(58), 
  4197 ;;  Tx_count        2    1[BANK0 ] int 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        4 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_applianceControl
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _sendAcknowledgment
  4223  0B67                     _sendAcknowledgment:	
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _sendAcknowledgment: [wreg+fsr1l+fsr1h+status,2+status,0]
  4227                           ;sendAcknowledgment@currentStateBuffer stored from wreg
  4228  0B67  0020               	movlb	0	; select bank0
  4229  0B68  00A3               	movwf	sendAcknowledgment@currentStateBuffer
  4230                           
  4231                           ;main.c: 851: int Tx_count=0;
  4232  0B69  01A1               	clrf	sendAcknowledgment@Tx_count
  4233  0B6A  01A2               	clrf	sendAcknowledgment@Tx_count+1
  4234  0B6B                     l335:	
  4235                           ;main.c: 852: while(*currentStateBuffer != (0))
  4236                           
  4237  0B6B  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  4238  0B6C  0086               	movwf	6
  4239  0B6D  3001               	movlw	1	; select bank2/3
  4240  0B6E  0087               	movwf	7
  4241  0B6F  0801               	movf	1,w
  4242  0B70  1903               	btfsc	3,2
  4243  0B71  0008               	return
  4244  0B72                     l337:	
  4245                           ;main.c: 853: {
  4246                           ;main.c: 854: while (!TX1STAbits.TRMT);
  4247                           
  4248  0B72  0023               	movlb	3	; select bank3
  4249  0B73  1C9E               	btfss	30,1	;volatile
  4250  0B74  2B72               	goto	l337
  4251                           
  4252                           ;main.c: 855: TX1REG = *currentStateBuffer;
  4253  0B75  0020               	movlb	0	; select bank0
  4254  0B76  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  4255  0B77  0086               	movwf	6
  4256  0B78  3001               	movlw	1	; select bank2/3
  4257  0B79  0087               	movwf	7
  4258  0B7A  0801               	movf	1,w
  4259  0B7B  0023               	movlb	3	; select bank3
  4260  0B7C  009A               	movwf	26	;volatile
  4261                           
  4262                           ;main.c: 856: *currentStateBuffer++;
  4263  0B7D  3001               	movlw	1
  4264  0B7E  0020               	movlb	0	; select bank0
  4265  0B7F  00A0               	movwf	??_sendAcknowledgment
  4266  0B80  0820               	movf	??_sendAcknowledgment,w
  4267  0B81  07A3               	addwf	sendAcknowledgment@currentStateBuffer,f
  4268                           
  4269                           ;main.c: 857: Tx_count++;
  4270  0B82  3001               	movlw	1
  4271  0B83  07A1               	addwf	sendAcknowledgment@Tx_count,f
  4272  0B84  3000               	movlw	0
  4273  0B85  3DA2               	addwfc	sendAcknowledgment@Tx_count+1,f
  4274  0B86  2B6B               	goto	l335
  4275  0B87                     __end_of_sendAcknowledgment:	
  4276                           
  4277                           	psect	text8
  4278  0E25                     __ptext8:	
  4279 ;; *************** function _hexadecimalToDecimal *****************
  4280 ;; Defined at:
  4281 ;;		line 584 in file "main.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  hexVal          1    wreg     PTR unsigned char 
  4284 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  hexVal          1   18[BANK0 ] PTR unsigned char 
  4287 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  4288 ;;  i               2   19[BANK0 ] int 
  4289 ;;  base            2   16[BANK0 ] int 
  4290 ;;  dec_val         2   14[BANK0 ] int 
  4291 ;;  len             2   12[BANK0 ] int 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    8[BANK0 ] int 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4302 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0
  4303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  4304 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0
  4305 ;;Total ram usage:       13 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		___wmul
  4310 ;;		_strlen
  4311 ;; This function is called by:
  4312 ;;		_applianceControl
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _hexadecimalToDecimal
  4318  0E25                     _hexadecimalToDecimal:	
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _hexadecimalToDecimal: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4322                           ;hexadecimalToDecimal@hexVal stored from wreg
  4323  0E25  0020               	movlb	0	; select bank0
  4324  0E26  00B2               	movwf	hexadecimalToDecimal@hexVal
  4325                           
  4326                           ;main.c: 586: int len = strlen(hexVal);
  4327  0E27  0832               	movf	hexadecimalToDecimal@hexVal,w
  4328  0E28  318B  23A9  318E   	fcall	_strlen
  4329  0E2B  0020               	movlb	0	; select bank0
  4330  0E2C  0821               	movf	?_strlen+1,w
  4331  0E2D  00AD               	movwf	hexadecimalToDecimal@len+1
  4332  0E2E  0820               	movf	?_strlen,w
  4333  0E2F  00AC               	movwf	hexadecimalToDecimal@len
  4334                           
  4335                           ;main.c: 589: int base = 1;
  4336  0E30  3001               	movlw	1
  4337  0E31  00B0               	movwf	hexadecimalToDecimal@base
  4338  0E32  3000               	movlw	0
  4339  0E33  00B1               	movwf	hexadecimalToDecimal@base+1
  4340                           
  4341                           ;main.c: 591: int dec_val = 0;
  4342  0E34  01AE               	clrf	hexadecimalToDecimal@dec_val
  4343  0E35  01AF               	clrf	hexadecimalToDecimal@dec_val+1
  4344                           
  4345                           ;main.c: 594: for (int i=len-1; i>=0; i--)
  4346  0E36  082C               	movf	hexadecimalToDecimal@len,w
  4347  0E37  3EFF               	addlw	255
  4348  0E38  00B3               	movwf	hexadecimalToDecimal@i
  4349  0E39  30FF               	movlw	255
  4350  0E3A  3D2D               	addwfc	hexadecimalToDecimal@len+1,w
  4351  0E3B  00B4               	movwf	hexadecimalToDecimal@i+1
  4352  0E3C  1BB4               	btfsc	hexadecimalToDecimal@i+1,7
  4353  0E3D  2E9F               	goto	l3280
  4354  0E3E                     l3260:	
  4355                           
  4356                           ;main.c: 595: {
  4357                           ;main.c: 599: if (hexVal[i]>='0' && hexVal[i]<='9')
  4358  0E3E  0833               	movf	hexadecimalToDecimal@i,w
  4359  0E3F  0732               	addwf	hexadecimalToDecimal@hexVal,w
  4360  0E40  00AA               	movwf	??_hexadecimalToDecimal
  4361  0E41  082A               	movf	??_hexadecimalToDecimal,w
  4362  0E42  0086               	movwf	6
  4363  0E43  0187               	clrf	7
  4364  0E44  3030               	movlw	48
  4365  0E45  0201               	subwf	1,w
  4366  0E46  1C03               	skipc
  4367  0E47  2E5B               	goto	l3268
  4368  0E48  0833               	movf	hexadecimalToDecimal@i,w
  4369  0E49  0732               	addwf	hexadecimalToDecimal@hexVal,w
  4370  0E4A  00AA               	movwf	??_hexadecimalToDecimal
  4371  0E4B  082A               	movf	??_hexadecimalToDecimal,w
  4372  0E4C  0086               	movwf	6
  4373  0E4D  0187               	clrf	7
  4374  0E4E  303A               	movlw	58
  4375  0E4F  0201               	subwf	1,w
  4376  0E50  1803               	skipnc
  4377  0E51  2E5B               	goto	l3268
  4378                           
  4379                           ;main.c: 600: {
  4380                           ;main.c: 601: dec_val += (hexVal[i] - 48)*base;
  4381  0E52  0833               	movf	hexadecimalToDecimal@i,w
  4382  0E53  0732               	addwf	hexadecimalToDecimal@hexVal,w
  4383  0E54  00AA               	movwf	??_hexadecimalToDecimal
  4384  0E55  082A               	movf	??_hexadecimalToDecimal,w
  4385  0E56  0086               	movwf	6
  4386  0E57  0187               	clrf	7
  4387  0E58  0801               	movf	1,w
  4388  0E59  3ED0               	addlw	208
  4389  0E5A  2E77               	goto	L2
  4390  0E5B                     l3268:	
  4391                           ;main.c: 605: }
  4392                           
  4393                           ;main.c: 604: base = base * 16;
  4394                           
  4395                           
  4396                           ;main.c: 610: else if (hexVal[i]>='A' && hexVal[i]<='F')
  4397  0E5B  0833               	movf	hexadecimalToDecimal@i,w
  4398  0E5C  0732               	addwf	hexadecimalToDecimal@hexVal,w
  4399  0E5D  00AA               	movwf	??_hexadecimalToDecimal
  4400  0E5E  082A               	movf	??_hexadecimalToDecimal,w
  4401  0E5F  0086               	movwf	6
  4402  0E60  0187               	clrf	7
  4403  0E61  3041               	movlw	65
  4404  0E62  0201               	subwf	1,w
  4405  0E63  1C03               	skipc
  4406  0E64  2E99               	goto	l3276
  4407  0E65  0833               	movf	hexadecimalToDecimal@i,w
  4408  0E66  0732               	addwf	hexadecimalToDecimal@hexVal,w
  4409  0E67  00AA               	movwf	??_hexadecimalToDecimal
  4410  0E68  082A               	movf	??_hexadecimalToDecimal,w
  4411  0E69  0086               	movwf	6
  4412  0E6A  0187               	clrf	7
  4413  0E6B  3047               	movlw	71
  4414  0E6C  0201               	subwf	1,w
  4415  0E6D  1803               	skipnc
  4416  0E6E  2E99               	goto	l3276
  4417                           
  4418                           ;main.c: 611: {
  4419                           ;main.c: 612: dec_val += (hexVal[i] - 55)*base;
  4420  0E6F  0833               	movf	hexadecimalToDecimal@i,w
  4421  0E70  0732               	addwf	hexadecimalToDecimal@hexVal,w
  4422  0E71  00AA               	movwf	??_hexadecimalToDecimal
  4423  0E72  082A               	movf	??_hexadecimalToDecimal,w
  4424  0E73  0086               	movwf	6
  4425  0E74  0187               	clrf	7
  4426  0E75  0801               	movf	1,w
  4427  0E76  3EC9               	addlw	201
  4428  0E77                     L2:	
  4429  0E77  00A0               	movwf	___wmul@multiplier
  4430  0E78  30FF               	movlw	255
  4431  0E79  1803               	skipnc
  4432  0E7A  3000               	movlw	0
  4433  0E7B  00A1               	movwf	___wmul@multiplier+1
  4434  0E7C  0831               	movf	hexadecimalToDecimal@base+1,w
  4435  0E7D  00A3               	movwf	___wmul@multiplicand+1
  4436  0E7E  0830               	movf	hexadecimalToDecimal@base,w
  4437  0E7F  00A2               	movwf	___wmul@multiplicand
  4438  0E80  318B  234B  318E   	fcall	___wmul
  4439  0E83  0020               	movlb	0	; select bank0
  4440  0E84  0820               	movf	?___wmul,w
  4441  0E85  07AE               	addwf	hexadecimalToDecimal@dec_val,f
  4442  0E86  0821               	movf	?___wmul+1,w
  4443  0E87  3DAF               	addwfc	hexadecimalToDecimal@dec_val+1,f
  4444                           
  4445                           ;main.c: 615: base = base*16;
  4446  0E88  0831               	movf	hexadecimalToDecimal@base+1,w
  4447  0E89  00AB               	movwf	??_hexadecimalToDecimal+1
  4448  0E8A  0830               	movf	hexadecimalToDecimal@base,w
  4449  0E8B  00AA               	movwf	??_hexadecimalToDecimal
  4450  0E8C  0EAA               	swapf	??_hexadecimalToDecimal,f
  4451  0E8D  0EAB               	swapf	??_hexadecimalToDecimal+1,f
  4452  0E8E  30F0               	movlw	240
  4453  0E8F  05AB               	andwf	??_hexadecimalToDecimal+1,f
  4454  0E90  082A               	movf	??_hexadecimalToDecimal,w
  4455  0E91  390F               	andlw	15
  4456  0E92  04AB               	iorwf	??_hexadecimalToDecimal+1,f
  4457  0E93  30F0               	movlw	240
  4458  0E94  05AA               	andwf	??_hexadecimalToDecimal,f
  4459  0E95  082A               	movf	??_hexadecimalToDecimal,w
  4460  0E96  00B0               	movwf	hexadecimalToDecimal@base
  4461  0E97  082B               	movf	??_hexadecimalToDecimal+1,w
  4462  0E98  00B1               	movwf	hexadecimalToDecimal@base+1
  4463  0E99                     l3276:	
  4464  0E99  30FF               	movlw	255
  4465  0E9A  07B3               	addwf	hexadecimalToDecimal@i,f
  4466  0E9B  30FF               	movlw	255
  4467  0E9C  3DB4               	addwfc	hexadecimalToDecimal@i+1,f
  4468  0E9D  1FB4               	btfss	hexadecimalToDecimal@i+1,7
  4469  0E9E  2E3E               	goto	l3260
  4470  0E9F                     l3280:	
  4471                           
  4472                           ;main.c: 616: }
  4473                           ;main.c: 617: }
  4474                           ;main.c: 619: return dec_val;
  4475  0E9F  082F               	movf	hexadecimalToDecimal@dec_val+1,w
  4476  0EA0  00A9               	movwf	?_hexadecimalToDecimal+1
  4477  0EA1  082E               	movf	hexadecimalToDecimal@dec_val,w
  4478  0EA2  00A8               	movwf	?_hexadecimalToDecimal
  4479  0EA3  0008               	return
  4480  0EA4                     __end_of_hexadecimalToDecimal:	
  4481                           
  4482                           	psect	text9
  4483  0BA9                     __ptext9:	
  4484 ;; *************** function _strlen *****************
  4485 ;; Defined at:
  4486 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  s               1    wreg     PTR const unsigned char 
  4489 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(5), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4492 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(5), 
  4493 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  4494 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(5), 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  2    0[BANK0 ] unsigned int 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4507 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:        8 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    2
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_applianceControl
  4515 ;;		_hexadecimalToDecimal
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function _strlen
  4521  0BA9                     _strlen:	
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4525                           ;strlen@s stored from wreg
  4526  0BA9  0020               	movlb	0	; select bank0
  4527  0BAA  00A6               	movwf	strlen@s
  4528  0BAB  0826               	movf	strlen@s,w
  4529  0BAC  00A2               	movwf	??_strlen
  4530  0BAD  0822               	movf	??_strlen,w
  4531  0BAE  00A7               	movwf	strlen@cp
  4532  0BAF                     l3052:	
  4533  0BAF  0827               	movf	strlen@cp,w
  4534  0BB0  0086               	movwf	6
  4535  0BB1  0187               	clrf	7
  4536  0BB2  0801               	movf	1,w
  4537  0BB3  1903               	btfsc	3,2
  4538  0BB4  2BBA               	goto	l3054
  4539  0BB5  3001               	movlw	1
  4540  0BB6  00A2               	movwf	??_strlen
  4541  0BB7  0822               	movf	??_strlen,w
  4542  0BB8  07A7               	addwf	strlen@cp,f
  4543  0BB9  2BAF               	goto	l3052
  4544  0BBA                     l3054:	
  4545  0BBA  0826               	movf	strlen@s,w
  4546  0BBB  00A2               	movwf	??_strlen
  4547  0BBC  3000               	movlw	0
  4548  0BBD  00A3               	movwf	??_strlen+1
  4549  0BBE  09A2               	comf	??_strlen,f
  4550  0BBF  09A3               	comf	??_strlen+1,f
  4551  0BC0  0AA2               	incf	??_strlen,f
  4552  0BC1  1903               	skipnz
  4553  0BC2  0AA3               	incf	??_strlen+1,f
  4554  0BC3  0827               	movf	strlen@cp,w
  4555  0BC4  00A4               	movwf	??_strlen+2
  4556  0BC5  3000               	movlw	0
  4557  0BC6  00A5               	movwf	??_strlen+3
  4558  0BC7  0822               	movf	??_strlen,w
  4559  0BC8  0724               	addwf	??_strlen+2,w
  4560  0BC9  00A0               	movwf	?_strlen
  4561  0BCA  0823               	movf	??_strlen+1,w
  4562  0BCB  3D25               	addwfc	??_strlen+3,w
  4563  0BCC  00A1               	movwf	?_strlen+1
  4564  0BCD  0008               	return
  4565  0BCE                     __end_of_strlen:	
  4566                           
  4567                           	psect	text10
  4568  0DBA                     __ptext10:	
  4569 ;; *************** function _atoi *****************
  4570 ;; Defined at:
  4571 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  s               1    wreg     PTR const unsigned char 
  4574 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  4577 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  4578 ;;  a               2   11[BANK0 ] int 
  4579 ;;  sign            1   10[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2    6[BANK0 ] int 
  4582 ;; Registers used:
  4583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4590 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  4591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  4592 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  4593 ;;Total ram usage:        8 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    3
  4596 ;; This function calls:
  4597 ;;		___wmul
  4598 ;;		_isdigit
  4599 ;; This function is called by:
  4600 ;;		_applianceControl
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function _atoi
  4606  0DBA                     _atoi:	
  4607                           
  4608                           ;incstack = 0
  4609                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4610                           ;atoi@s stored from wreg
  4611  0DBA  0020               	movlb	0	; select bank0
  4612  0DBB  00AD               	movwf	atoi@s
  4613  0DBC                     l3146:	
  4614  0DBC  082D               	movf	atoi@s,w
  4615  0DBD  0086               	movwf	6
  4616  0DBE  0187               	clrf	7
  4617  0DBF  3020               	movlw	32
  4618  0DC0  0601               	xorwf	1,w
  4619  0DC1  1D03               	btfss	3,2
  4620  0DC2  2DC8               	goto	l3148
  4621  0DC3                     l3144:	
  4622  0DC3  3001               	movlw	1
  4623  0DC4  00A8               	movwf	??_atoi
  4624  0DC5  0828               	movf	??_atoi,w
  4625  0DC6  07AD               	addwf	atoi@s,f
  4626  0DC7  2DBC               	goto	l3146
  4627  0DC8                     l3148:	
  4628  0DC8  082D               	movf	atoi@s,w
  4629  0DC9  0086               	movwf	6
  4630  0DCA  0187               	clrf	7
  4631  0DCB  3009               	movlw	9
  4632  0DCC  0601               	xorwf	1,w
  4633  0DCD  1903               	btfsc	3,2
  4634  0DCE  2DC3               	goto	l3144
  4635  0DCF  01AB               	clrf	atoi@a
  4636  0DD0  01AC               	clrf	atoi@a+1
  4637  0DD1  01AA               	clrf	atoi@sign
  4638  0DD2  082D               	movf	atoi@s,w
  4639  0DD3  0086               	movwf	6
  4640  0DD4  0187               	clrf	7
  4641  0DD5  302D               	movlw	45
  4642  0DD6  0601               	xorwf	1,w
  4643  0DD7  1D03               	btfss	3,2
  4644  0DD8  2DDE               	goto	l3156
  4645  0DD9  3001               	movlw	1
  4646  0DDA  00A8               	movwf	??_atoi
  4647  0DDB  0828               	movf	??_atoi,w
  4648  0DDC  07AA               	addwf	atoi@sign,f
  4649  0DDD  2DE5               	goto	l3162
  4650  0DDE                     l3156:	
  4651  0DDE  082D               	movf	atoi@s,w
  4652  0DDF  0086               	movwf	6
  4653  0DE0  0187               	clrf	7
  4654  0DE1  302B               	movlw	43
  4655  0DE2  0601               	xorwf	1,w
  4656  0DE3  1D03               	btfss	3,2
  4657  0DE4  2DE9               	goto	l3164
  4658  0DE5                     l3162:	
  4659  0DE5  3001               	movlw	1
  4660  0DE6  00A8               	movwf	??_atoi
  4661  0DE7  0828               	movf	??_atoi,w
  4662  0DE8  07AD               	addwf	atoi@s,f
  4663  0DE9                     l3164:	
  4664  0DE9  082D               	movf	atoi@s,w
  4665  0DEA  0086               	movwf	6
  4666  0DEB  0187               	clrf	7
  4667  0DEC  0801               	movf	1,w
  4668  0DED  318A  229B  318D   	fcall	_isdigit
  4669  0DF0  1C03               	btfss	3,0
  4670  0DF1  2E10               	goto	l3166
  4671  0DF2  0020               	movlb	0	; select bank0
  4672  0DF3  082C               	movf	atoi@a+1,w
  4673  0DF4  00A1               	movwf	___wmul@multiplier+1
  4674  0DF5  082B               	movf	atoi@a,w
  4675  0DF6  00A0               	movwf	___wmul@multiplier
  4676  0DF7  300A               	movlw	10
  4677  0DF8  00A2               	movwf	___wmul@multiplicand
  4678  0DF9  3000               	movlw	0
  4679  0DFA  00A3               	movwf	___wmul@multiplicand+1
  4680  0DFB  318B  234B  318D   	fcall	___wmul
  4681  0DFE  0020               	movlb	0	; select bank0
  4682  0DFF  082D               	movf	atoi@s,w
  4683  0E00  0086               	movwf	6
  4684  0E01  0187               	clrf	7
  4685  0E02  0801               	movf	1,w
  4686  0E03  0720               	addwf	?___wmul,w
  4687  0E04  00A8               	movwf	??_atoi
  4688  0E05  0821               	movf	?___wmul+1,w
  4689  0E06  1803               	skipnc
  4690  0E07  0A21               	incf	?___wmul+1,w
  4691  0E08  00A9               	movwf	??_atoi+1
  4692  0E09  0828               	movf	??_atoi,w
  4693  0E0A  3ED0               	addlw	208
  4694  0E0B  00AB               	movwf	atoi@a
  4695  0E0C  30FF               	movlw	255
  4696  0E0D  3D29               	addwfc	??_atoi+1,w
  4697  0E0E  00AC               	movwf	atoi@a+1
  4698  0E0F  2DE5               	goto	l3162
  4699  0E10                     l3166:	
  4700  0E10  0020               	movlb	0	; select bank0
  4701  0E11  082A               	movf	atoi@sign,w
  4702  0E12  1903               	btfsc	3,2
  4703  0E13  2E20               	goto	l3172
  4704  0E14  092B               	comf	atoi@a,w
  4705  0E15  00A8               	movwf	??_atoi
  4706  0E16  092C               	comf	atoi@a+1,w
  4707  0E17  00A9               	movwf	??_atoi+1
  4708  0E18  0AA8               	incf	??_atoi,f
  4709  0E19  1903               	skipnz
  4710  0E1A  0AA9               	incf	??_atoi+1,f
  4711  0E1B  0828               	movf	??_atoi,w
  4712  0E1C  00A6               	movwf	?_atoi
  4713  0E1D  0829               	movf	??_atoi+1,w
  4714  0E1E  00A7               	movwf	?_atoi+1
  4715  0E1F  0008               	return
  4716  0E20                     l3172:	
  4717  0E20  082C               	movf	atoi@a+1,w
  4718  0E21  00A7               	movwf	?_atoi+1
  4719  0E22  082B               	movf	atoi@a,w
  4720  0E23  00A6               	movwf	?_atoi
  4721  0E24  0008               	return
  4722  0E25                     __end_of_atoi:	
  4723                           
  4724                           	psect	text11
  4725  0A9B                     __ptext11:	
  4726 ;; *************** function _isdigit *****************
  4727 ;; Defined at:
  4728 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  c               1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  c               1    1[BANK0 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;		None               void
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        2 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    2
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_atoi
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _isdigit
  4758  0A9B                     _isdigit:	
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4762                           ;isdigit@c stored from wreg
  4763  0A9B  0020               	movlb	0	; select bank0
  4764  0A9C  00A1               	movwf	isdigit@c
  4765  0A9D  01A0               	clrf	_isdigit$990
  4766  0A9E  303A               	movlw	58
  4767  0A9F  0221               	subwf	isdigit@c,w
  4768  0AA0  1803               	skipnc
  4769  0AA1  2AA8               	goto	l3112
  4770  0AA2  3030               	movlw	48
  4771  0AA3  0221               	subwf	isdigit@c,w
  4772  0AA4  1C03               	skipc
  4773  0AA5  2AA8               	goto	l3112
  4774  0AA6  01A0               	clrf	_isdigit$990
  4775  0AA7  0AA0               	incf	_isdigit$990,f
  4776  0AA8                     l3112:	
  4777  0AA8  0C20               	rrf	_isdigit$990,w
  4778  0AA9  0008               	return
  4779  0AAA                     __end_of_isdigit:	
  4780                           
  4781                           	psect	text12
  4782  0B4B                     __ptext12:	
  4783 ;; *************** function ___wmul *****************
  4784 ;; Defined at:
  4785 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4788 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  product         2    4[BANK0 ] unsigned int 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  2    0[BANK0 ] unsigned int 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4800 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  4801 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  4803 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  4804 ;;Total ram usage:        6 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    2
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_hexadecimalToDecimal
  4811 ;;		_atoi
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function ___wmul
  4817  0B4B                     ___wmul:	
  4818                           
  4819                           ;incstack = 0
  4820                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4821  0B4B  0020               	movlb	0	; select bank0
  4822  0B4C  01A4               	clrf	___wmul@product
  4823  0B4D  01A5               	clrf	___wmul@product+1
  4824  0B4E                     l3060:	
  4825  0B4E  1C20               	btfss	___wmul@multiplier,0
  4826  0B4F  2B54               	goto	l388
  4827  0B50  0822               	movf	___wmul@multiplicand,w
  4828  0B51  07A4               	addwf	___wmul@product,f
  4829  0B52  0823               	movf	___wmul@multiplicand+1,w
  4830  0B53  3DA5               	addwfc	___wmul@product+1,f
  4831  0B54                     l388:	
  4832  0B54  3001               	movlw	1
  4833  0B55                     u3595:	
  4834  0B55  35A2               	lslf	___wmul@multiplicand,f
  4835  0B56  0DA3               	rlf	___wmul@multiplicand+1,f
  4836  0B57  0B89               	decfsz	9,f
  4837  0B58  2B55               	goto	u3595
  4838  0B59  3001               	movlw	1
  4839  0B5A                     u3605:	
  4840  0B5A  36A1               	lsrf	___wmul@multiplier+1,f
  4841  0B5B  0CA0               	rrf	___wmul@multiplier,f
  4842  0B5C  0B89               	decfsz	9,f
  4843  0B5D  2B5A               	goto	u3605
  4844  0B5E  0820               	movf	___wmul@multiplier,w
  4845  0B5F  0421               	iorwf	___wmul@multiplier+1,w
  4846  0B60  1D03               	btfss	3,2
  4847  0B61  2B4E               	goto	l3060
  4848  0B62  0825               	movf	___wmul@product+1,w
  4849  0B63  00A1               	movwf	?___wmul+1
  4850  0B64  0824               	movf	___wmul@product,w
  4851  0B65  00A0               	movwf	?___wmul
  4852  0B66  0008               	return
  4853  0B67                     __end_of___wmul:	
  4854                           
  4855                           	psect	text13
  4856  076D                     __ptext13:	
  4857 ;; *************** function ___fttol *****************
  4858 ;; Defined at:
  4859 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  f1              3   30[BANK0 ] float 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  lval            4   39[BANK0 ] unsigned long 
  4864 ;;  exp1            1   43[BANK0 ] unsigned char 
  4865 ;;  sign1           1   38[BANK0 ] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  4   30[BANK0 ] long 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4875 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  4876 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  4877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4878 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0
  4879 ;;Total ram usage:       14 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    2
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_applianceControl
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function ___fttol
  4891  076D                     ___fttol:	
  4892                           
  4893                           ;incstack = 0
  4894                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4895  076D  0020               	movlb	0	; select bank0
  4896  076E  083E               	movf	___fttol@f1,w
  4897  076F  00C2               	movwf	??___fttol
  4898  0770  083F               	movf	___fttol@f1+1,w
  4899  0771  00C3               	movwf	??___fttol+1
  4900  0772  0840               	movf	___fttol@f1+2,w
  4901  0773  00C4               	movwf	??___fttol+2
  4902  0774  1003               	clrc
  4903  0775  0D43               	rlf	??___fttol+1,w
  4904  0776  0D44               	rlf	??___fttol+2,w
  4905  0777  00C5               	movwf	??___fttol+3
  4906  0778  0845               	movf	??___fttol+3,w
  4907  0779  00CB               	movwf	___fttol@exp1
  4908  077A  084B               	movf	___fttol@exp1,w
  4909  077B  1D03               	btfss	3,2
  4910  077C  2F86               	goto	l3454
  4911  077D  3000               	movlw	0
  4912  077E  00C1               	movwf	?___fttol+3
  4913  077F  3000               	movlw	0
  4914  0780  00C0               	movwf	?___fttol+2
  4915  0781  3000               	movlw	0
  4916  0782  00BF               	movwf	?___fttol+1
  4917  0783  3000               	movlw	0
  4918  0784  00BE               	movwf	?___fttol
  4919  0785  0008               	return
  4920  0786                     l3454:	
  4921  0786  083E               	movf	___fttol@f1,w
  4922  0787  00C2               	movwf	??___fttol
  4923  0788  083F               	movf	___fttol@f1+1,w
  4924  0789  00C3               	movwf	??___fttol+1
  4925  078A  0840               	movf	___fttol@f1+2,w
  4926  078B  00C4               	movwf	??___fttol+2
  4927  078C  3017               	movlw	23
  4928  078D                     u4285:	
  4929  078D  36C4               	lsrf	??___fttol+2,f
  4930  078E  0CC3               	rrf	??___fttol+1,f
  4931  078F  0CC2               	rrf	??___fttol,f
  4932  0790  0B89               	decfsz	9,f
  4933  0791  2F8D               	goto	u4285
  4934  0792  0842               	movf	??___fttol,w
  4935  0793  00C5               	movwf	??___fttol+3
  4936  0794  0845               	movf	??___fttol+3,w
  4937  0795  00C6               	movwf	___fttol@sign1
  4938  0796  17BF               	bsf	___fttol@f1+1,7
  4939  0797  30FF               	movlw	255
  4940  0798  05BE               	andwf	___fttol@f1,f
  4941  0799  30FF               	movlw	255
  4942  079A  05BF               	andwf	___fttol@f1+1,f
  4943  079B  3000               	movlw	0
  4944  079C  05C0               	andwf	___fttol@f1+2,f
  4945  079D  083E               	movf	___fttol@f1,w
  4946  079E  00C7               	movwf	___fttol@lval
  4947  079F  083F               	movf	___fttol@f1+1,w
  4948  07A0  00C8               	movwf	___fttol@lval+1
  4949  07A1  0840               	movf	___fttol@f1+2,w
  4950  07A2  00C9               	movwf	___fttol@lval+2
  4951  07A3  01CA               	clrf	___fttol@lval+3
  4952  07A4  308E               	movlw	142
  4953  07A5  02CB               	subwf	___fttol@exp1,f
  4954  07A6  1FCB               	btfss	___fttol@exp1,7
  4955  07A7  2FC4               	goto	l3474
  4956  07A8  084B               	movf	___fttol@exp1,w
  4957  07A9  3A80               	xorlw	128
  4958  07AA  3E8F               	addlw	143
  4959  07AB  1803               	skipnc
  4960  07AC  2FB6               	goto	l3472
  4961  07AD  3000               	movlw	0
  4962  07AE  00C1               	movwf	?___fttol+3
  4963  07AF  3000               	movlw	0
  4964  07B0  00C0               	movwf	?___fttol+2
  4965  07B1  3000               	movlw	0
  4966  07B2  00BF               	movwf	?___fttol+1
  4967  07B3  3000               	movlw	0
  4968  07B4  00BE               	movwf	?___fttol
  4969  07B5  0008               	return
  4970  07B6                     l3472:	
  4971  07B6  3001               	movlw	1
  4972  07B7                     u4315:	
  4973  07B7  36CA               	lsrf	___fttol@lval+3,f
  4974  07B8  0CC9               	rrf	___fttol@lval+2,f
  4975  07B9  0CC8               	rrf	___fttol@lval+1,f
  4976  07BA  0CC7               	rrf	___fttol@lval,f
  4977  07BB  0B89               	decfsz	9,f
  4978  07BC  2FB7               	goto	u4315
  4979  07BD  3001               	movlw	1
  4980  07BE  00C2               	movwf	??___fttol
  4981  07BF  0842               	movf	??___fttol,w
  4982  07C0  07CB               	addwf	___fttol@exp1,f
  4983  07C1  1903               	btfsc	3,2
  4984  07C2  2FDD               	goto	l3482
  4985  07C3  2FB6               	goto	l3472
  4986  07C4                     l3474:	
  4987  07C4  3018               	movlw	24
  4988  07C5  024B               	subwf	___fttol@exp1,w
  4989  07C6  1C03               	skipc
  4990  07C7  2FDA               	goto	l655
  4991  07C8  3000               	movlw	0
  4992  07C9  00C1               	movwf	?___fttol+3
  4993  07CA  3000               	movlw	0
  4994  07CB  00C0               	movwf	?___fttol+2
  4995  07CC  3000               	movlw	0
  4996  07CD  00BF               	movwf	?___fttol+1
  4997  07CE  3000               	movlw	0
  4998  07CF  00BE               	movwf	?___fttol
  4999  07D0  0008               	return
  5000  07D1                     l3480:	
  5001  07D1  3001               	movlw	1
  5002  07D2                     u4345:	
  5003  07D2  35C7               	lslf	___fttol@lval,f
  5004  07D3  0DC8               	rlf	___fttol@lval+1,f
  5005  07D4  0DC9               	rlf	___fttol@lval+2,f
  5006  07D5  0DCA               	rlf	___fttol@lval+3,f
  5007  07D6  0B89               	decfsz	9,f
  5008  07D7  2FD2               	goto	u4345
  5009  07D8  3001               	movlw	1
  5010  07D9  02CB               	subwf	___fttol@exp1,f
  5011  07DA                     l655:	
  5012  07DA  084B               	movf	___fttol@exp1,w
  5013  07DB  1D03               	btfss	3,2
  5014  07DC  2FD1               	goto	l3480
  5015  07DD                     l3482:	
  5016  07DD  0846               	movf	___fttol@sign1,w
  5017  07DE  1903               	btfsc	3,2
  5018  07DF  2FEB               	goto	l3486
  5019  07E0  09C7               	comf	___fttol@lval,f
  5020  07E1  09C8               	comf	___fttol@lval+1,f
  5021  07E2  09C9               	comf	___fttol@lval+2,f
  5022  07E3  09CA               	comf	___fttol@lval+3,f
  5023  07E4  0AC7               	incf	___fttol@lval,f
  5024  07E5  1903               	skipnz
  5025  07E6  0AC8               	incf	___fttol@lval+1,f
  5026  07E7  1903               	skipnz
  5027  07E8  0AC9               	incf	___fttol@lval+2,f
  5028  07E9  1903               	skipnz
  5029  07EA  0ACA               	incf	___fttol@lval+3,f
  5030  07EB                     l3486:	
  5031  07EB  084A               	movf	___fttol@lval+3,w
  5032  07EC  00C1               	movwf	?___fttol+3
  5033  07ED  0849               	movf	___fttol@lval+2,w
  5034  07EE  00C0               	movwf	?___fttol+2
  5035  07EF  0848               	movf	___fttol@lval+1,w
  5036  07F0  00BF               	movwf	?___fttol+1
  5037  07F1  0847               	movf	___fttol@lval,w
  5038  07F2  00BE               	movwf	?___fttol
  5039  07F3  0008               	return
  5040  07F4                     __end_of___fttol:	
  5041                           
  5042                           	psect	text14
  5043  06B9                     __ptext14:	
  5044 ;; *************** function ___ftmul *****************
  5045 ;; Defined at:
  5046 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  f1              3    8[BANK0 ] float 
  5049 ;;  f2              3   11[BANK0 ] float 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  5052 ;;  sign            1   23[BANK0 ] unsigned char 
  5053 ;;  cntr            1   22[BANK0 ] unsigned char 
  5054 ;;  exp             1   18[BANK0 ] unsigned char 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  3    8[BANK0 ] float 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, pclath, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5064 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  5065 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  5066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  5067 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0
  5068 ;;Total ram usage:       16 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    3
  5071 ;; This function calls:
  5072 ;;		___ftpack
  5073 ;; This function is called by:
  5074 ;;		_applianceControl
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function ___ftmul
  5080  06B9                     ___ftmul:	
  5081                           
  5082                           ;incstack = 0
  5083                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5084  06B9  0020               	movlb	0	; select bank0
  5085  06BA  0828               	movf	___ftmul@f1,w
  5086  06BB  00AE               	movwf	??___ftmul
  5087  06BC  0829               	movf	___ftmul@f1+1,w
  5088  06BD  00AF               	movwf	??___ftmul+1
  5089  06BE  082A               	movf	___ftmul@f1+2,w
  5090  06BF  00B0               	movwf	??___ftmul+2
  5091  06C0  1003               	clrc
  5092  06C1  0D2F               	rlf	??___ftmul+1,w
  5093  06C2  0D30               	rlf	??___ftmul+2,w
  5094  06C3  00B1               	movwf	??___ftmul+3
  5095  06C4  0831               	movf	??___ftmul+3,w
  5096  06C5  00B2               	movwf	___ftmul@exp
  5097  06C6  0832               	movf	___ftmul@exp,w
  5098  06C7  1D03               	btfss	3,2
  5099  06C8  2ED0               	goto	l3404
  5100  06C9  3000               	movlw	0
  5101  06CA  00A8               	movwf	?___ftmul
  5102  06CB  3000               	movlw	0
  5103  06CC  00A9               	movwf	?___ftmul+1
  5104  06CD  3000               	movlw	0
  5105  06CE  00AA               	movwf	?___ftmul+2
  5106  06CF  0008               	return
  5107  06D0                     l3404:	
  5108  06D0  082B               	movf	___ftmul@f2,w
  5109  06D1  00AE               	movwf	??___ftmul
  5110  06D2  082C               	movf	___ftmul@f2+1,w
  5111  06D3  00AF               	movwf	??___ftmul+1
  5112  06D4  082D               	movf	___ftmul@f2+2,w
  5113  06D5  00B0               	movwf	??___ftmul+2
  5114  06D6  1003               	clrc
  5115  06D7  0D2F               	rlf	??___ftmul+1,w
  5116  06D8  0D30               	rlf	??___ftmul+2,w
  5117  06D9  00B1               	movwf	??___ftmul+3
  5118  06DA  0831               	movf	??___ftmul+3,w
  5119  06DB  00B7               	movwf	___ftmul@sign
  5120  06DC  0837               	movf	___ftmul@sign,w
  5121  06DD  1D03               	btfss	3,2
  5122  06DE  2EE6               	goto	l3410
  5123  06DF  3000               	movlw	0
  5124  06E0  00A8               	movwf	?___ftmul
  5125  06E1  3000               	movlw	0
  5126  06E2  00A9               	movwf	?___ftmul+1
  5127  06E3  3000               	movlw	0
  5128  06E4  00AA               	movwf	?___ftmul+2
  5129  06E5  0008               	return
  5130  06E6                     l3410:	
  5131  06E6  0837               	movf	___ftmul@sign,w
  5132  06E7  3E7B               	addlw	123
  5133  06E8  00AE               	movwf	??___ftmul
  5134  06E9  082E               	movf	??___ftmul,w
  5135  06EA  07B2               	addwf	___ftmul@exp,f
  5136  06EB  0828               	movf	___ftmul@f1,w
  5137  06EC  00AE               	movwf	??___ftmul
  5138  06ED  0829               	movf	___ftmul@f1+1,w
  5139  06EE  00AF               	movwf	??___ftmul+1
  5140  06EF  082A               	movf	___ftmul@f1+2,w
  5141  06F0  00B0               	movwf	??___ftmul+2
  5142  06F1  3010               	movlw	16
  5143  06F2                     u4175:	
  5144  06F2  36B0               	lsrf	??___ftmul+2,f
  5145  06F3  0CAF               	rrf	??___ftmul+1,f
  5146  06F4  0CAE               	rrf	??___ftmul,f
  5147  06F5  0B89               	decfsz	9,f
  5148  06F6  2EF2               	goto	u4175
  5149  06F7  082E               	movf	??___ftmul,w
  5150  06F8  00B1               	movwf	??___ftmul+3
  5151  06F9  0831               	movf	??___ftmul+3,w
  5152  06FA  00B7               	movwf	___ftmul@sign
  5153  06FB  082B               	movf	___ftmul@f2,w
  5154  06FC  00AE               	movwf	??___ftmul
  5155  06FD  082C               	movf	___ftmul@f2+1,w
  5156  06FE  00AF               	movwf	??___ftmul+1
  5157  06FF  082D               	movf	___ftmul@f2+2,w
  5158  0700  00B0               	movwf	??___ftmul+2
  5159  0701  3010               	movlw	16
  5160  0702                     u4185:	
  5161  0702  36B0               	lsrf	??___ftmul+2,f
  5162  0703  0CAF               	rrf	??___ftmul+1,f
  5163  0704  0CAE               	rrf	??___ftmul,f
  5164  0705  0B89               	decfsz	9,f
  5165  0706  2F02               	goto	u4185
  5166  0707  082E               	movf	??___ftmul,w
  5167  0708  00B1               	movwf	??___ftmul+3
  5168  0709  0831               	movf	??___ftmul+3,w
  5169  070A  06B7               	xorwf	___ftmul@sign,f
  5170  070B  3080               	movlw	128
  5171  070C  00AE               	movwf	??___ftmul
  5172  070D  082E               	movf	??___ftmul,w
  5173  070E  05B7               	andwf	___ftmul@sign,f
  5174  070F  17A9               	bsf	___ftmul@f1+1,7
  5175  0710  17AC               	bsf	___ftmul@f2+1,7
  5176  0711  30FF               	movlw	255
  5177  0712  05AB               	andwf	___ftmul@f2,f
  5178  0713  30FF               	movlw	255
  5179  0714  05AC               	andwf	___ftmul@f2+1,f
  5180  0715  3000               	movlw	0
  5181  0716  05AD               	andwf	___ftmul@f2+2,f
  5182  0717  3000               	movlw	0
  5183  0718  00B3               	movwf	___ftmul@f3_as_product
  5184  0719  3000               	movlw	0
  5185  071A  00B4               	movwf	___ftmul@f3_as_product+1
  5186  071B  3000               	movlw	0
  5187  071C  00B5               	movwf	___ftmul@f3_as_product+2
  5188  071D  3007               	movlw	7
  5189  071E  00AE               	movwf	??___ftmul
  5190  071F  082E               	movf	??___ftmul,w
  5191  0720  00B6               	movwf	___ftmul@cntr
  5192  0721                     l3422:	
  5193  0721  1C28               	btfss	___ftmul@f1,0
  5194  0722  2F29               	goto	l3426
  5195  0723  082B               	movf	___ftmul@f2,w
  5196  0724  07B3               	addwf	___ftmul@f3_as_product,f
  5197  0725  082C               	movf	___ftmul@f2+1,w
  5198  0726  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  5199  0727  082D               	movf	___ftmul@f2+2,w
  5200  0728  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  5201  0729                     l3426:	
  5202  0729  3001               	movlw	1
  5203  072A                     u4205:	
  5204  072A  36AA               	lsrf	___ftmul@f1+2,f
  5205  072B  0CA9               	rrf	___ftmul@f1+1,f
  5206  072C  0CA8               	rrf	___ftmul@f1,f
  5207  072D  0B89               	decfsz	9,f
  5208  072E  2F2A               	goto	u4205
  5209  072F  3001               	movlw	1
  5210  0730                     u4215:	
  5211  0730  35AB               	lslf	___ftmul@f2,f
  5212  0731  0DAC               	rlf	___ftmul@f2+1,f
  5213  0732  0DAD               	rlf	___ftmul@f2+2,f
  5214  0733  0B89               	decfsz	9,f
  5215  0734  2F30               	goto	u4215
  5216  0735  3001               	movlw	1
  5217  0736  02B6               	subwf	___ftmul@cntr,f
  5218  0737  1D03               	btfss	3,2
  5219  0738  2F21               	goto	l3422
  5220  0739  3009               	movlw	9
  5221  073A  00AE               	movwf	??___ftmul
  5222  073B  082E               	movf	??___ftmul,w
  5223  073C  00B6               	movwf	___ftmul@cntr
  5224  073D                     l3434:	
  5225  073D  1C28               	btfss	___ftmul@f1,0
  5226  073E  2F45               	goto	l3438
  5227  073F  082B               	movf	___ftmul@f2,w
  5228  0740  07B3               	addwf	___ftmul@f3_as_product,f
  5229  0741  082C               	movf	___ftmul@f2+1,w
  5230  0742  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  5231  0743  082D               	movf	___ftmul@f2+2,w
  5232  0744  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  5233  0745                     l3438:	
  5234  0745  3001               	movlw	1
  5235  0746                     u4245:	
  5236  0746  36AA               	lsrf	___ftmul@f1+2,f
  5237  0747  0CA9               	rrf	___ftmul@f1+1,f
  5238  0748  0CA8               	rrf	___ftmul@f1,f
  5239  0749  0B89               	decfsz	9,f
  5240  074A  2F46               	goto	u4245
  5241  074B  3001               	movlw	1
  5242  074C                     u4255:	
  5243  074C  36B5               	lsrf	___ftmul@f3_as_product+2,f
  5244  074D  0CB4               	rrf	___ftmul@f3_as_product+1,f
  5245  074E  0CB3               	rrf	___ftmul@f3_as_product,f
  5246  074F  0B89               	decfsz	9,f
  5247  0750  2F4C               	goto	u4255
  5248  0751  3001               	movlw	1
  5249  0752  02B6               	subwf	___ftmul@cntr,f
  5250  0753  1D03               	btfss	3,2
  5251  0754  2F3D               	goto	l3434
  5252  0755  0833               	movf	___ftmul@f3_as_product,w
  5253  0756  00A0               	movwf	___ftpack@arg
  5254  0757  0834               	movf	___ftmul@f3_as_product+1,w
  5255  0758  00A1               	movwf	___ftpack@arg+1
  5256  0759  0835               	movf	___ftmul@f3_as_product+2,w
  5257  075A  00A2               	movwf	___ftpack@arg+2
  5258  075B  0832               	movf	___ftmul@exp,w
  5259  075C  00AE               	movwf	??___ftmul
  5260  075D  082E               	movf	??___ftmul,w
  5261  075E  00A3               	movwf	___ftpack@exp
  5262  075F  0837               	movf	___ftmul@sign,w
  5263  0760  00AF               	movwf	??___ftmul+1
  5264  0761  082F               	movf	??___ftmul+1,w
  5265  0762  00A4               	movwf	___ftpack@sign
  5266  0763  318D  2555         	fcall	___ftpack
  5267  0765  0020               	movlb	0	; select bank0
  5268  0766  0820               	movf	?___ftpack,w
  5269  0767  00A8               	movwf	?___ftmul
  5270  0768  0821               	movf	?___ftpack+1,w
  5271  0769  00A9               	movwf	?___ftmul+1
  5272  076A  0822               	movf	?___ftpack+2,w
  5273  076B  00AA               	movwf	?___ftmul+2
  5274  076C  0008               	return
  5275  076D                     __end_of___ftmul:	
  5276                           
  5277                           	psect	text15
  5278  0EA4                     __ptext15:	
  5279 ;; *************** function ___ftdiv *****************
  5280 ;; Defined at:
  5281 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  f2              3   14[BANK0 ] float 
  5284 ;;  f1              3   17[BANK0 ] float 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  f3              3   25[BANK0 ] float 
  5287 ;;  sign            1   29[BANK0 ] unsigned char 
  5288 ;;  exp             1   28[BANK0 ] unsigned char 
  5289 ;;  cntr            1   24[BANK0 ] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  3   14[BANK0 ] float 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0, pclath, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  5300 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  5301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  5302 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0
  5303 ;;Total ram usage:       16 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    3
  5306 ;; This function calls:
  5307 ;;		___ftpack
  5308 ;; This function is called by:
  5309 ;;		_applianceControl
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function ___ftdiv
  5315  0EA4                     ___ftdiv:	
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5319  0EA4  0020               	movlb	0	; select bank0
  5320  0EA5  0831               	movf	___ftdiv@f1,w
  5321  0EA6  00B4               	movwf	??___ftdiv
  5322  0EA7  0832               	movf	___ftdiv@f1+1,w
  5323  0EA8  00B5               	movwf	??___ftdiv+1
  5324  0EA9  0833               	movf	___ftdiv@f1+2,w
  5325  0EAA  00B6               	movwf	??___ftdiv+2
  5326  0EAB  1003               	clrc
  5327  0EAC  0D35               	rlf	??___ftdiv+1,w
  5328  0EAD  0D36               	rlf	??___ftdiv+2,w
  5329  0EAE  00B7               	movwf	??___ftdiv+3
  5330  0EAF  0837               	movf	??___ftdiv+3,w
  5331  0EB0  00BC               	movwf	___ftdiv@exp
  5332  0EB1  083C               	movf	___ftdiv@exp,w
  5333  0EB2  1D03               	btfss	3,2
  5334  0EB3  2EBB               	goto	l3362
  5335  0EB4  3000               	movlw	0
  5336  0EB5  00AE               	movwf	?___ftdiv
  5337  0EB6  3000               	movlw	0
  5338  0EB7  00AF               	movwf	?___ftdiv+1
  5339  0EB8  3000               	movlw	0
  5340  0EB9  00B0               	movwf	?___ftdiv+2
  5341  0EBA  0008               	return
  5342  0EBB                     l3362:	
  5343  0EBB  082E               	movf	___ftdiv@f2,w
  5344  0EBC  00B4               	movwf	??___ftdiv
  5345  0EBD  082F               	movf	___ftdiv@f2+1,w
  5346  0EBE  00B5               	movwf	??___ftdiv+1
  5347  0EBF  0830               	movf	___ftdiv@f2+2,w
  5348  0EC0  00B6               	movwf	??___ftdiv+2
  5349  0EC1  1003               	clrc
  5350  0EC2  0D35               	rlf	??___ftdiv+1,w
  5351  0EC3  0D36               	rlf	??___ftdiv+2,w
  5352  0EC4  00B7               	movwf	??___ftdiv+3
  5353  0EC5  0837               	movf	??___ftdiv+3,w
  5354  0EC6  00BD               	movwf	___ftdiv@sign
  5355  0EC7  083D               	movf	___ftdiv@sign,w
  5356  0EC8  1D03               	btfss	3,2
  5357  0EC9  2ED1               	goto	l3368
  5358  0ECA  3000               	movlw	0
  5359  0ECB  00AE               	movwf	?___ftdiv
  5360  0ECC  3000               	movlw	0
  5361  0ECD  00AF               	movwf	?___ftdiv+1
  5362  0ECE  3000               	movlw	0
  5363  0ECF  00B0               	movwf	?___ftdiv+2
  5364  0ED0  0008               	return
  5365  0ED1                     l3368:	
  5366  0ED1  3000               	movlw	0
  5367  0ED2  00B9               	movwf	___ftdiv@f3
  5368  0ED3  3000               	movlw	0
  5369  0ED4  00BA               	movwf	___ftdiv@f3+1
  5370  0ED5  3000               	movlw	0
  5371  0ED6  00BB               	movwf	___ftdiv@f3+2
  5372  0ED7  3089               	movlw	137
  5373  0ED8  073D               	addwf	___ftdiv@sign,w
  5374  0ED9  00B4               	movwf	??___ftdiv
  5375  0EDA  0834               	movf	??___ftdiv,w
  5376  0EDB  02BC               	subwf	___ftdiv@exp,f
  5377  0EDC  0831               	movf	___ftdiv@f1,w
  5378  0EDD  00B4               	movwf	??___ftdiv
  5379  0EDE  0832               	movf	___ftdiv@f1+1,w
  5380  0EDF  00B5               	movwf	??___ftdiv+1
  5381  0EE0  0833               	movf	___ftdiv@f1+2,w
  5382  0EE1  00B6               	movwf	??___ftdiv+2
  5383  0EE2  3010               	movlw	16
  5384  0EE3                     u4095:	
  5385  0EE3  36B6               	lsrf	??___ftdiv+2,f
  5386  0EE4  0CB5               	rrf	??___ftdiv+1,f
  5387  0EE5  0CB4               	rrf	??___ftdiv,f
  5388  0EE6  0B89               	decfsz	9,f
  5389  0EE7  2EE3               	goto	u4095
  5390  0EE8  0834               	movf	??___ftdiv,w
  5391  0EE9  00B7               	movwf	??___ftdiv+3
  5392  0EEA  0837               	movf	??___ftdiv+3,w
  5393  0EEB  00BD               	movwf	___ftdiv@sign
  5394  0EEC  082E               	movf	___ftdiv@f2,w
  5395  0EED  00B4               	movwf	??___ftdiv
  5396  0EEE  082F               	movf	___ftdiv@f2+1,w
  5397  0EEF  00B5               	movwf	??___ftdiv+1
  5398  0EF0  0830               	movf	___ftdiv@f2+2,w
  5399  0EF1  00B6               	movwf	??___ftdiv+2
  5400  0EF2  3010               	movlw	16
  5401  0EF3                     u4105:	
  5402  0EF3  36B6               	lsrf	??___ftdiv+2,f
  5403  0EF4  0CB5               	rrf	??___ftdiv+1,f
  5404  0EF5  0CB4               	rrf	??___ftdiv,f
  5405  0EF6  0B89               	decfsz	9,f
  5406  0EF7  2EF3               	goto	u4105
  5407  0EF8  0834               	movf	??___ftdiv,w
  5408  0EF9  00B7               	movwf	??___ftdiv+3
  5409  0EFA  0837               	movf	??___ftdiv+3,w
  5410  0EFB  06BD               	xorwf	___ftdiv@sign,f
  5411  0EFC  3080               	movlw	128
  5412  0EFD  00B4               	movwf	??___ftdiv
  5413  0EFE  0834               	movf	??___ftdiv,w
  5414  0EFF  05BD               	andwf	___ftdiv@sign,f
  5415  0F00  17B2               	bsf	___ftdiv@f1+1,7
  5416  0F01  30FF               	movlw	255
  5417  0F02  05B1               	andwf	___ftdiv@f1,f
  5418  0F03  30FF               	movlw	255
  5419  0F04  05B2               	andwf	___ftdiv@f1+1,f
  5420  0F05  3000               	movlw	0
  5421  0F06  05B3               	andwf	___ftdiv@f1+2,f
  5422  0F07  17AF               	bsf	___ftdiv@f2+1,7
  5423  0F08  30FF               	movlw	255
  5424  0F09  05AE               	andwf	___ftdiv@f2,f
  5425  0F0A  30FF               	movlw	255
  5426  0F0B  05AF               	andwf	___ftdiv@f2+1,f
  5427  0F0C  3000               	movlw	0
  5428  0F0D  05B0               	andwf	___ftdiv@f2+2,f
  5429  0F0E  3018               	movlw	24
  5430  0F0F  00B4               	movwf	??___ftdiv
  5431  0F10  0834               	movf	??___ftdiv,w
  5432  0F11  00B8               	movwf	___ftdiv@cntr
  5433  0F12                     l3382:	
  5434  0F12  3001               	movlw	1
  5435  0F13                     u4115:	
  5436  0F13  35B9               	lslf	___ftdiv@f3,f
  5437  0F14  0DBA               	rlf	___ftdiv@f3+1,f
  5438  0F15  0DBB               	rlf	___ftdiv@f3+2,f
  5439  0F16  0B89               	decfsz	9,f
  5440  0F17  2F13               	goto	u4115
  5441  0F18  0830               	movf	___ftdiv@f2+2,w
  5442  0F19  0233               	subwf	___ftdiv@f1+2,w
  5443  0F1A  1D03               	skipz
  5444  0F1B  2F22               	goto	u4125
  5445  0F1C  082F               	movf	___ftdiv@f2+1,w
  5446  0F1D  0232               	subwf	___ftdiv@f1+1,w
  5447  0F1E  1D03               	skipz
  5448  0F1F  2F22               	goto	u4125
  5449  0F20  082E               	movf	___ftdiv@f2,w
  5450  0F21  0231               	subwf	___ftdiv@f1,w
  5451  0F22                     u4125:	
  5452  0F22  1C03               	skipc
  5453  0F23  2F2B               	goto	l3390
  5454  0F24  082E               	movf	___ftdiv@f2,w
  5455  0F25  02B1               	subwf	___ftdiv@f1,f
  5456  0F26  082F               	movf	___ftdiv@f2+1,w
  5457  0F27  3BB2               	subwfb	___ftdiv@f1+1,f
  5458  0F28  0830               	movf	___ftdiv@f2+2,w
  5459  0F29  3BB3               	subwfb	___ftdiv@f1+2,f
  5460  0F2A  1439               	bsf	___ftdiv@f3,0
  5461  0F2B                     l3390:	
  5462  0F2B  3001               	movlw	1
  5463  0F2C                     u4135:	
  5464  0F2C  35B1               	lslf	___ftdiv@f1,f
  5465  0F2D  0DB2               	rlf	___ftdiv@f1+1,f
  5466  0F2E  0DB3               	rlf	___ftdiv@f1+2,f
  5467  0F2F  0B89               	decfsz	9,f
  5468  0F30  2F2C               	goto	u4135
  5469  0F31  3001               	movlw	1
  5470  0F32  02B8               	subwf	___ftdiv@cntr,f
  5471  0F33  1D03               	btfss	3,2
  5472  0F34  2F12               	goto	l3382
  5473  0F35  0839               	movf	___ftdiv@f3,w
  5474  0F36  00A0               	movwf	___ftpack@arg
  5475  0F37  083A               	movf	___ftdiv@f3+1,w
  5476  0F38  00A1               	movwf	___ftpack@arg+1
  5477  0F39  083B               	movf	___ftdiv@f3+2,w
  5478  0F3A  00A2               	movwf	___ftpack@arg+2
  5479  0F3B  083C               	movf	___ftdiv@exp,w
  5480  0F3C  00B4               	movwf	??___ftdiv
  5481  0F3D  0834               	movf	??___ftdiv,w
  5482  0F3E  00A3               	movwf	___ftpack@exp
  5483  0F3F  083D               	movf	___ftdiv@sign,w
  5484  0F40  00B5               	movwf	??___ftdiv+1
  5485  0F41  0835               	movf	??___ftdiv+1,w
  5486  0F42  00A4               	movwf	___ftpack@sign
  5487  0F43  318D  2555         	fcall	___ftpack
  5488  0F45  0020               	movlb	0	; select bank0
  5489  0F46  0820               	movf	?___ftpack,w
  5490  0F47  00AE               	movwf	?___ftdiv
  5491  0F48  0821               	movf	?___ftpack+1,w
  5492  0F49  00AF               	movwf	?___ftdiv+1
  5493  0F4A  0822               	movf	?___ftpack+2,w
  5494  0F4B  00B0               	movwf	?___ftdiv+2
  5495  0F4C  0008               	return
  5496  0F4D                     __end_of___ftdiv:	
  5497                           
  5498                           	psect	text16
  5499  0B87                     __ptext16:	
  5500 ;; *************** function ___awtoft *****************
  5501 ;; Defined at:
  5502 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  c               2    8[BANK0 ] int 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  sign            1   13[BANK0 ] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  3    8[BANK0 ] float 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5516 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  5517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  5518 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  5519 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  5520 ;;Total ram usage:        6 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    3
  5523 ;; This function calls:
  5524 ;;		___ftpack
  5525 ;; This function is called by:
  5526 ;;		_applianceControl
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           
  5531                           ;psect for function ___awtoft
  5532  0B87                     ___awtoft:	
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5536  0B87  0020               	movlb	0	; select bank0
  5537  0B88  01AD               	clrf	___awtoft@sign
  5538  0B89  1FA9               	btfss	___awtoft@c+1,7
  5539  0B8A  2B92               	goto	l3352
  5540  0B8B  09A8               	comf	___awtoft@c,f
  5541  0B8C  09A9               	comf	___awtoft@c+1,f
  5542  0B8D  0AA8               	incf	___awtoft@c,f
  5543  0B8E  1903               	skipnz
  5544  0B8F  0AA9               	incf	___awtoft@c+1,f
  5545  0B90  01AD               	clrf	___awtoft@sign
  5546  0B91  0AAD               	incf	___awtoft@sign,f
  5547  0B92                     l3352:	
  5548  0B92  0828               	movf	___awtoft@c,w
  5549  0B93  00A0               	movwf	___ftpack@arg
  5550  0B94  0829               	movf	___awtoft@c+1,w
  5551  0B95  00A1               	movwf	___ftpack@arg+1
  5552  0B96  01A2               	clrf	___ftpack@arg+2
  5553  0B97  308E               	movlw	142
  5554  0B98  00AB               	movwf	??___awtoft
  5555  0B99  082B               	movf	??___awtoft,w
  5556  0B9A  00A3               	movwf	___ftpack@exp
  5557  0B9B  082D               	movf	___awtoft@sign,w
  5558  0B9C  00AC               	movwf	??___awtoft+1
  5559  0B9D  082C               	movf	??___awtoft+1,w
  5560  0B9E  00A4               	movwf	___ftpack@sign
  5561  0B9F  318D  2555         	fcall	___ftpack
  5562  0BA1  0020               	movlb	0	; select bank0
  5563  0BA2  0820               	movf	?___ftpack,w
  5564  0BA3  00A8               	movwf	?___awtoft
  5565  0BA4  0821               	movf	?___ftpack+1,w
  5566  0BA5  00A9               	movwf	?___awtoft+1
  5567  0BA6  0822               	movf	?___ftpack+2,w
  5568  0BA7  00AA               	movwf	?___awtoft+2
  5569  0BA8  0008               	return
  5570  0BA9                     __end_of___awtoft:	
  5571                           
  5572                           	psect	text17
  5573  0D55                     __ptext17:	
  5574 ;; *************** function ___ftpack *****************
  5575 ;; Defined at:
  5576 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  arg             3    0[BANK0 ] unsigned um
  5579 ;;  exp             1    3[BANK0 ] unsigned char 
  5580 ;;  sign            1    4[BANK0 ] unsigned char 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  3    0[BANK0 ] float 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5592 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5594 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0
  5595 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  5596 ;;Total ram usage:        8 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    2
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		___awtoft
  5603 ;;		___ftdiv
  5604 ;;		___ftmul
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function ___ftpack
  5610  0D55                     ___ftpack:	
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5614  0D55  0020               	movlb	0	; select bank0
  5615  0D56  0823               	movf	___ftpack@exp,w
  5616  0D57  1903               	btfsc	3,2
  5617  0D58  2D5E               	goto	l3076
  5618  0D59  0822               	movf	___ftpack@arg+2,w
  5619  0D5A  0421               	iorwf	___ftpack@arg+1,w
  5620  0D5B  0420               	iorwf	___ftpack@arg,w
  5621  0D5C  1D03               	skipz
  5622  0D5D  2D6F               	goto	l3082
  5623  0D5E                     l3076:	
  5624  0D5E  3000               	movlw	0
  5625  0D5F  00A0               	movwf	?___ftpack
  5626  0D60  3000               	movlw	0
  5627  0D61  00A1               	movwf	?___ftpack+1
  5628  0D62  3000               	movlw	0
  5629  0D63  00A2               	movwf	?___ftpack+2
  5630  0D64  0008               	return
  5631  0D65                     l3080:	
  5632  0D65  3001               	movlw	1
  5633  0D66  00A5               	movwf	??___ftpack
  5634  0D67  0825               	movf	??___ftpack,w
  5635  0D68  07A3               	addwf	___ftpack@exp,f
  5636  0D69  3001               	movlw	1
  5637  0D6A                     u3645:	
  5638  0D6A  36A2               	lsrf	___ftpack@arg+2,f
  5639  0D6B  0CA1               	rrf	___ftpack@arg+1,f
  5640  0D6C  0CA0               	rrf	___ftpack@arg,f
  5641  0D6D  0B89               	decfsz	9,f
  5642  0D6E  2D6A               	goto	u3645
  5643  0D6F                     l3082:	
  5644  0D6F  30FE               	movlw	254
  5645  0D70  0522               	andwf	___ftpack@arg+2,w
  5646  0D71  1903               	btfsc	3,2
  5647  0D72  2D88               	goto	l564
  5648  0D73  2D65               	goto	l3080
  5649  0D74                     l3084:	
  5650  0D74  3001               	movlw	1
  5651  0D75  00A5               	movwf	??___ftpack
  5652  0D76  0825               	movf	??___ftpack,w
  5653  0D77  07A3               	addwf	___ftpack@exp,f
  5654  0D78  3001               	movlw	1
  5655  0D79  07A0               	addwf	___ftpack@arg,f
  5656  0D7A  3000               	movlw	0
  5657  0D7B  1803               	skipnc
  5658  0D7C  3001               	movlw	1
  5659  0D7D  07A1               	addwf	___ftpack@arg+1,f
  5660  0D7E  3000               	movlw	0
  5661  0D7F  1803               	skipnc
  5662  0D80  3001               	movlw	1
  5663  0D81  07A2               	addwf	___ftpack@arg+2,f
  5664  0D82  3001               	movlw	1
  5665  0D83                     u3665:	
  5666  0D83  36A2               	lsrf	___ftpack@arg+2,f
  5667  0D84  0CA1               	rrf	___ftpack@arg+1,f
  5668  0D85  0CA0               	rrf	___ftpack@arg,f
  5669  0D86  0B89               	decfsz	9,f
  5670  0D87  2D83               	goto	u3665
  5671  0D88                     l564:	
  5672  0D88  30FF               	movlw	255
  5673  0D89  0522               	andwf	___ftpack@arg+2,w
  5674  0D8A  1903               	btfsc	3,2
  5675  0D8B  2D95               	goto	l3092
  5676  0D8C  2D74               	goto	l3084
  5677  0D8D                     l3090:	
  5678  0D8D  3001               	movlw	1
  5679  0D8E  02A3               	subwf	___ftpack@exp,f
  5680  0D8F  3001               	movlw	1
  5681  0D90                     u3685:	
  5682  0D90  35A0               	lslf	___ftpack@arg,f
  5683  0D91  0DA1               	rlf	___ftpack@arg+1,f
  5684  0D92  0DA2               	rlf	___ftpack@arg+2,f
  5685  0D93  0B89               	decfsz	9,f
  5686  0D94  2D90               	goto	u3685
  5687  0D95                     l3092:	
  5688  0D95  1BA1               	btfsc	___ftpack@arg+1,7
  5689  0D96  2D9B               	goto	l571
  5690  0D97  3002               	movlw	2
  5691  0D98  0223               	subwf	___ftpack@exp,w
  5692  0D99  1803               	skipnc
  5693  0D9A  2D8D               	goto	l3090
  5694  0D9B                     l571:	
  5695  0D9B  1823               	btfsc	___ftpack@exp,0
  5696  0D9C  2DA3               	goto	l572
  5697  0D9D  30FF               	movlw	255
  5698  0D9E  05A0               	andwf	___ftpack@arg,f
  5699  0D9F  307F               	movlw	127
  5700  0DA0  05A1               	andwf	___ftpack@arg+1,f
  5701  0DA1  30FF               	movlw	255
  5702  0DA2  05A2               	andwf	___ftpack@arg+2,f
  5703  0DA3                     l572:	
  5704  0DA3  1003               	clrc
  5705  0DA4  0CA3               	rrf	___ftpack@exp,f
  5706  0DA5  0823               	movf	___ftpack@exp,w
  5707  0DA6  00A5               	movwf	??___ftpack
  5708  0DA7  01A6               	clrf	??___ftpack+1
  5709  0DA8  01A7               	clrf	??___ftpack+2
  5710  0DA9  3010               	movlw	16
  5711  0DAA                     u3725:	
  5712  0DAA  35A5               	lslf	??___ftpack,f
  5713  0DAB  0DA6               	rlf	??___ftpack+1,f
  5714  0DAC  0DA7               	rlf	??___ftpack+2,f
  5715  0DAD  0B89               	decfsz	9,f
  5716  0DAE  2DAA               	goto	u3725
  5717  0DAF  0825               	movf	??___ftpack,w
  5718  0DB0  04A0               	iorwf	___ftpack@arg,f
  5719  0DB1  0826               	movf	??___ftpack+1,w
  5720  0DB2  04A1               	iorwf	___ftpack@arg+1,f
  5721  0DB3  0827               	movf	??___ftpack+2,w
  5722  0DB4  04A2               	iorwf	___ftpack@arg+2,f
  5723  0DB5  0824               	movf	___ftpack@sign,w
  5724  0DB6  1903               	btfsc	3,2
  5725  0DB7  0008               	return
  5726  0DB8  17A2               	bsf	___ftpack@arg+2,7
  5727  0DB9  0008               	return
  5728  0DBA                     __end_of___ftpack:	
  5729                           
  5730                           	psect	text18
  5731  0A8C                     __ptext18:	
  5732 ;; *************** function _allPeripheralInit *****************
  5733 ;; Defined at:
  5734 ;;		line 670 in file "main.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0, pclath, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    3
  5755 ;; This function calls:
  5756 ;;		_CCP10_Initialize
  5757 ;;		_CCP8_Initialize
  5758 ;;		_EUSART_Initialize
  5759 ;;		_TMR1_Initialize
  5760 ;;		_TMR2_Initialize
  5761 ;; This function is called by:
  5762 ;;		_main
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _allPeripheralInit
  5768  0A8C                     _allPeripheralInit:	
  5769                           
  5770                           ;main.c: 671: EUSART_Initialize();
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in _allPeripheralInit: [wreg+status,2+status,0+pclath+cstack]
  5774  0A8C  318B  231C  318A   	fcall	_EUSART_Initialize
  5775                           
  5776                           ;main.c: 672: TMR1_Initialize();
  5777  0A8F  3187  27F4  318A   	fcall	_TMR1_Initialize
  5778                           
  5779                           ;main.c: 673: TMR2_Initialize();
  5780  0A92  318A  2282  318A   	fcall	_TMR2_Initialize
  5781                           
  5782                           ;main.c: 674: CCP10_Initialize();
  5783  0A95  318A  226E  318A   	fcall	_CCP10_Initialize
  5784                           
  5785                           ;main.c: 675: CCP8_Initialize();
  5786  0A98  318A  2278         	fcall	_CCP8_Initialize
  5787  0A9A  0008               	return
  5788  0A9B                     __end_of_allPeripheralInit:	
  5789                           
  5790                           	psect	text19
  5791  0A82                     __ptext19:	
  5792 ;; *************** function _TMR2_Initialize *****************
  5793 ;; Defined at:
  5794 ;;		line 751 in file "main.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    2
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_allPeripheralInit
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           
  5823                           ;psect for function _TMR2_Initialize
  5824  0A82                     _TMR2_Initialize:	
  5825                           
  5826                           ;main.c: 756: T2CON = 0x08;
  5827                           
  5828                           ;incstack = 0
  5829                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5830  0A82  3008               	movlw	8
  5831  0A83  0020               	movlb	0	; select bank0
  5832  0A84  009C               	movwf	28	;volatile
  5833                           
  5834                           ;main.c: 762: TMR2 = 0x00;
  5835  0A85  019A               	clrf	26	;volatile
  5836                           
  5837                           ;main.c: 765: PIR1bits.TMR2IF = 0;
  5838  0A86  1091               	bcf	17,1	;volatile
  5839                           
  5840                           ;main.c: 768: PIE1bits.TMR2IE = 1;
  5841  0A87  0021               	movlb	1	; select bank1
  5842  0A88  1491               	bsf	17,1	;volatile
  5843                           
  5844                           ;main.c: 769: GIE = 1;
  5845  0A89  178B               	bsf	11,7	;volatile
  5846                           
  5847                           ;main.c: 772: PEIE = 1;
  5848  0A8A  170B               	bsf	11,6	;volatile
  5849  0A8B  0008               	return
  5850  0A8C                     __end_of_TMR2_Initialize:	
  5851                           
  5852                           	psect	text20
  5853  07F4                     __ptext20:	
  5854 ;; *************** function _TMR1_Initialize *****************
  5855 ;; Defined at:
  5856 ;;		line 719 in file "main.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;		None
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		status,2
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5874 ;;Total ram usage:        0 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    2
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		_allPeripheralInit
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           
  5885                           ;psect for function _TMR1_Initialize
  5886  07F4                     _TMR1_Initialize:	
  5887                           
  5888                           ;main.c: 722: T1CON = 0x00;
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in _TMR1_Initialize: [status,2]
  5892  07F4  0020               	movlb	0	; select bank0
  5893  07F5  0198               	clrf	24	;volatile
  5894                           
  5895                           ;main.c: 725: T1GCON = 0x00;
  5896  07F6  0199               	clrf	25	;volatile
  5897                           
  5898                           ;main.c: 728: TMR1H = 0x00;
  5899  07F7  0197               	clrf	23	;volatile
  5900                           
  5901                           ;main.c: 731: TMR1L = 0x00;
  5902  07F8  0196               	clrf	22	;volatile
  5903                           
  5904                           ;main.c: 734: PIR1bits.TMR1IF = 0;
  5905  07F9  1011               	bcf	17,0	;volatile
  5906                           
  5907                           ;main.c: 737: PIE1bits.TMR1IE = 1;
  5908  07FA  0021               	movlb	1	; select bank1
  5909  07FB  1411               	bsf	17,0	;volatile
  5910                           
  5911                           ;main.c: 743: GIE = 1;
  5912  07FC  178B               	bsf	11,7	;volatile
  5913                           
  5914                           ;main.c: 746: PEIE = 1;
  5915  07FD  170B               	bsf	11,6	;volatile
  5916  07FE  0008               	return
  5917  07FF                     __end_of_TMR1_Initialize:	
  5918                           
  5919                           	psect	text21
  5920  0B1C                     __ptext21:	
  5921 ;; *************** function _EUSART_Initialize *****************
  5922 ;; Defined at:
  5923 ;;		line 681 in file "main.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      void 
  5930 ;; Registers used:
  5931 ;;		wreg
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    2
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_allPeripheralInit
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function _EUSART_Initialize
  5953  0B1C                     _EUSART_Initialize:	
  5954                           
  5955                           ;main.c: 682: PIE1bits.RC1IE = 0;
  5956                           
  5957                           ;incstack = 0
  5958                           ; Regs used in _EUSART_Initialize: [wreg]
  5959  0B1C  0021               	movlb	1	; select bank1
  5960  0B1D  1291               	bcf	17,5	;volatile
  5961                           
  5962                           ;main.c: 683: PIE1bits.TX1IE = 0;
  5963  0B1E  1211               	bcf	17,4	;volatile
  5964                           
  5965                           ;main.c: 688: BAUD1CON = 0x0A;
  5966  0B1F  300A               	movlw	10
  5967  0B20  0023               	movlb	3	; select bank3
  5968  0B21  009F               	movwf	31	;volatile
  5969                           
  5970                           ;main.c: 691: RC1STA = 0x90;
  5971  0B22  3090               	movlw	144
  5972  0B23  009D               	movwf	29	;volatile
  5973                           
  5974                           ;main.c: 694: TX1STA = 0x24;
  5975  0B24  3024               	movlw	36
  5976  0B25  009E               	movwf	30	;volatile
  5977                           
  5978                           ;main.c: 699: SP1BRGL = 0xA0;
  5979  0B26  30A0               	movlw	160
  5980  0B27  009B               	movwf	27	;volatile
  5981                           
  5982                           ;main.c: 701: SP1BRGH = 0x01;
  5983  0B28  3001               	movlw	1
  5984  0B29  009C               	movwf	28	;volatile
  5985                           
  5986                           ;main.c: 704: GIE = 1;
  5987  0B2A  178B               	bsf	11,7	;volatile
  5988                           
  5989                           ;main.c: 707: PEIE = 1;
  5990  0B2B  170B               	bsf	11,6	;volatile
  5991                           
  5992                           ;main.c: 710: PIE1bits.RC1IE = 1;
  5993  0B2C  0021               	movlb	1	; select bank1
  5994  0B2D  1691               	bsf	17,5	;volatile
  5995                           
  5996                           ;main.c: 713: TX1STAbits.TXEN = 1;
  5997  0B2E  0023               	movlb	3	; select bank3
  5998  0B2F  169E               	bsf	30,5	;volatile
  5999                           
  6000                           ;main.c: 716: RC1STAbits.SPEN = 1;
  6001  0B30  179D               	bsf	29,7	;volatile
  6002  0B31  0008               	return
  6003  0B32                     __end_of_EUSART_Initialize:	
  6004                           
  6005                           	psect	text22
  6006  0A78                     __ptext22:	
  6007 ;; *************** function _CCP8_Initialize *****************
  6008 ;; Defined at:
  6009 ;;		line 775 in file "main.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    2
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_allPeripheralInit
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function _CCP8_Initialize
  6039  0A78                     _CCP8_Initialize:	
  6040                           
  6041                           ;main.c: 779: CCP9CON = 0x84;
  6042                           
  6043                           ;incstack = 0
  6044                           ; Regs used in _CCP8_Initialize: [wreg+status,2]
  6045  0A78  3084               	movlw	132
  6046  0A79  002C               	movlb	12	; select bank12
  6047  0A7A  009C               	movwf	28	;volatile
  6048                           
  6049                           ;main.c: 782: CCPR8H = 0x00;
  6050  0A7B  0198               	clrf	24	;volatile
  6051                           
  6052                           ;main.c: 785: CCPR8L = 0x00;
  6053  0A7C  0197               	clrf	23	;volatile
  6054                           
  6055                           ;main.c: 791: PIR4bits.CCP8IF = 0;
  6056  0A7D  0020               	movlb	0	; select bank0
  6057  0A7E  1194               	bcf	20,3	;volatile
  6058                           
  6059                           ;main.c: 794: PIE4bits.CCP8IE = 1;
  6060  0A7F  0021               	movlb	1	; select bank1
  6061  0A80  1594               	bsf	20,3	;volatile
  6062  0A81  0008               	return
  6063  0A82                     __end_of_CCP8_Initialize:	
  6064                           
  6065                           	psect	text23
  6066  0A6E                     __ptext23:	
  6067 ;; *************** function _CCP10_Initialize *****************
  6068 ;; Defined at:
  6069 ;;		line 796 in file "main.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    2
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_allPeripheralInit
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function _CCP10_Initialize
  6099  0A6E                     _CCP10_Initialize:	
  6100                           
  6101                           ;main.c: 800: CCP10CON = 0x84;
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _CCP10_Initialize: [wreg+status,2]
  6105  0A6E  3084               	movlw	132
  6106  0A6F  002C               	movlb	12	; select bank12
  6107  0A70  009F               	movwf	31	;volatile
  6108                           
  6109                           ;main.c: 803: CCPR10H = 0x00;
  6110  0A71  019E               	clrf	30	;volatile
  6111                           
  6112                           ;main.c: 806: CCPR10L = 0x00;
  6113  0A72  019D               	clrf	29	;volatile
  6114                           
  6115                           ;main.c: 812: PIR4bits.CCP10IF = 0;
  6116  0A73  0020               	movlb	0	; select bank0
  6117  0A74  1394               	bcf	20,7	;volatile
  6118                           
  6119                           ;main.c: 815: PIE4bits.CCP10IE = 1;
  6120  0A75  0021               	movlb	1	; select bank1
  6121  0A76  1794               	bsf	20,7	;volatile
  6122  0A77  0008               	return
  6123  0A78                     __end_of_CCP10_Initialize:	
  6124                           
  6125                           	psect	text24
  6126  0ABB                     __ptext24:	
  6127 ;; *************** function _TransmissionIndicationLedBlinking *****************
  6128 ;; Defined at:
  6129 ;;		line 839 in file "main.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6146 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  6147 ;;Total ram usage:        2 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    2
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function _TransmissionIndicationLedBlinking
  6159  0ABB                     _TransmissionIndicationLedBlinking:	
  6160                           
  6161                           ;main.c: 840: PORTFbits.RF0 = 0;
  6162                           
  6163                           ;incstack = 0
  6164                           ; Regs used in _TransmissionIndicationLedBlinking: [wreg]
  6165  0ABB  0025               	movlb	5	; select bank5
  6166  0ABC  100C               	bcf	12,0	;volatile
  6167                           
  6168                           ;main.c: 841: _delay((unsigned long)((100)*(16000000/4000.0)));
  6169  0ABD  3003               	movlw	3
  6170  0ABE  0020               	movlb	0	; select bank0
  6171  0ABF  00A1               	movwf	??_TransmissionIndicationLedBlinking+1
  6172  0AC0  3008               	movlw	8
  6173  0AC1  00A0               	movwf	??_TransmissionIndicationLedBlinking
  6174  0AC2  3077               	movlw	119
  6175  0AC3                     u5227:	
  6176  0AC3  0B89               	decfsz	9,f
  6177  0AC4  2AC3               	goto	u5227
  6178  0AC5  0BA0               	decfsz	??_TransmissionIndicationLedBlinking,f
  6179  0AC6  2AC3               	goto	u5227
  6180  0AC7  0BA1               	decfsz	??_TransmissionIndicationLedBlinking+1,f
  6181  0AC8  2AC3               	goto	u5227
  6182                           
  6183                           ;main.c: 842: PORTFbits.RF0 = 1;
  6184  0AC9  0025               	movlb	5	; select bank5
  6185  0ACA  140C               	bsf	12,0	;volatile
  6186  0ACB  0008               	return
  6187  0ACC                     __end_of_TransmissionIndicationLedBlinking:	
  6188                           
  6189                           	psect	text25
  6190  0CB3                     __ptext25:	
  6191 ;; *************** function _SwitchOnStatustToGatway *****************
  6192 ;; Defined at:
  6193 ;;		line 867 in file "main.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  SwitchOnNumb    2    0[BANK0 ] int 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  6210 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        3 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    2
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_main
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           
  6222                           ;psect for function _SwitchOnStatustToGatway
  6223  0CB3                     _SwitchOnStatustToGatway:	
  6224                           
  6225                           ;main.c: 869: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  6226                           
  6227                           ;incstack = 0
  6228                           ; Regs used in _SwitchOnStatustToGatway: [wreg+status,2+status,0]
  6229  0CB3  3052               	movlw	82
  6230  0CB4  0023               	movlb	3	; select bank3
  6231  0CB5  009A               	movwf	26	;volatile
  6232  0CB6  3006               	movlw	6
  6233  0CB7  0020               	movlb	0	; select bank0
  6234  0CB8  00A2               	movwf	??_SwitchOnStatustToGatway
  6235  0CB9  3030               	movlw	48
  6236  0CBA                     u5237:	
  6237  0CBA  0B89               	decfsz	9,f
  6238  0CBB  2CBA               	goto	u5237
  6239  0CBC  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  6240  0CBD  2CBA               	goto	u5237
  6241  0CBE  0000               	nop
  6242                           
  6243                           ;main.c: 870: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  6244  0CBF  3031               	movlw	49
  6245  0CC0  0023               	movlb	3	; select bank3
  6246  0CC1  009A               	movwf	26	;volatile
  6247  0CC2  3006               	movlw	6
  6248  0CC3  0020               	movlb	0	; select bank0
  6249  0CC4  00A2               	movwf	??_SwitchOnStatustToGatway
  6250  0CC5  3030               	movlw	48
  6251  0CC6                     u5247:	
  6252  0CC6  0B89               	decfsz	9,f
  6253  0CC7  2CC6               	goto	u5247
  6254  0CC8  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  6255  0CC9  2CC6               	goto	u5247
  6256  0CCA  0000               	nop
  6257                           
  6258                           ;main.c: 871: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  6259  0CCB  3030               	movlw	48
  6260  0CCC  0023               	movlb	3	; select bank3
  6261  0CCD  009A               	movwf	26	;volatile
  6262  0CCE  3006               	movlw	6
  6263  0CCF  0020               	movlb	0	; select bank0
  6264  0CD0  00A2               	movwf	??_SwitchOnStatustToGatway
  6265  0CD1  3030               	movlw	48
  6266  0CD2                     u5257:	
  6267  0CD2  0B89               	decfsz	9,f
  6268  0CD3  2CD2               	goto	u5257
  6269  0CD4  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  6270  0CD5  2CD2               	goto	u5257
  6271  0CD6  0000               	nop
  6272                           
  6273                           ;main.c: 872: TX1REG = SwitchOnNumber + '0';_delay((unsigned long)((1)*(16000000/4000.0)
      +                          ));
  6274  0CD7  0020               	movlb	0	; select bank0
  6275  0CD8  0820               	movf	SwitchOnStatustToGatway@SwitchOnNumber,w
  6276  0CD9  3E30               	addlw	48
  6277  0CDA  0023               	movlb	3	; select bank3
  6278  0CDB  009A               	movwf	26	;volatile
  6279  0CDC  3006               	movlw	6
  6280  0CDD  0020               	movlb	0	; select bank0
  6281  0CDE  00A2               	movwf	??_SwitchOnStatustToGatway
  6282  0CDF  3030               	movlw	48
  6283  0CE0                     u5267:	
  6284  0CE0  0B89               	decfsz	9,f
  6285  0CE1  2CE0               	goto	u5267
  6286  0CE2  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  6287  0CE3  2CE0               	goto	u5267
  6288  0CE4  0000               	nop
  6289  0CE5  0008               	return
  6290  0CE6                     __end_of_SwitchOnStatustToGatway:	
  6291                           
  6292                           	psect	text26
  6293  0C80                     __ptext26:	
  6294 ;; *************** function _SwitchOffStatustToGatway *****************
  6295 ;; Defined at:
  6296 ;;		line 860 in file "main.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  SwitchOffNum    2    0[BANK0 ] int 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;		None
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  6311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  6313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  6314 ;;Total ram usage:        3 bytes
  6315 ;; Hardware stack levels used:    1
  6316 ;; Hardware stack levels required when called:    2
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_main
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function _SwitchOffStatustToGatway
  6326  0C80                     _SwitchOffStatustToGatway:	
  6327                           
  6328                           ;main.c: 862: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in _SwitchOffStatustToGatway: [wreg+status,2+status,0]
  6332  0C80  3052               	movlw	82
  6333  0C81  0023               	movlb	3	; select bank3
  6334  0C82  009A               	movwf	26	;volatile
  6335  0C83  3006               	movlw	6
  6336  0C84  0020               	movlb	0	; select bank0
  6337  0C85  00A2               	movwf	??_SwitchOffStatustToGatway
  6338  0C86  3030               	movlw	48
  6339  0C87                     u5277:	
  6340  0C87  0B89               	decfsz	9,f
  6341  0C88  2C87               	goto	u5277
  6342  0C89  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  6343  0C8A  2C87               	goto	u5277
  6344  0C8B  0000               	nop
  6345                           
  6346                           ;main.c: 863: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  6347  0C8C  3030               	movlw	48
  6348  0C8D  0023               	movlb	3	; select bank3
  6349  0C8E  009A               	movwf	26	;volatile
  6350  0C8F  3006               	movlw	6
  6351  0C90  0020               	movlb	0	; select bank0
  6352  0C91  00A2               	movwf	??_SwitchOffStatustToGatway
  6353  0C92  3030               	movlw	48
  6354  0C93                     u5287:	
  6355  0C93  0B89               	decfsz	9,f
  6356  0C94  2C93               	goto	u5287
  6357  0C95  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  6358  0C96  2C93               	goto	u5287
  6359  0C97  0000               	nop
  6360                           
  6361                           ;main.c: 864: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  6362  0C98  3030               	movlw	48
  6363  0C99  0023               	movlb	3	; select bank3
  6364  0C9A  009A               	movwf	26	;volatile
  6365  0C9B  3006               	movlw	6
  6366  0C9C  0020               	movlb	0	; select bank0
  6367  0C9D  00A2               	movwf	??_SwitchOffStatustToGatway
  6368  0C9E  3030               	movlw	48
  6369  0C9F                     u5297:	
  6370  0C9F  0B89               	decfsz	9,f
  6371  0CA0  2C9F               	goto	u5297
  6372  0CA1  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  6373  0CA2  2C9F               	goto	u5297
  6374  0CA3  0000               	nop
  6375                           
  6376                           ;main.c: 865: TX1REG = SwitchOffNumber + '0';_delay((unsigned long)((1)*(16000000/4000.0
      +                          )));
  6377  0CA4  0020               	movlb	0	; select bank0
  6378  0CA5  0820               	movf	SwitchOffStatustToGatway@SwitchOffNumber,w
  6379  0CA6  3E30               	addlw	48
  6380  0CA7  0023               	movlb	3	; select bank3
  6381  0CA8  009A               	movwf	26	;volatile
  6382  0CA9  3006               	movlw	6
  6383  0CAA  0020               	movlb	0	; select bank0
  6384  0CAB  00A2               	movwf	??_SwitchOffStatustToGatway
  6385  0CAC  3030               	movlw	48
  6386  0CAD                     u5307:	
  6387  0CAD  0B89               	decfsz	9,f
  6388  0CAE  2CAD               	goto	u5307
  6389  0CAF  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  6390  0CB0  2CAD               	goto	u5307
  6391  0CB1  0000               	nop
  6392  0CB2  0008               	return
  6393  0CB3                     __end_of_SwitchOffStatustToGatway:	
  6394                           
  6395                           	psect	text27
  6396  0AAA                     __ptext27:	
  6397 ;; *************** function _ReceivingIndicationLedBlinking *****************
  6398 ;; Defined at:
  6399 ;;		line 844 in file "main.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        2 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    2
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _ReceivingIndicationLedBlinking
  6429  0AAA                     _ReceivingIndicationLedBlinking:	
  6430                           
  6431                           ;main.c: 845: PORTFbits.RF1 = 0;
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in _ReceivingIndicationLedBlinking: [wreg]
  6435  0AAA  0025               	movlb	5	; select bank5
  6436  0AAB  108C               	bcf	12,1	;volatile
  6437                           
  6438                           ;main.c: 846: _delay((unsigned long)((100)*(16000000/4000.0)));
  6439  0AAC  3003               	movlw	3
  6440  0AAD  0020               	movlb	0	; select bank0
  6441  0AAE  00A1               	movwf	??_ReceivingIndicationLedBlinking+1
  6442  0AAF  3008               	movlw	8
  6443  0AB0  00A0               	movwf	??_ReceivingIndicationLedBlinking
  6444  0AB1  3077               	movlw	119
  6445  0AB2                     u5317:	
  6446  0AB2  0B89               	decfsz	9,f
  6447  0AB3  2AB2               	goto	u5317
  6448  0AB4  0BA0               	decfsz	??_ReceivingIndicationLedBlinking,f
  6449  0AB5  2AB2               	goto	u5317
  6450  0AB6  0BA1               	decfsz	??_ReceivingIndicationLedBlinking+1,f
  6451  0AB7  2AB2               	goto	u5317
  6452                           
  6453                           ;main.c: 847: PORTFbits.RF1 = 1;
  6454  0AB8  0025               	movlb	5	; select bank5
  6455  0AB9  148C               	bsf	12,1	;volatile
  6456  0ABA  0008               	return
  6457  0ABB                     __end_of_ReceivingIndicationLedBlinking:	
  6458                           
  6459                           	psect	text28
  6460  0BCE                     __ptext28:	
  6461 ;; *************** function _GPIO_pin_Initialize *****************
  6462 ;; Defined at:
  6463 ;;		line 626 in file "main.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		status,2, status,0, pclath, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    3
  6484 ;; This function calls:
  6485 ;;		_clearAllPorts
  6486 ;;		_pinINIT_extra
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           
  6493                           ;psect for function _GPIO_pin_Initialize
  6494  0BCE                     _GPIO_pin_Initialize:	
  6495                           
  6496                           ;main.c: 627: clearAllPorts();
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in _GPIO_pin_Initialize: [status,2+status,0+pclath+cstack]
  6500  0BCE  318A  22DE  318B   	fcall	_clearAllPorts
  6501                           
  6502                           ;main.c: 628: pinINIT_extra();
  6503  0BD1  318B  2307  318B   	fcall	_pinINIT_extra
  6504                           
  6505                           ;main.c: 629: TRISDbits.TRISD6 = 1;
  6506  0BD4  0021               	movlb	1	; select bank1
  6507  0BD5  170F               	bsf	15,6	;volatile
  6508                           
  6509                           ;main.c: 630: TRISDbits.TRISD7 = 1;
  6510  0BD6  178F               	bsf	15,7	;volatile
  6511                           
  6512                           ;main.c: 631: TRISBbits.TRISB0 = 1;
  6513  0BD7  140D               	bsf	13,0	;volatile
  6514                           
  6515                           ;main.c: 632: TRISBbits.TRISB1 = 1;
  6516  0BD8  148D               	bsf	13,1	;volatile
  6517                           
  6518                           ;main.c: 633: TRISBbits.TRISB2 = 1;
  6519  0BD9  150D               	bsf	13,2	;volatile
  6520                           
  6521                           ;main.c: 634: TRISBbits.TRISB3 = 1;
  6522  0BDA  158D               	bsf	13,3	;volatile
  6523                           
  6524                           ;main.c: 635: TRISBbits.TRISB4 = 1;
  6525  0BDB  160D               	bsf	13,4	;volatile
  6526                           
  6527                           ;main.c: 636: TRISBbits.TRISB5 = 1;
  6528  0BDC  168D               	bsf	13,5	;volatile
  6529                           
  6530                           ;main.c: 637: TRISDbits.TRISD5 = 1;
  6531  0BDD  168F               	bsf	15,5	;volatile
  6532                           
  6533                           ;main.c: 641: TRISEbits.TRISE0 = 0;
  6534  0BDE  1010               	bcf	16,0	;volatile
  6535                           
  6536                           ;main.c: 642: TRISEbits.TRISE1 = 0;
  6537  0BDF  1090               	bcf	16,1	;volatile
  6538                           
  6539                           ;main.c: 643: TRISGbits.TRISG0 = 0;
  6540  0BE0  0026               	movlb	6	; select bank6
  6541  0BE1  100D               	bcf	13,0	;volatile
  6542                           
  6543                           ;main.c: 644: TRISGbits.TRISG3 = 0;
  6544  0BE2  118D               	bcf	13,3	;volatile
  6545                           
  6546                           ;main.c: 645: TRISGbits.TRISG4 = 0;
  6547  0BE3  120D               	bcf	13,4	;volatile
  6548                           
  6549                           ;main.c: 646: TRISFbits.TRISF6 = 0;
  6550  0BE4  130C               	bcf	12,6	;volatile
  6551                           
  6552                           ;main.c: 647: TRISFbits.TRISF5 = 0;
  6553  0BE5  128C               	bcf	12,5	;volatile
  6554                           
  6555                           ;main.c: 648: TRISFbits.TRISF4 = 0;
  6556  0BE6  120C               	bcf	12,4	;volatile
  6557                           
  6558                           ;main.c: 649: TRISFbits.TRISF3 = 0;
  6559  0BE7  118C               	bcf	12,3	;volatile
  6560                           
  6561                           ;main.c: 652: TRISEbits.TRISE3 = 1;
  6562  0BE8  0021               	movlb	1	; select bank1
  6563  0BE9  1590               	bsf	16,3	;volatile
  6564                           
  6565                           ;main.c: 653: TRISEbits.TRISE4 = 1;
  6566  0BEA  1610               	bsf	16,4	;volatile
  6567                           
  6568                           ;main.c: 655: TRISFbits.TRISF0 = 0;
  6569  0BEB  0026               	movlb	6	; select bank6
  6570  0BEC  100C               	bcf	12,0	;volatile
  6571                           
  6572                           ;main.c: 656: TRISFbits.TRISF1 = 0;
  6573  0BED  108C               	bcf	12,1	;volatile
  6574                           
  6575                           ;main.c: 657: TRISFbits.TRISF2 = 0;
  6576  0BEE  110C               	bcf	12,2	;volatile
  6577                           
  6578                           ;main.c: 661: TRISCbits.TRISC6 = 0;
  6579  0BEF  0021               	movlb	1	; select bank1
  6580  0BF0  130E               	bcf	14,6	;volatile
  6581                           
  6582                           ;main.c: 662: TRISCbits.TRISC7 = 1;
  6583  0BF1  178E               	bsf	14,7	;volatile
  6584                           
  6585                           ;main.c: 664: clearAllPorts();
  6586  0BF2  318A  22DE         	fcall	_clearAllPorts
  6587  0BF4  0008               	return
  6588  0BF5                     __end_of_GPIO_pin_Initialize:	
  6589                           
  6590                           	psect	text29
  6591  0B07                     __ptext29:	
  6592 ;; *************** function _pinINIT_extra *****************
  6593 ;; Defined at:
  6594 ;;		line 885 in file "main.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		status,2
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    2
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_GPIO_pin_Initialize
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           
  6623                           ;psect for function _pinINIT_extra
  6624  0B07                     _pinINIT_extra:	
  6625                           
  6626                           ;main.c: 886: ANSELG=0x00; WPUG = 0;
  6627                           
  6628                           ;incstack = 0
  6629                           ; Regs used in _pinINIT_extra: [status,2]
  6630  0B07  0028               	movlb	8	; select bank8
  6631  0B08  018D               	clrf	13	;volatile
  6632  0B09  0029               	movlb	9	; select bank9
  6633  0B0A  018D               	clrf	13	;volatile
  6634                           
  6635                           ;main.c: 888: ANSELF=0x00;
  6636  0B0B  0028               	movlb	8	; select bank8
  6637  0B0C  018C               	clrf	12	;volatile
  6638                           
  6639                           ;main.c: 890: ANSELE=0x00; WPUE=0x00;
  6640  0B0D  0023               	movlb	3	; select bank3
  6641  0B0E  0190               	clrf	16	;volatile
  6642  0B0F  0024               	movlb	4	; select bank4
  6643  0B10  0190               	clrf	16	;volatile
  6644                           
  6645                           ;main.c: 892: ANSELD=0x00; WPUD=0x00;
  6646  0B11  0023               	movlb	3	; select bank3
  6647  0B12  018F               	clrf	15	;volatile
  6648  0B13  0024               	movlb	4	; select bank4
  6649  0B14  018F               	clrf	15	;volatile
  6650                           
  6651                           ;main.c: 894: ANSELB=0x00; WPUB=0x00;
  6652  0B15  0023               	movlb	3	; select bank3
  6653  0B16  018D               	clrf	13	;volatile
  6654  0B17  0024               	movlb	4	; select bank4
  6655  0B18  018D               	clrf	13	;volatile
  6656                           
  6657                           ;main.c: 896: ANSELA=0x00;
  6658  0B19  0023               	movlb	3	; select bank3
  6659  0B1A  018C               	clrf	12	;volatile
  6660  0B1B  0008               	return
  6661  0B1C                     __end_of_pinINIT_extra:	
  6662                           
  6663                           	psect	text30
  6664  0ADE                     __ptext30:	
  6665 ;; *************** function _clearAllPorts *****************
  6666 ;; Defined at:
  6667 ;;		line 902 in file "main.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      void 
  6674 ;; Registers used:
  6675 ;;		None
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6685 ;;Total ram usage:        0 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    2
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_GPIO_pin_Initialize
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           
  6696                           ;psect for function _clearAllPorts
  6697  0ADE                     _clearAllPorts:	
  6698                           
  6699                           ;main.c: 906: PORTEbits.RE0=0;
  6700                           
  6701                           ;incstack = 0
  6702                           ; Regs used in _clearAllPorts: []
  6703  0ADE  0020               	movlb	0	; select bank0
  6704  0ADF  1010               	bcf	16,0	;volatile
  6705                           
  6706                           ;main.c: 907: PORTEbits.RE1=0;
  6707  0AE0  1090               	bcf	16,1	;volatile
  6708                           
  6709                           ;main.c: 908: PORTGbits.RG0=0;
  6710  0AE1  0025               	movlb	5	; select bank5
  6711  0AE2  100D               	bcf	13,0	;volatile
  6712                           
  6713                           ;main.c: 909: PORTGbits.RG3=0;
  6714  0AE3  118D               	bcf	13,3	;volatile
  6715                           
  6716                           ;main.c: 910: PORTGbits.RG4=0;
  6717  0AE4  120D               	bcf	13,4	;volatile
  6718                           
  6719                           ;main.c: 911: PORTFbits.RF6=0;
  6720  0AE5  130C               	bcf	12,6	;volatile
  6721                           
  6722                           ;main.c: 912: PORTFbits.RF5=0;
  6723  0AE6  128C               	bcf	12,5	;volatile
  6724                           
  6725                           ;main.c: 913: PORTFbits.RF4=0;
  6726  0AE7  120C               	bcf	12,4	;volatile
  6727                           
  6728                           ;main.c: 914: PORTFbits.RF0 = 1;
  6729  0AE8  140C               	bsf	12,0	;volatile
  6730                           
  6731                           ;main.c: 915: PORTFbits.RF1 = 1;
  6732  0AE9  148C               	bsf	12,1	;volatile
  6733                           
  6734                           ;main.c: 916: PORTFbits.RF2 = 1;
  6735  0AEA  150C               	bsf	12,2	;volatile
  6736                           
  6737                           ;main.c: 918: PORTDbits.RD4=0;
  6738  0AEB  0020               	movlb	0	; select bank0
  6739  0AEC  120F               	bcf	15,4	;volatile
  6740                           
  6741                           ;main.c: 919: PORTDbits.RD3=0;
  6742  0AED  118F               	bcf	15,3	;volatile
  6743                           
  6744                           ;main.c: 920: PORTDbits.RD2=0;
  6745  0AEE  110F               	bcf	15,2	;volatile
  6746                           
  6747                           ;main.c: 921: PORTFbits.RF3 = 0;
  6748  0AEF  0025               	movlb	5	; select bank5
  6749  0AF0  118C               	bcf	12,3	;volatile
  6750  0AF1  0008               	return
  6751  0AF2                     __end_of_clearAllPorts:	
  6752                           
  6753                           	psect	intentry
  6754  0004                     __pintentry:	
  6755 ;; *************** function _isr *****************
  6756 ;; Defined at:
  6757 ;;		line 206 in file "main.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;		None
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  6774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  6775 ;;Total ram usage:        2 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    1
  6778 ;; This function calls:
  6779 ;;		_errorsISR
  6780 ;; This function is called by:
  6781 ;;		Interrupt level 1
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785  0004                     _isr:	
  6786                           
  6787                           ;incstack = 0
  6788  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6789                           
  6790                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6791  0005  3180               	pagesel	$
  6792  0006  0020               	movlb	0	; select bank0
  6793  0007  087F               	movf	127,w
  6794  0008  00F4               	movwf	??_isr+1
  6795                           
  6796                           ;main.c: 209: if(RC1IF){
  6797  0009  1E91               	btfss	17,5	;volatile
  6798  000A  284B               	goto	i1l2628
  6799                           
  6800                           ;main.c: 210: if(RC1STAbits.OERR){
  6801  000B  0023               	movlb	3	; select bank3
  6802  000C  1C9D               	btfss	29,1	;volatile
  6803  000D  2817               	goto	i1l2612
  6804                           
  6805                           ;main.c: 211: RC1STAbits.CREN = 0;
  6806  000E  121D               	bcf	29,4	;volatile
  6807                           
  6808                           ;main.c: 212: RC1STAbits.CREN = 1;
  6809  000F  161D               	bsf	29,4	;volatile
  6810                           
  6811                           ;main.c: 213: errorsISR("EROV");
  6812  0010  301E               	movlw	low (STR_2| (0+32768))
  6813  0011  00F0               	movwf	errorsISR@errNum
  6814  0012  3090               	movlw	high (STR_2| (0+32768))
  6815  0013  00F1               	movwf	errorsISR@errNum+1
  6816  0014  318A  22F2  3180   	fcall	_errorsISR
  6817  0017                     i1l2612:	
  6818                           
  6819                           ;main.c: 214: }
  6820                           ;main.c: 216: mainReceivedDataBuffer[mainReceivedDataPosition]=RC1REG;
  6821  0017  0023               	movlb	3	; select bank3
  6822  0018  0819               	movf	25,w	;volatile
  6823  0019  00F3               	movwf	??_isr
  6824  001A  0877               	movf	_mainReceivedDataPosition,w
  6825  001B  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  6826  001C  0086               	movwf	6
  6827  001D  3001               	movlw	1	; select bank2/3
  6828  001E  0087               	movwf	7
  6829  001F  0873               	movf	??_isr,w
  6830  0020  0081               	movwf	1
  6831                           
  6832                           ;main.c: 221: if(mainReceivedDataBuffer[0]=='%'){
  6833  0021  3025               	movlw	37
  6834  0022  0022               	movlb	2	; select bank2
  6835  0023  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  6836  0024  1D03               	btfss	3,2
  6837  0025  283F               	goto	i1l221
  6838                           
  6839                           ;main.c: 222: mainReceivedDataPosition++;
  6840  0026  3001               	movlw	1
  6841  0027  07F7               	addwf	_mainReceivedDataPosition,f
  6842  0028  3000               	movlw	0
  6843  0029  3DF8               	addwfc	_mainReceivedDataPosition+1,f
  6844                           
  6845                           ;main.c: 223: if(mainReceivedDataPosition>15){
  6846  002A  0878               	movf	_mainReceivedDataPosition+1,w
  6847  002B  3A80               	xorlw	128
  6848  002C  00F3               	movwf	??_isr
  6849  002D  3080               	movlw	128
  6850  002E  0273               	subwf	??_isr,w
  6851  002F  1D03               	skipz
  6852  0030  2833               	goto	u269_25
  6853  0031  3010               	movlw	16
  6854  0032  0277               	subwf	_mainReceivedDataPosition,w
  6855  0033                     u269_25:	
  6856  0033  1C03               	skipc
  6857  0034  284B               	goto	i1l2628
  6858                           
  6859                           ;main.c: 224: mainDataReceived=1;
  6860  0035  3001               	movlw	1
  6861  0036  0021               	movlb	1	; select bank1
  6862  0037  00ED               	movwf	_mainDataReceived^(0+128)
  6863  0038  3000               	movlw	0
  6864  0039  00EE               	movwf	(_mainDataReceived^(0+128)+1)
  6865                           
  6866                           ;main.c: 225: mainReceivedDataPosition=0;
  6867  003A  01F7               	clrf	_mainReceivedDataPosition
  6868  003B  01F8               	clrf	_mainReceivedDataPosition+1
  6869                           
  6870                           ;main.c: 226: RC1IF=0;
  6871  003C  0020               	movlb	0	; select bank0
  6872  003D  1291               	bcf	17,5	;volatile
  6873                           
  6874                           ;main.c: 227: }
  6875                           ;main.c: 228: }
  6876  003E  284B               	goto	i1l2628
  6877  003F                     i1l221:	
  6878                           
  6879                           ;main.c: 230: else{
  6880                           ;main.c: 231: RC1STAbits.CREN = 0;
  6881  003F  0023               	movlb	3	; select bank3
  6882  0040  121D               	bcf	29,4	;volatile
  6883                           
  6884                           ;main.c: 232: RC1STAbits.CREN = 1;
  6885  0041  161D               	bsf	29,4	;volatile
  6886                           
  6887                           ;main.c: 233: mainReceivedDataPosition=0;
  6888  0042  01F7               	clrf	_mainReceivedDataPosition
  6889  0043  01F8               	clrf	_mainReceivedDataPosition+1
  6890                           
  6891                           ;main.c: 234: errorsISR("ERRX");
  6892  0044  3023               	movlw	low (STR_3| (0+32768))
  6893  0045  00F0               	movwf	errorsISR@errNum
  6894  0046  3090               	movlw	high (STR_3| (0+32768))
  6895  0047  00F1               	movwf	errorsISR@errNum+1
  6896  0048  318A  22F2  3180   	fcall	_errorsISR
  6897  004B                     i1l2628:	
  6898                           
  6899                           ;main.c: 235: }
  6900                           ;main.c: 236: }
  6901                           ;main.c: 241: if(PIE1bits.TMR2IE==1 && PIR1bits.TMR2IF==1)
  6902  004B  0021               	movlb	1	; select bank1
  6903  004C  1C91               	btfss	17,1	;volatile
  6904  004D  2856               	goto	i1l224
  6905  004E  0020               	movlb	0	; select bank0
  6906  004F  1C91               	btfss	17,1	;volatile
  6907  0050  2856               	goto	i1l224
  6908                           
  6909                           ;main.c: 242: {
  6910                           ;main.c: 243: PIR1bits.TMR2IF=0;
  6911  0051  1091               	bcf	17,1	;volatile
  6912                           
  6913                           ;main.c: 244: PORTFbits.RF3 = 0;
  6914  0052  0025               	movlb	5	; select bank5
  6915  0053  118C               	bcf	12,3	;volatile
  6916                           
  6917                           ;main.c: 245: T2CONbits.TMR2ON=0;
  6918  0054  0020               	movlb	0	; select bank0
  6919  0055  111C               	bcf	28,2	;volatile
  6920  0056                     i1l224:	
  6921                           
  6922                           ;main.c: 246: }
  6923                           ;main.c: 250: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  6924  0056  0021               	movlb	1	; select bank1
  6925  0057  1C11               	btfss	17,0	;volatile
  6926  0058  2864               	goto	i1l2644
  6927  0059  0020               	movlb	0	; select bank0
  6928  005A  1C11               	btfss	17,0	;volatile
  6929  005B  2864               	goto	i1l2644
  6930                           
  6931                           ;main.c: 251: {
  6932                           ;main.c: 252: PIR1bits.TMR1IF=0;
  6933  005C  1011               	bcf	17,0	;volatile
  6934                           
  6935                           ;main.c: 253: PORTFbits.RF3 = 1;
  6936  005D  0025               	movlb	5	; select bank5
  6937  005E  158C               	bsf	12,3	;volatile
  6938                           
  6939                           ;main.c: 254: PR2=0x9F;
  6940  005F  309F               	movlw	159
  6941  0060  0020               	movlb	0	; select bank0
  6942  0061  009B               	movwf	27	;volatile
  6943                           
  6944                           ;main.c: 255: T2CONbits.TMR2ON = 1;
  6945  0062  151C               	bsf	28,2	;volatile
  6946                           
  6947                           ;main.c: 256: T1CONbits.TMR1ON = 0;
  6948  0063  1018               	bcf	24,0	;volatile
  6949  0064                     i1l2644:	
  6950                           
  6951                           ;main.c: 257: }
  6952                           ;main.c: 261: if(PIR4bits.CCP10IF == 1){
  6953  0064  0020               	movlb	0	; select bank0
  6954  0065  1B94               	btfsc	20,7	;volatile
  6955                           
  6956                           ;main.c: 262: if(CCP10IF){
  6957  0066  1F94               	btfss	20,7	;volatile
  6958  0067  2878               	goto	i1l230
  6959                           
  6960                           ;main.c: 263: if(CCP10IF == 1){
  6961  0068  1F94               	btfss	20,7	;volatile
  6962  0069  2878               	goto	i1l230
  6963                           
  6964                           ;main.c: 264: CCP10IF=0;
  6965  006A  1394               	bcf	20,7	;volatile
  6966                           
  6967                           ;main.c: 265: if(start_PWM_Generation_For_DIMMER == 1)
  6968  006B  0021               	movlb	1	; select bank1
  6969  006C  0367               	decf	_start_PWM_Generation_For_DIMMER^(0+128),w
  6970  006D  0468               	iorwf	(_start_PWM_Generation_For_DIMMER+1)^(0+128),w
  6971  006E  1D03               	btfss	3,2
  6972  006F  2873               	goto	i1l229
  6973                           
  6974                           ;main.c: 266: TMR1H = Timer1H;
  6975  0070  086B               	movf	_Timer1H^(0+128),w
  6976  0071  0020               	movlb	0	; select bank0
  6977  0072  0097               	movwf	23	;volatile
  6978  0073                     i1l229:	
  6979                           
  6980                           ;main.c: 267: TMR1L = Timer1L;
  6981  0073  0021               	movlb	1	; select bank1
  6982  0074  0869               	movf	_Timer1L^(0+128),w
  6983  0075  0020               	movlb	0	; select bank0
  6984  0076  0096               	movwf	22	;volatile
  6985                           
  6986                           ;main.c: 268: T1CONbits.TMR1ON = 1;
  6987  0077  1418               	bsf	24,0	;volatile
  6988  0078                     i1l230:	
  6989  0078  0874               	movf	??_isr+1,w
  6990  0079  00FF               	movwf	127
  6991  007A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6992  007B  0009               	retfie
  6993  007C                     __end_of_isr:	
  6994                           
  6995                           	psect	text32
  6996  0AF2                     __ptext32:	
  6997 ;; *************** function _errorsISR *****************
  6998 ;; Defined at:
  6999 ;;		line 818 in file "main.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  errNum          2    0[COMMON] PTR const unsigned char 
  7002 ;;		 -> STR_3(5), STR_2(5), 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      void 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  7017 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0
  7018 ;;Total ram usage:        3 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_isr
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function _errorsISR
  7029  0AF2                     _errorsISR:	
  7030  0AF2                     i1l2498:	
  7031                           ;main.c: 820: while(*errNum != (0))
  7032                           
  7033                           ;incstack = 0
  7034                           ; Regs used in _errorsISR: [wreg-fsr0h+status,2+status,0+pclath]
  7035                           
  7036  0AF2  0870               	movf	errorsISR@errNum,w
  7037  0AF3  0084               	movwf	4
  7038  0AF4  0871               	movf	errorsISR@errNum+1,w
  7039  0AF5  0085               	movwf	5
  7040  0AF6  0012               	moviw fsr0++
  7041  0AF7  1903               	btfsc	3,2
  7042  0AF8  0008               	return
  7043  0AF9                     i1l313:	
  7044                           ;main.c: 821: {
  7045                           ;main.c: 822: while (!TX1STAbits.TRMT);
  7046                           
  7047  0AF9  0023               	movlb	3	; select bank3
  7048  0AFA  1C9E               	btfss	30,1	;volatile
  7049  0AFB  2AF9               	goto	i1l313
  7050                           
  7051                           ;main.c: 823: TX1REG = *errNum;
  7052  0AFC  0870               	movf	errorsISR@errNum,w
  7053  0AFD  0084               	movwf	4
  7054  0AFE  0871               	movf	errorsISR@errNum+1,w
  7055  0AFF  0085               	movwf	5
  7056  0B00  0800               	movf	0,w	;code access
  7057  0B01  009A               	movwf	26	;volatile
  7058                           
  7059                           ;main.c: 824: *errNum++;
  7060  0B02  3001               	movlw	1
  7061  0B03  07F0               	addwf	errorsISR@errNum,f
  7062  0B04  3000               	movlw	0
  7063  0B05  3DF1               	addwfc	errorsISR@errNum+1,f
  7064  0B06  2AF2               	goto	i1l2498
  7065  0B07                     __end_of_errorsISR:	
  7066  007E                     btemp	set	126	;btemp
  7067  007E                     int$flags	set	126
  7068  007E                     wtemp0	set	126


Data Sizes:
    Strings     35
    Constant    8
    Data        118
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     64      80
    BANK1            80     53      79
    BANK2            80      4      46
    BANK3            80      0      58
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), 

    strncpy@to	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), applianceControl@HexlevelBuffer(BANK1[5]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), applianceControl@HexlevelBuffer(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> applianceControl@dimmerSpeedStringBuffer(BANK1[2]), applianceControl@switchNumberStringBuffer(BANK1[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sendAcknowledgment@currentStateBuffer	PTR unsigned char  size(1) Largest target is 58
		 -> currentStateBuffer(BANK3[58]), 

    errorsMain@errNum	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    errorsISR@errNum	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    hexadecimalToDecimal@hexVal	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_errorsISR

Critical Paths under _main in BANK0

    _main->_applianceControl
    _applianceControl->___fttol
    _sprintf->___lwdiv
    _hexadecimalToDecimal->_strlen
    _atoi->___wmul
    ___fttol->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_applianceControl

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   18807
                                             58 BANK0      6     6      0
                                              0 BANK2      4     4      0
                _GPIO_pin_Initialize
     _ReceivingIndicationLedBlinking
           _SwitchOffStatustToGatway
            _SwitchOnStatustToGatway
  _TransmissionIndicationLedBlinking
                  _allPeripheralInit
                   _applianceControl
             _copyReceivedDataBuffer
                         _errorsMain
 ---------------------------------------------------------------------------------
 (1) _errorsMain                                           3     1      2     142
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _copyReceivedDataBuffer                               3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _applianceControl                                    67    61      6   16339
                                             44 BANK0     14     8      6
                                              0 BANK1     53    53      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _atoi
               _hexadecimalToDecimal
                 _sendAcknowledgment
                            _sprintf
                             _strlen
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              6     3      3     576
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    20      6    1102
                                              8 BANK0     18    12      6
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendAcknowledgment                                   4     4      0     104
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _hexadecimalToDecimal                                13    11      2    1538
                                              8 BANK0     13    11      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               8     6      2     196
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1130
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     598
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             30 BANK0     14    10      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3046
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3132
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2614
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _allPeripheralInit                                    0     0      0       0
                   _CCP10_Initialize
                    _CCP8_Initialize
                  _EUSART_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP10_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransmissionIndicationLedBlinking                    2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SwitchOnStatustToGatway                              3     1      2     724
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SwitchOffStatustToGatway                             3     1      2     724
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ReceivingIndicationLedBlinking                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_pin_Initialize                                  0     0      0       0
                      _clearAllPorts
                      _pinINIT_extra
 ---------------------------------------------------------------------------------
 (2) _pinINIT_extra                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearAllPorts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0     173
                                              3 COMMON     2     2      0
                          _errorsISR
 ---------------------------------------------------------------------------------
 (5) _errorsISR                                            3     1      2     173
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_pin_Initialize
     _clearAllPorts
     _pinINIT_extra
   _ReceivingIndicationLedBlinking
   _SwitchOffStatustToGatway
   _SwitchOnStatustToGatway
   _TransmissionIndicationLedBlinking
   _allPeripheralInit
     _CCP10_Initialize
     _CCP8_Initialize
     _EUSART_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _applianceControl
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _atoi
       ___wmul
       _isdigit
     _hexadecimalToDecimal
       ___wmul
       _strlen
     _sendAcknowledgment
     _sprintf
       ___lwdiv
     _strlen
     _strncpy
   _copyReceivedDataBuffer
   _errorsMain

 _isr (ROOT)
   _errorsISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     110       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     40      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     35      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      4      2E      10       57.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      3A      12       72.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0     110      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 07 12:10:05 2019

                 __size_of_allPeripheralInit 000F                                            pc 0002  
                                __CFG_CP$OFF 0000                                           _M1 006E  
                                         _M2 006C                                           _M3 006A  
                                         _M4 0068                                           _M5 0066  
                                         _M6 0064                                           _M7 0062  
                                         _M8 0060                                           _M9 0075  
                    hexadecimalToDecimal@len 002C                          ___wmul@multiplicand 0022  
               applianceControl@integerSpeed 00CB                                          l214 06B8  
                                        l240 0171                                          l209 067C  
                                        l322 0B3A                                          l335 0B6B  
                                        l337 0B72                                          l571 0D9B  
                                        l572 0DA3                                          l564 0D88  
                                        l388 0B54                                          l655 07DA  
                                        _GIE 005F                applianceControl@clockPerCycle 00B4  
                                        _PR2 001B                     hexadecimalToDecimal@base 0030  
                  __size_of_applianceControl 02A7                                          _isr 0004  
                            _TMR2_Initialize 0A82                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_FOSC$HS 0000  
                                       S4112 0800                                 __CFG_LVP$OFF 0000  
                               ___ftdiv@cntr 0038                                 ___ftdiv@sign 003D  
                                       l3112 0AA8                                         l3200 0F9E  
                                       l4000 03A5                                         l3060 0B4E  
                                       l3052 0BAF                                         l3220 0FFB  
                                       l4012 03C3                                         l3054 0BBA  
                                       l3134 0D0D                                         l3126 0CEF  
                                       l3206 0FBD                                         l4110 06AB  
                                       l3080 0D65                                         l3144 0DC3  
                                       l3128 0CFB                                         l3216 0FC1  
                                       l3232 0C25                                         l4032 03EE  
                                       l4016 03C9                                         l3090 0D8D  
                                       l3082 0D6F                                         l3410 06E6  
                                       l3162 0DE5                                         l3146 0DBC  
                                       l3138 0D16                                         l3218 0F53  
                                       l3234 0C3B                                         l3092 0D95  
                                       l3084 0D74                                         l3076 0D5E  
                                       l3404 06D0                                         l3172 0E20  
                                       l3164 0DE9                                         l3156 0DDE  
                                       l3148 0DC8                                         l3260 0E3E  
                                       l4108 069C                                         l4044 040C  
                                       l4028 03E7                                         l3422 0721  
                                       l3166 0E10                                         l3190 0F8D  
                                       l3238 0C43                                         l3352 0B92  
                                       l3280 0E9F                                         l3184 0F75  
                                       l3600 06A5                                         l3362 0EBB  
                                       l3434 073D                                         l3426 0729  
                                       l3276 0E99                                         l3268 0E5B  
                                       l3390 0F2B                                         l3382 0F12  
                                       l3438 0745                                         l3454 0786  
                                       l3368 0ED1                                         l3480 07D1  
                                       l3472 07B6                                         l3482 07DD  
                                       l3474 07C4                                         l3722 00F0  
                                       l3580 064E                                         l3900 02BF  
                                       l3820 0207                                         l3804 01E1  
                                       l3740 0138                                         l3486 07EB  
                                       l3590 0676                                         l3582 0656  
                                       l3592 067F                                         l3584 065E  
                                       l3576 063E                                         l3920 02EB  
                                       l3904 02C7                                         l3840 0233  
                                       l3824 020D                                         l3808 01E9  
                                       l3752 0153                                         l3586 0666  
                                       l3578 0646                                         l3596 0697  
                                       l3588 066E                                         l3932 0309  
                                       l3916 02E5                                         l3852 0251  
                                       l3836 022B                                         l3772 0197  
                                       l3758 0174                                         l3952 0335  
                                       l3936 0311                                         l3872 027D  
                                       l3856 0257                                         l3792 01C3  
                                       l3776 019F                                         l3698 0B32  
                                       l3980 0379                                         l3964 0353  
                                       l3948 032F                                         l3884 029B  
                                       l3868 0275                                         l3788 01BD  
                                       l3984 037F                                         l3968 035B  
                                       l3888 02A1                                         l3996 039D  
                                       ?_isr 0070                                         STR_1 1028  
                                       STR_2 101E                                         STR_3 1023  
                                       STR_4 1019                                         STR_5 1008  
                                       u4105 0EF3                                         u4115 0F13  
                                       u4125 0F22                                         u4205 072A  
                                       u4135 0F2C                                         u4215 0730  
                                       u4315 07B7                                         u4245 0746  
                                       u3605 0B5A                                         u4095 0EE3  
                                       u4255 074C                                         u4175 06F2  
                                       u4185 0702                                         u4345 07D2  
                                       u5217 00BF                                         u5307 0CAD  
                                       u5227 0AC3                                         _PEIE 005E  
                                       u5317 0AB2                                         u5237 0CBA  
                                       u3725 0DAA                                         u3645 0D6A  
                                       u4285 078D                                         u3805 0D06  
                                       u5247 0CC6                                         u3815 0D0E  
                                       u5257 0CD2                                         u3665 0D83  
                                       u4385 0C60                                         u5267 0CE0  
                                       u3595 0B55                                         u3915 0FB3  
                                       u4475 0151                                         u5277 0C87  
                                       u3685 0D90                                         u4485 016F  
                                       u5287 0C93                                         u3775 0CF2  
                                       u5297 0C9F                                         u3795 0CFC  
                                       _TMR2 001A                                         _WPUB 020D  
                                       _WPUD 020F                                         _WPUE 0210  
                                       _WPUG 048D                                 __CFG_WRT$OFF 0000  
                                       _atoi 0DBA                                         _main 00B9  
                               ___ftpack@arg 0020                                 ___ftpack@exp 0023  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                      _copy_parentalLockBuffer 00D5  
                                       start 007C                                __CFG_IESO$OFF 0000  
             applianceControl@HexlevelBuffer 00A8                       __size_of_pinINIT_extra 0015  
                               ___ftmul@cntr 0036                                 ___ftmul@sign 0037  
                               ___fttol@exp1 004B                                 ___fttol@lval 0047  
                                      ??_isr 0073          applianceControl@charParentalControl 0050  
                  __size_of_CCP10_Initialize 000A                                        ?_atoi 0026  
                                      ?_main 0070                                __CFG_WDTE$OFF 0000  
                            __end_of___ftdiv 0F4D                              __end_of___ftmul 076D  
                                      _T1CON 0018                              __end_of___fttol 07F4  
                                      _T2CON 001C                                        _RC1IF 008D  
                            __end_of___lwdiv 0D1B                                        i1l221 003F  
                                      i1l230 0078                                        i1l224 0056  
                                      i1l313 0AF9                                        i1l229 0073  
              applianceControl@CompleteClock 00AD                                        _TMR1H 0017  
                                      _TMR1L 0016                    applianceControl@remainder 00A2  
                     ??_hexadecimalToDecimal 002A                               __CFG_FCMEN$OFF 0000  
                              ___awtoft@sign 002D                              __end_of_isdigit 0AAA  
                              ___ftpack@sign 0024                                        atoi@a 002B  
                                      atoi@s 002D                      __end_of_TMR1_Initialize 07FF  
                             __CFG_BOREN$OFF 0000                                        status 0003  
                                      wtemp0 007E                              __end_of_sprintf 1000  
                            __end_of_strncpy 0C4E                        __end_of_clearAllPorts 0AF2  
                        _GPIO_pin_Initialize 0BCE                               __CFG_MCLRE$OFF 0000  
                            __initialization 007E                      ?_copyReceivedDataBuffer 0070  
                               __end_of_atoi 0E25                                 __end_of_main 0412  
                            _CCP8_Initialize 0A78                      __end_of_TMR2_Initialize 0A8C  
                             __CFG_LPBOR$OFF 0000                                       ??_atoi 0028  
                                     ??_main 005A                                ___fttol@sign1 0046  
                       ?_GPIO_pin_Initialize 0070    __end_of_TransmissionIndicationLedBlinking 0ACC  
 __size_of_TransmissionIndicationLedBlinking 0011          ??_TransmissionIndicationLedBlinking 0020  
         ?_TransmissionIndicationLedBlinking 0070            _TransmissionIndicationLedBlinking 0ABB  
                              _pinINIT_extra 0B07                                       _CCPR8H 0618  
                                     _CCPR8L 0617                             __end_of___awtoft 0BA9  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELD 018F                                       _ANSELE 0190  
                                     _ANSELF 040C                             __end_of___ftpack 0DBA  
                                     _ANSELG 040D                                       _T1GCON 0019  
                                     _RC1REG 0199                                       _RC1STA 019D  
                                     i1l2612 0017                                       i1l2644 0064  
                                     i1l2628 004B                                       i1l2498 0AF2  
                                     u269_25 0033                                       _TX1REG 019A  
                                     _TX1STA 019E                               __CFG_PWRTE$OFF 0000  
             __end_of_copyReceivedDataBuffer 0C80                  __size_of_sendAcknowledgment 0020  
                                     ___wmul 0B4B                                    ??___ftdiv 0034  
                                  ??___ftmul 002E                                    ??___fttol 0042  
                                  ??___lwdiv 0024                                       _strlen 0BA9  
                      ??_GPIO_pin_Initialize 0075                        ___ftmul@f3_as_product 0033  
                   _mainReceivedDataPosition 0077                             _applianceControl 0412  
                                  ??_isdigit 0075                               ?_pinINIT_extra 0070  
                                  ??_sprintf 002E                   ??_SwitchOffStatustToGatway 0022  
                                  ??_strncpy 0023                             ?_TMR1_Initialize 0070  
                    __end_of__initialization 00B5                      __end_of_CCP8_Initialize 0A82  
                                 ___ftdiv@f1 0031                                   ___ftdiv@f2 002E  
                                 ___ftdiv@f3 0039                                   ___awtoft@c 0028  
                                 ___ftmul@f1 0028                                   ___ftmul@f2 002B  
                                 ___fttol@f1 003E                               __pcstackCOMMON 0070  
           __size_of_SwitchOnStatustToGatway 0033                                 __pidataBANK1 0ACC  
                               __pidataBANK2 0BF5                                 __pidataBANK3 0D1B  
                           ?_TMR2_Initialize 0070                             _CCP10_Initialize 0A6E  
                                 __pbssBANK0 0060                                   __pbssBANK1 00E7  
                            __CFG_VCAPEN$OFF 0000                           __size_of_errorsISR 0015  
                                 __pmaintext 00B9                                      ?___wmul 0020  
                                 __pintentry 0004                                      _CCP10IF 00A7  
                 sendAcknowledgment@Tx_count 0021                                      _CCP9CON 061C  
                                    _CCPR10H 061E                                      _CCPR10L 061D  
                                  ?___awtoft 0028                                    ?___ftpack 0020  
                            ??_pinINIT_extra 0075                                      ?_strlen 0020  
                                    _SP1BRGH 019C                                      _SP1BRGL 019B  
            _start_PWM_Generation_For_DIMMER 00E7  applianceControl@currentStateBufferPositions 00D1  
                           ?_CCP8_Initialize 0070             applianceControl@chDimmerSpeedLSB 004F  
           applianceControl@chDimmerSpeedMSB 004E                                      _Timer1H 00EB  
                                    _Timer1L 00E9                                      ___ftdiv 0EA4  
                            __size_of___wmul 001C                                      ___ftmul 06B9  
                                    ___fttol 076D                                      ___lwdiv 0CE6  
                            __CFG_STVREN$OFF 0000                                   ??___awtoft 002B  
                                 ??___ftpack 0025                                   _errorsMain 0B32  
                                    __ptext1 0B32                                      __ptext2 0C4E  
                                    __ptext3 0412                                      __ptext4 0C1F  
                                    __ptext5 0F4D                                      __ptext6 0CE6  
                                    __ptext7 0B67                                      __ptext8 0E25  
                                    __ptext9 0BA9                              __size_of_strlen 0025  
                          __end_of_hexpowers 1008                                    _T1CONbits 0018  
                                  _T2CONbits 001C                                      _isdigit 0A9B  
                               __size_of_isr 0078                            __end_of_errorsISR 0B07  
              __size_of_hexadecimalToDecimal 007F         sendAcknowledgment@currentStateBuffer 0023  
           __end_of_SwitchOffStatustToGatway 0CB3                                      main@man 014C  
                                    _sprintf 0F4D                                      clrloop0 0A63  
                                    _strncpy 0C1F                         end_of_initialization 00B5  
                                    init_ram 0A68                                      initloop 0A69  
                          _EUSART_Initialize 0B1C                     __end_of_applianceControl 06B9  
         applianceControl@integerSwitchState 00D3                      _SwitchOnStatustToGatway 0CB3  
                         ?_EUSART_Initialize 0070                                      strlen@s 0026  
                        ??_EUSART_Initialize 0075                                    _PORTBbits 000D  
                                  _PORTDbits 000F                                    _PORTEbits 0010  
                                  _PORTFbits 028C                                    _PORTGbits 028D  
     __end_of_ReceivingIndicationLedBlinking 0ABB      __size_of_ReceivingIndicationLedBlinking 0011  
             _ReceivingIndicationLedBlinking 0AAA                       __size_of_clearAllPorts 0014  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISDbits 008F                                    _TRISEbits 0090  
                                  _TRISFbits 030C                                    _TRISGbits 030D  
    SwitchOffStatustToGatway@SwitchOffNumber 0020                     __end_of_CCP10_Initialize 0A78  
                  __end_of_EUSART_Initialize 0B32                                  ___ftdiv@exp 003C  
   applianceControl@switchNumberStringBuffer 00C6                   __end_of_sendAcknowledgment 0B87  
                                ___ftmul@exp 0032                  __end_of_GPIO_pin_Initialize 0BF5  
                             __end_of___wmul 0B67                       _mainReceivedDataBuffer 0120  
       applianceControl@ConvertStringIntoInt 00A0                                  ?_errorsMain 0020  
                             __end_of_strlen 0BCE                          start_initialization 007E  
                                __end_of_isr 007C                        applianceControl@F3882 00E5  
                      applianceControl@F3884 00E3                    ??_SwitchOnStatustToGatway 0022  
                      applianceControl@Pulse 00B7                        applianceControl@start 00A4  
                              _clearAllPorts 0ADE                     __size_of_TMR1_Initialize 000B  
    copyReceivedDataBuffer@dataBufferCounter 0021                                     ??___wmul 0075  
          __size_of_SwitchOffStatustToGatway 0033                    ?_SwitchOffStatustToGatway 0020  
                                __pdataBANK1 00D5                                  __pdataBANK2 0120  
                                __pdataBANK3 01A0                                     ??_strlen 0022  
                          __size_of___awtoft 0022                            __size_of___ftpack 0065  
                           _mainDataReceived 00ED                                  __pbssCOMMON 0075  
                                  ___latbits 0002                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 014A  
                   __size_of_TMR2_Initialize 000A                     ??_copyReceivedDataBuffer 0020  
                 __size_of_EUSART_Initialize 0016    applianceControl@ConvertIntToTimeInMilisec 00C8  
                                sprintf@flag 0032                                  sprintf@prec 0037  
                        __size_of_errorsMain 0019                               ?_clearAllPorts 0070  
                           ___lwdiv@dividend 0022                              errorsISR@errNum 0070  
                           errorsMain@errNum 0020                                     ?___ftdiv 002E  
                                   ?___ftmul 0028                                     ?___fttol 003E  
                                   ?___lwdiv 0020              __end_of_SwitchOnStatustToGatway 0CE6  
                                  __pswtext1 0800                                     _CCP10CON 061F  
                                   _BAUD1CON 019F                        __end_of_pinINIT_extra 0B1C  
                                   ?_isdigit 0070                                    _hexpowers 1000  
        applianceControl@charFinalFrameState 0051                             ___lwdiv@quotient 0026  
                                   ?_sprintf 0028                                    _errorsISR 0AF2  
                                   ?_strncpy 0020      applianceControl@dimmerSpeedStringBuffer 00CD  
                             ___wmul@product 0024                                    clear_ram0 0A62  
                                strncpy@from 0020                                     _PIE1bits 0091  
                                strncpy@size 0021                                     _PIE4bits 0094  
                          ?_applianceControl 004C                  hexadecimalToDecimal@dec_val 002E  
                                   _PIR1bits 0011                 __end_of_hexadecimalToDecimal 0EA4  
                                   _PIR4bits 0014                           ??_applianceControl 0052  
                   __size_of_CCP8_Initialize 000A                            ??_TMR1_Initialize 0075  
                      hexadecimalToDecimal@i 0033                            ___wmul@multiplier 0020  
      SwitchOnStatustToGatway@SwitchOnNumber 0020                applianceControl@charSwitchLSB 004C  
              applianceControl@charSwitchMSB 00C5                                   ?_errorsISR 0070  
            __size_of_copyReceivedDataBuffer 0032                            ??_TMR2_Initialize 0075  
                          ?_CCP10_Initialize 0070                              ??_clearAllPorts 0075  
           ??_ReceivingIndicationLedBlinking 0020              ?_ReceivingIndicationLedBlinking 0070  
                         ??_CCP10_Initialize 0075                         applianceControl@deno 00B1  
                       applianceControl@strH 00BF                         applianceControl@strL 00C2  
                           __size_of___ftdiv 00A9                             __size_of___ftmul 00B4  
                           __size_of___fttol 0087                            _allPeripheralInit 0A8C  
                           __size_of___lwdiv 0035                                     ___awtoft 0B87  
                                   ___ftpack 0D55                                 ??_errorsMain 0022  
                         _sendAcknowledgment 0B67                                  _isdigit$990 0020  
                         ?_allPeripheralInit 0070                                   sprintf@idx 0033  
                                 sprintf@val 0035                             __size_of_isdigit 000F  
                            ___lwdiv@divisor 0020                          ?_sendAcknowledgment 0070  
                            ___lwdiv@counter 0025                                     __ptext10 0DBA  
                                   __ptext11 0A9B                                     __ptext20 07F4  
                                   __ptext12 0B4B                                     __ptext21 0B1C  
                                   __ptext13 076D                                     __ptext30 0ADE  
                                   __ptext22 0A78                                     __ptext14 06B9  
                                   __ptext23 0A6E                                     __ptext15 0EA4  
                                   __ptext32 0AF2                                     __ptext24 0ABB  
                                   __ptext16 0B87                                     __ptext25 0CB3  
                                   __ptext17 0D55                                     __ptext26 0C80  
                                   __ptext18 0A8C                                     __ptext27 0AAA  
                                   __ptext19 0A82                                     __ptext28 0BCE  
                                   __ptext29 0B07                          ??_allPeripheralInit 0075  
            applianceControl@charSwitchSTATE 004D                             __size_of_sprintf 00B3  
                           __size_of_strncpy 002F                        main@dataBufferCounter 014A  
                              __size_of_atoi 006B                                __size_of_main 0359  
                         __end_of_errorsMain 0B4B                           _currentStateBuffer 01A0  
                                 _RC1STAbits 019D                         ??_sendAcknowledgment 0020  
                 hexadecimalToDecimal@hexVal 0032                    __end_of_allPeripheralInit 0A9B  
                                   int$flags 007E                                     atoi@sign 002A  
                     _copyReceivedDataBuffer 0C4E                       _tempReceivedDataBuffer 0140  
               __size_of_GPIO_pin_Initialize 0027                            ??_CCP8_Initialize 0075  
                        applianceControl@end 00A6                                     isdigit@c 0021  
                       _hexadecimalToDecimal 0E25                                  ??_errorsISR 0072  
                                   intlevel1 0000                                    sprintf@ap 0034  
                                  sprintf@sp 0038                            __CFG_CLKOUTEN$OFF 0000  
        applianceControl@integerSwitchNumber 00CF                    applianceControl@NeedPulse 00BB  
                                  strncpy@cp 0025                                    strncpy@to 0024  
                         _parentalLockBuffer 0132                                __pstringtext1 1000  
                              __pstringtext2 1019                                __pstringtext3 101E  
                              __pstringtext4 1023                                __pstringtext5 1028  
                              __pstringtext6 0000                                     sprintf@c 0039  
                                   sprintf@f 0028                                     strlen@cp 0027  
                      ?_hexadecimalToDecimal 0028                                   _TX1STAbits 019E  
                   ?_SwitchOnStatustToGatway 0020                              _TMR1_Initialize 07F4  
                   _SwitchOffStatustToGatway 0C80  
