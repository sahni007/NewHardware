

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 16 12:23:25 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext1,local,class=CONST,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2
    56                           	psect	text25,local,class=CODE,merge=1,delta=2
    57                           	psect	text26,local,class=CODE,merge=1,delta=2
    58                           	psect	swtext2,local,class=CONST,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1526 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0110                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  011D                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  018F                     	;# 
   162  0190                     	;# 
   163  0191                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0194                     	;# 
   169  0195                     	;# 
   170  0196                     	;# 
   171  0197                     	;# 
   172  0199                     	;# 
   173  0199                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019A                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019C                     	;# 
   184  019C                     	;# 
   185  019C                     	;# 
   186  019D                     	;# 
   187  019D                     	;# 
   188  019D                     	;# 
   189  019E                     	;# 
   190  019E                     	;# 
   191  019E                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  019F                     	;# 
   195  020D                     	;# 
   196  020F                     	;# 
   197  0210                     	;# 
   198  0211                     	;# 
   199  0211                     	;# 
   200  0212                     	;# 
   201  0212                     	;# 
   202  0213                     	;# 
   203  0213                     	;# 
   204  0214                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0216                     	;# 
   211  0217                     	;# 
   212  0217                     	;# 
   213  0219                     	;# 
   214  021A                     	;# 
   215  021B                     	;# 
   216  021C                     	;# 
   217  021D                     	;# 
   218  021E                     	;# 
   219  021F                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  0291                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0298                     	;# 
   227  0298                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029D                     	;# 
   231  029E                     	;# 
   232  029F                     	;# 
   233  030C                     	;# 
   234  030D                     	;# 
   235  0311                     	;# 
   236  0311                     	;# 
   237  0312                     	;# 
   238  0313                     	;# 
   239  0318                     	;# 
   240  0318                     	;# 
   241  0319                     	;# 
   242  031A                     	;# 
   243  031C                     	;# 
   244  031C                     	;# 
   245  031D                     	;# 
   246  031E                     	;# 
   247  038C                     	;# 
   248  038D                     	;# 
   249  0394                     	;# 
   250  0395                     	;# 
   251  0396                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  0411                     	;# 
   255  0411                     	;# 
   256  0412                     	;# 
   257  0413                     	;# 
   258  0414                     	;# 
   259  0415                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  048D                     	;# 
   271  0491                     	;# 
   272  0491                     	;# 
   273  0492                     	;# 
   274  0492                     	;# 
   275  0493                     	;# 
   276  0493                     	;# 
   277  0493                     	;# 
   278  0494                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0495                     	;# 
   282  0496                     	;# 
   283  0496                     	;# 
   284  0497                     	;# 
   285  0497                     	;# 
   286  0595                     	;# 
   287  0596                     	;# 
   288  0597                     	;# 
   289  059C                     	;# 
   290  059D                     	;# 
   291  059E                     	;# 
   292  0611                     	;# 
   293  0611                     	;# 
   294  0612                     	;# 
   295  0613                     	;# 
   296  0614                     	;# 
   297  0614                     	;# 
   298  0615                     	;# 
   299  0616                     	;# 
   300  0617                     	;# 
   301  0617                     	;# 
   302  0618                     	;# 
   303  0619                     	;# 
   304  061A                     	;# 
   305  061A                     	;# 
   306  061B                     	;# 
   307  061C                     	;# 
   308  061D                     	;# 
   309  061D                     	;# 
   310  061E                     	;# 
   311  061F                     	;# 
   312  0FE4                     	;# 
   313  0FE5                     	;# 
   314  0FE6                     	;# 
   315  0FE7                     	;# 
   316  0FE8                     	;# 
   317  0FE9                     	;# 
   318  0FEA                     	;# 
   319  0FEB                     	;# 
   320  0FED                     	;# 
   321  0FEE                     	;# 
   322  0FEF                     	;# 
   323                           
   324                           	psect	idataBANK1
   325  0AB5                     __pidataBANK1:	
   326                           
   327                           ;initializer for applianceControl@F3896
   328  0AB5  3423               	retlw	35
   329  0AB6  3400               	retlw	0
   330                           
   331                           ;initializer for applianceControl@F3894
   332  0AB7  3423               	retlw	35
   333  0AB8  3400               	retlw	0
   334                           
   335                           	psect	idataBANK2
   336  0D31                     __pidataBANK2:	
   337                           
   338                           ;initializer for _mainReceivedDataBuffer
   339  0D31  3423               	retlw	35
   340  0D32  3400               	retlw	0
   341  0D33  3400               	retlw	0
   342  0D34  3400               	retlw	0
   343  0D35  3400               	retlw	0
   344  0D36  3400               	retlw	0
   345  0D37  3400               	retlw	0
   346  0D38  3400               	retlw	0
   347  0D39  3400               	retlw	0
   348  0D3A  3400               	retlw	0
   349  0D3B  3400               	retlw	0
   350  0D3C  3400               	retlw	0
   351  0D3D  3400               	retlw	0
   352  0D3E  3400               	retlw	0
   353  0D3F  3400               	retlw	0
   354  0D40  3400               	retlw	0
   355  0D41  3400               	retlw	0
   356  0D42  3400               	retlw	0
   357                           
   358                           ;initializer for _touchpanleReceivedDatabuffer
   359  0D43  3423               	retlw	35
   360  0D44  3400               	retlw	0
   361  0D45  3400               	retlw	0
   362  0D46  3400               	retlw	0
   363  0D47  3400               	retlw	0
   364  0D48  3400               	retlw	0
   365  0D49  3400               	retlw	0
   366  0D4A  3400               	retlw	0
   367  0D4B  3400               	retlw	0
   368  0D4C  3400               	retlw	0
   369  0D4D  3400               	retlw	0
   370  0D4E  3400               	retlw	0
   371  0D4F  3400               	retlw	0
   372  0D50  3400               	retlw	0
   373  0D51  3400               	retlw	0
   374  0D52  3400               	retlw	0
   375                           
   376                           ;initializer for _copy_parentalLockBuffer
   377  0D53  3430               	retlw	48
   378  0D54  3430               	retlw	48
   379  0D55  3430               	retlw	48
   380  0D56  3430               	retlw	48
   381  0D57  3430               	retlw	48
   382  0D58  3430               	retlw	48
   383  0D59  3430               	retlw	48
   384  0D5A  3430               	retlw	48
   385  0D5B  3430               	retlw	48
   386  0D5C  3430               	retlw	48
   387  0D5D  3430               	retlw	48
   388  0D5E  3430               	retlw	48
   389  0D5F  3400               	retlw	0
   390  0D60  3400               	retlw	0
   391                           
   392                           ;initializer for _parentalLockBuffer
   393  0D61  3430               	retlw	48
   394  0D62  3430               	retlw	48
   395  0D63  3430               	retlw	48
   396  0D64  3430               	retlw	48
   397  0D65  3430               	retlw	48
   398  0D66  3430               	retlw	48
   399  0D67  3430               	retlw	48
   400  0D68  3430               	retlw	48
   401  0D69  3430               	retlw	48
   402  0D6A  3430               	retlw	48
   403  0D6B  3430               	retlw	48
   404  0D6C  3430               	retlw	48
   405  0D6D  3400               	retlw	0
   406  0D6E  3400               	retlw	0
   407                           
   408                           ;initializer for _tempReceivedDataBuffer
   409  0D6F  3423               	retlw	35
   410  0D70  3400               	retlw	0
   411  0D71  3400               	retlw	0
   412  0D72  3400               	retlw	0
   413  0D73  3400               	retlw	0
   414  0D74  3400               	retlw	0
   415  0D75  3400               	retlw	0
   416  0D76  3400               	retlw	0
   417  0D77  3400               	retlw	0
   418  0D78  3400               	retlw	0
   419                           
   420                           ;initializer for _tempReceiveTouchpanelDataBuffer
   421  0D79  3423               	retlw	35
   422  0D7A  3400               	retlw	0
   423  0D7B  3400               	retlw	0
   424  0D7C  3400               	retlw	0
   425  0D7D  3400               	retlw	0
   426  0D7E  3400               	retlw	0
   427  0D7F  3400               	retlw	0
   428  0D80  3400               	retlw	0
   429                           
   430                           	psect	idataBANK3
   431  07B3                     __pidataBANK3:	
   432                           
   433                           ;initializer for _currentStateBuffer
   434  07B3  3423               	retlw	35
   435  07B4  3400               	retlw	0
   436  07B5  3400               	retlw	0
   437  07B6  3400               	retlw	0
   438  07B7  3400               	retlw	0
   439  07B8  3400               	retlw	0
   440  07B9  3400               	retlw	0
   441  07BA  3400               	retlw	0
   442  07BB  3400               	retlw	0
   443  07BC  3400               	retlw	0
   444  07BD  3400               	retlw	0
   445  07BE  3400               	retlw	0
   446  07BF  3400               	retlw	0
   447  07C0  3400               	retlw	0
   448  07C1  3400               	retlw	0
   449  07C2  3400               	retlw	0
   450  07C3  3400               	retlw	0
   451  07C4  3400               	retlw	0
   452  07C5  3400               	retlw	0
   453  07C6  3400               	retlw	0
   454  07C7  3400               	retlw	0
   455  07C8  3400               	retlw	0
   456  07C9  3400               	retlw	0
   457  07CA  3400               	retlw	0
   458  07CB  3400               	retlw	0
   459  07CC  3400               	retlw	0
   460  07CD  3400               	retlw	0
   461  07CE  3400               	retlw	0
   462  07CF  3400               	retlw	0
   463  07D0  3400               	retlw	0
   464  07D1  3400               	retlw	0
   465  07D2  3400               	retlw	0
   466  07D3  3400               	retlw	0
   467  07D4  3400               	retlw	0
   468  07D5  3400               	retlw	0
   469  07D6  3400               	retlw	0
   470  07D7  3400               	retlw	0
   471  07D8  3400               	retlw	0
   472  07D9  3400               	retlw	0
   473  07DA  3400               	retlw	0
   474  07DB  3400               	retlw	0
   475  07DC  3400               	retlw	0
   476  07DD  3400               	retlw	0
   477  07DE  3400               	retlw	0
   478  07DF  3400               	retlw	0
   479  07E0  3400               	retlw	0
   480  07E1  3400               	retlw	0
   481  07E2  3400               	retlw	0
   482  07E3  3400               	retlw	0
   483  07E4  3400               	retlw	0
   484  07E5  3400               	retlw	0
   485  07E6  3400               	retlw	0
   486  07E7  3400               	retlw	0
   487  07E8  3400               	retlw	0
   488  07E9  3400               	retlw	0
   489  07EA  3400               	retlw	0
   490  07EB  3400               	retlw	0
   491  07EC  3400               	retlw	0
   492                           
   493                           	psect	stringtext1
   494  1000                     __pstringtext1:	
   495  1000                     _hexpowers:	
   496  1000  3401               	retlw	1
   497  1001  3400               	retlw	0
   498  1002  3410               	retlw	16
   499  1003  3400               	retlw	0
   500  1004  3400               	retlw	0
   501  1005  3401               	retlw	1
   502  1006  3400               	retlw	0
   503  1007  3410               	retlw	16
   504  1008                     __end_of_hexpowers:	
   505  001A                     _TMR2	set	26
   506  001C                     _T2CON	set	28
   507  0019                     _T1GCON	set	25
   508  0018                     _T1CON	set	24
   509  0016                     _TMR1L	set	22
   510  0017                     _TMR1H	set	23
   511  0014                     _PIR4bits	set	20
   512  0018                     _T1CONbits	set	24
   513  001B                     _PR2	set	27
   514  001C                     _T2CONbits	set	28
   515  0011                     _PIR1bits	set	17
   516  0010                     _PORTEbits	set	16
   517  005E                     _PEIE	set	94
   518  005F                     _GIE	set	95
   519  00A7                     _CCP10IF	set	167
   520  00A5                     _RC2IF	set	165
   521  008D                     _RC1IF	set	141
   522  0094                     _PIE4bits	set	148
   523  008E                     _TRISCbits	set	142
   524  0090                     _TRISEbits	set	144
   525  008D                     _TRISBbits	set	141
   526  008F                     _TRISDbits	set	143
   527  0091                     _PIE1bits	set	145
   528  018C                     _ANSELA	set	396
   529  018D                     _ANSELB	set	397
   530  018F                     _ANSELD	set	399
   531  0190                     _ANSELE	set	400
   532  019A                     _TX1REG	set	410
   533  019E                     _TX1STAbits	set	414
   534  019C                     _SP1BRGH	set	412
   535  019B                     _SP1BRGL	set	411
   536  019E                     _TX1STA	set	414
   537  019D                     _RC1STA	set	413
   538  019F                     _BAUD1CON	set	415
   539  0199                     _RC1REG	set	409
   540  019D                     _RC1STAbits	set	413
   541  020D                     _WPUB	set	525
   542  020F                     _WPUD	set	527
   543  0210                     _WPUE	set	528
   544  028C                     _PORTFbits	set	652
   545  028D                     _PORTGbits	set	653
   546  030C                     _TRISFbits	set	780
   547  030D                     _TRISGbits	set	781
   548  040C                     _ANSELF	set	1036
   549  040D                     _ANSELG	set	1037
   550  048D                     _WPUG	set	1165
   551  0496                     _TX2STAbits	set	1174
   552  0494                     _SP2BRGH	set	1172
   553  0493                     _SP2BRGL	set	1171
   554  0496                     _TX2STA	set	1174
   555  0495                     _RC2STA	set	1173
   556  0497                     _BAUD2CON	set	1175
   557  0491                     _RC2REG	set	1169
   558  0495                     _RC2STAbits	set	1173
   559  0492                     _TX2REG	set	1170
   560  061D                     _CCPR10L	set	1565
   561  061E                     _CCPR10H	set	1566
   562  061F                     _CCP10CON	set	1567
   563  0617                     _CCPR8L	set	1559
   564  0618                     _CCPR8H	set	1560
   565  061C                     _CCP9CON	set	1564
   566  1008                     STR_10:	
   567  1008  3430               	retlw	48	;'0'
   568  1009  3431               	retlw	49	;'1'
   569  100A  3432               	retlw	50	;'2'
   570  100B  3433               	retlw	51	;'3'
   571  100C  3434               	retlw	52	;'4'
   572  100D  3435               	retlw	53	;'5'
   573  100E  3436               	retlw	54	;'6'
   574  100F  3437               	retlw	55	;'7'
   575  1010  3438               	retlw	56	;'8'
   576  1011  3439               	retlw	57	;'9'
   577  1012  3441               	retlw	65	;'A'
   578  1013  3442               	retlw	66	;'B'
   579  1014  3443               	retlw	67	;'C'
   580  1015  3444               	retlw	68	;'D'
   581  1016  3445               	retlw	69	;'E'
   582  1017  3446               	retlw	70	;'F'
   583  1018  3400               	retlw	0
   584                           
   585                           	psect	stringtext2
   586  1019                     __pstringtext2:	
   587  1019                     STR_4:	
   588  1019  3445               	retlw	69	;'E'
   589  101A  3452               	retlw	82	;'R'
   590  101B  3452               	retlw	82	;'R'
   591  101C  344F               	retlw	79	;'O'
   592  101D  3456               	retlw	86	;'V'
   593  101E  3400               	retlw	0
   594                           
   595                           	psect	stringtext3
   596  101F                     __pstringtext3:	
   597  101F                     STR_5:	
   598  101F  3452               	retlw	82	;'R'
   599  1020  3445               	retlw	69	;'E'
   600  1021  3452               	retlw	82	;'R'
   601  1022  3452               	retlw	82	;'R'
   602  1023  3400               	retlw	0
   603                           
   604                           	psect	stringtext4
   605  1024                     __pstringtext4:	
   606  1024                     STR_7:	
   607  1024  3445               	retlw	69	;'E'
   608  1025  3452               	retlw	82	;'R'
   609  1026  344C               	retlw	76	;'L'
   610  1027  3453               	retlw	83	;'S'
   611  1028  3400               	retlw	0
   612                           
   613                           	psect	stringtext5
   614  1029                     __pstringtext5:	
   615  1029                     STR_6:	
   616  1029  3445               	retlw	69	;'E'
   617  102A  3452               	retlw	82	;'R'
   618  102B  3452               	retlw	82	;'R'
   619  102C  3454               	retlw	84	;'T'
   620  102D  3400               	retlw	0
   621                           
   622                           	psect	stringtext6
   623  102E                     __pstringtext6:	
   624  102E                     STR_2:	
   625  102E  3445               	retlw	69	;'E'
   626  102F  3452               	retlw	82	;'R'
   627  1030  344F               	retlw	79	;'O'
   628  1031  3456               	retlw	86	;'V'
   629  1032  3400               	retlw	0
   630                           
   631                           	psect	stringtext7
   632  1033                     __pstringtext7:	
   633  1033                     STR_3:	
   634  1033  3445               	retlw	69	;'E'
   635  1034  3452               	retlw	82	;'R'
   636  1035  3452               	retlw	82	;'R'
   637  1036  3458               	retlw	88	;'X'
   638  1037  3400               	retlw	0
   639                           
   640                           	psect	stringtext8
   641  1038                     __pstringtext8:	
   642  1038                     STR_1:	
   643  1038  3425               	retlw	37	;'%'
   644  1039  3458               	retlw	88	;'X'
   645  103A  3400               	retlw	0
   646                           
   647                           	psect	stringtext9
   648  103B                     __pstringtext9:	
   649  103B                     STR_9:	
   650  103B  3423               	retlw	35	;'#'
   651  103C  3400               	retlw	0
   652                           
   653                           	psect	stringtext10
   654  0000                     __pstringtext10:	
   655  1024                     
   656                           ; #config settings
   657  0000                     
   658                           	psect	cinit
   659  00CA                     start_initialization:	
   660  00CA                     __initialization:	
   661                           
   662                           ; Initialize objects allocated to BANK1
   663  00CA  30B5               	movlw	low __pidataBANK1
   664  00CB  0084               	movwf	4
   665  00CC  308A               	movlw	(high __pidataBANK1)| (0+128)
   666  00CD  0085               	movwf	5
   667  00CE  30E5               	movlw	low __pdataBANK1
   668  00CF  0086               	movwf	6
   669  00D0  3000               	movlw	high __pdataBANK1
   670  00D1  0087               	movwf	7
   671  00D2  3004               	movlw	4
   672  00D3  318A  22BF  3180   	fcall	init_ram
   673                           
   674                           ; Initialize objects allocated to BANK2
   675  00D6  3031               	movlw	low __pidataBANK2
   676  00D7  0084               	movwf	4
   677  00D8  308D               	movlw	(high __pidataBANK2)| (0+128)
   678  00D9  0085               	movwf	5
   679  00DA  3020               	movlw	low __pdataBANK2
   680  00DB  0086               	movwf	6
   681  00DC  3001               	movlw	high __pdataBANK2
   682  00DD  0087               	movwf	7
   683  00DE  3050               	movlw	80
   684  00DF  318A  22BF  3180   	fcall	init_ram
   685                           
   686                           ; Initialize objects allocated to BANK3
   687  00E2  30B3               	movlw	low __pidataBANK3
   688  00E3  0084               	movwf	4
   689  00E4  3087               	movlw	(high __pidataBANK3)| (0+128)
   690  00E5  0085               	movwf	5
   691  00E6  30A0               	movlw	low __pdataBANK3
   692  00E7  0086               	movwf	6
   693  00E8  3001               	movlw	high __pdataBANK3
   694  00E9  0087               	movwf	7
   695  00EA  303A               	movlw	58
   696  00EB  318A  22BF  3180   	fcall	init_ram
   697                           
   698                           ; Clear objects allocated to COMMON
   699  00EE  01F5               	clrf	__pbssCOMMON& (0+127)
   700  00EF  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   701  00F0  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   702  00F1  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   703                           
   704                           ; Clear objects allocated to BANK0
   705  00F2  3060               	movlw	low __pbssBANK0
   706  00F3  0084               	movwf	4
   707  00F4  3000               	movlw	high __pbssBANK0
   708  00F5  0085               	movwf	5
   709  00F6  300C               	movlw	12
   710  00F7  318A  22B9  3180   	fcall	clear_ram0
   711                           
   712                           ; Clear objects allocated to BANK1
   713  00FA  30D5               	movlw	low __pbssBANK1
   714  00FB  0084               	movwf	4
   715  00FC  3000               	movlw	high __pbssBANK1
   716  00FD  0085               	movwf	5
   717  00FE  3010               	movlw	16
   718  00FF  318A  22B9         	fcall	clear_ram0
   719  0101                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  0101                     __end_of__initialization:	
   723  0101  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   724  0102  0020               	movlb	0
   725  0103  3184  2C10         	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMMON
   728  0075                     __pbssCOMMON:	
   729  0075                     _touchpanelReceivedataPosition:	
   730  0075                     	ds	2
   731  0077                     _mainReceivedDataPosition:	
   732  0077                     	ds	2
   733                           
   734                           	psect	bssBANK0
   735  0060                     __pbssBANK0:	
   736  0060                     _M3:	
   737  0060                     	ds	2
   738  0062                     _M2:	
   739  0062                     	ds	2
   740  0064                     _M1:	
   741  0064                     	ds	2
   742  0066                     _touchPanelDataReceived:	
   743  0066                     	ds	2
   744  0068                     _checkFlag:	
   745  0068                     	ds	2
   746  006A                     _mainDataReceived:	
   747  006A                     	ds	2
   748                           
   749                           	psect	bssBANK1
   750  00D5                     __pbssBANK1:	
   751  00D5                     _start_PWM_Generation_For_DIMMER:	
   752  00D5                     	ds	2
   753  00D7                     _Timer1L:	
   754  00D7                     	ds	2
   755  00D9                     _Timer1H:	
   756  00D9                     	ds	2
   757  00DB                     _M8:	
   758  00DB                     	ds	2
   759  00DD                     _M7:	
   760  00DD                     	ds	2
   761  00DF                     _M6:	
   762  00DF                     	ds	2
   763  00E1                     _M5:	
   764  00E1                     	ds	2
   765  00E3                     _M4:	
   766  00E3                     	ds	2
   767                           
   768                           	psect	dataBANK1
   769  00E5                     __pdataBANK1:	
   770  00E5                     applianceControl@F3896:	
   771  00E5                     	ds	2
   772  00E7                     applianceControl@F3894:	
   773  00E7                     	ds	2
   774                           
   775                           	psect	dataBANK2
   776  0120                     __pdataBANK2:	
   777  0120                     _mainReceivedDataBuffer:	
   778  0120                     	ds	18
   779  0132                     _touchpanleReceivedDatabuffer:	
   780  0132                     	ds	16
   781  0142                     _copy_parentalLockBuffer:	
   782  0142                     	ds	14
   783  0150                     _parentalLockBuffer:	
   784  0150                     	ds	14
   785  015E                     _tempReceivedDataBuffer:	
   786  015E                     	ds	10
   787  0168                     _tempReceiveTouchpanelDataBuffer:	
   788  0168                     	ds	8
   789                           
   790                           	psect	dataBANK3
   791  01A0                     __pdataBANK3:	
   792  01A0                     _currentStateBuffer:	
   793  01A0                     	ds	58
   794                           
   795                           	psect	inittext
   796  0ABF                     init_ram:	
   797  0ABF  00FE               	movwf	126
   798  0AC0                     initloop:	
   799  0AC0  0012               	moviw fsr0++
   800  0AC1  001E               	movwi fsr1++
   801  0AC2  0BFE               	decfsz	126,f
   802  0AC3  2AC0               	goto	initloop
   803  0AC4  3400               	retlw	0
   804                           
   805                           	psect	clrtext
   806  0AB9                     clear_ram0:	
   807                           ;	Called with FSR0 containing the base address, and
   808                           ;	WREG with the size to clear
   809                           
   810  0AB9  0064               	clrwdt	;clear the watchdog before getting into this loop
   811  0ABA                     clrloop0:	
   812  0ABA  0180               	clrf	0	;clear RAM location pointed to by FSR
   813  0ABB  3101               	addfsr 0,1
   814  0ABC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   815  0ABD  2ABA               	goto	clrloop0	;have we reached the end yet?
   816  0ABE  3400               	retlw	0	;all done for this memory range, return
   817                           
   818                           	psect	cstackBANK3
   819  01DA                     __pcstackBANK3:	
   820  01DA                     main@start_flag:	
   821                           
   822                           ; 2 bytes @ 0x0
   823  01DA                     	ds	2
   824  01DC                     main@end_flag:	
   825                           
   826                           ; 2 bytes @ 0x2
   827  01DC                     	ds	2
   828  01DE                     main@dataBufferCounter:	
   829                           
   830                           ; 2 bytes @ 0x4
   831  01DE                     	ds	2
   832  01E0                     main@dataBufferCounter_749:	
   833                           
   834                           ; 2 bytes @ 0x6
   835  01E0                     	ds	2
   836                           
   837                           	psect	cstackBANK1
   838  00A0                     __pcstackBANK1:	
   839  00A0                     applianceControl@ConvertStringIntoInt:	
   840                           
   841                           ; 2 bytes @ 0x0
   842  00A0                     	ds	2
   843  00A2                     applianceControl@remainder:	
   844                           
   845                           ; 2 bytes @ 0x2
   846  00A2                     	ds	2
   847  00A4                     applianceControl@start:	
   848                           
   849                           ; 2 bytes @ 0x4
   850  00A4                     	ds	2
   851  00A6                     applianceControl@end:	
   852                           
   853                           ; 2 bytes @ 0x6
   854  00A6                     	ds	2
   855  00A8                     applianceControl@HexlevelBuffer:	
   856                           
   857                           ; 5 bytes @ 0x8
   858  00A8                     	ds	5
   859  00AD                     applianceControl@CompleteClock:	
   860                           
   861                           ; 4 bytes @ 0xD
   862  00AD                     	ds	4
   863  00B1                     applianceControl@deno:	
   864                           
   865                           ; 3 bytes @ 0x11
   866  00B1                     	ds	3
   867  00B4                     applianceControl@clockPerCycle:	
   868                           
   869                           ; 3 bytes @ 0x14
   870  00B4                     	ds	3
   871  00B7                     applianceControl@Pulse:	
   872                           
   873                           ; 4 bytes @ 0x17
   874  00B7                     	ds	4
   875  00BB                     applianceControl@NeedPulse:	
   876                           
   877                           ; 4 bytes @ 0x1B
   878  00BB                     	ds	4
   879  00BF                     applianceControl@strH:	
   880                           
   881                           ; 3 bytes @ 0x1F
   882  00BF                     	ds	3
   883  00C2                     applianceControl@strL:	
   884                           
   885                           ; 3 bytes @ 0x22
   886  00C2                     	ds	3
   887  00C5                     applianceControl@charSwitchMSB:	
   888                           
   889                           ; 1 bytes @ 0x25
   890  00C5                     	ds	1
   891  00C6                     applianceControl@switchNumberStringBuffer:	
   892                           
   893                           ; 2 bytes @ 0x26
   894  00C6                     	ds	2
   895  00C8                     applianceControl@ConvertIntToTimeInMilisec:	
   896                           
   897                           ; 3 bytes @ 0x28
   898  00C8                     	ds	3
   899  00CB                     applianceControl@integerSpeed:	
   900                           
   901                           ; 2 bytes @ 0x2B
   902  00CB                     	ds	2
   903  00CD                     applianceControl@dimmerSpeedStringBuffer:	
   904                           
   905                           ; 2 bytes @ 0x2D
   906  00CD                     	ds	2
   907  00CF                     applianceControl@integerSwitchNumber:	
   908                           
   909                           ; 2 bytes @ 0x2F
   910  00CF                     	ds	2
   911  00D1                     applianceControl@currentStateBufferPositions:	
   912                           
   913                           ; 2 bytes @ 0x31
   914  00D1                     	ds	2
   915  00D3                     applianceControl@integerSwitchState:	
   916                           
   917                           ; 2 bytes @ 0x33
   918  00D3                     	ds	2
   919                           
   920                           	psect	cstackCOMMON
   921  0070                     __pcstackCOMMON:	
   922  0070                     ?_isdigit:	
   923  0070                     ?_sendAcknowledgment:	
   924                           ; 1 bit 
   925                           
   926  0070                     ?_errorsISR:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_GPIO_pin_Initialize:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_allPeripheralInit:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_ReceivingIndicationLedBlinking:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_copyReceivedDataBuffer:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_copyTouchpanelReceiveDataBuffer:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_clearAllPorts:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_pinINIT_extra:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_EUSART_Initialize:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_EUSART2_Initialize:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_TMR1_Initialize:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?_TMR2_Initialize:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?_CCP10_Initialize:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?_CCP8_Initialize:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?_isr:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?_main:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     errorsISR@errNum:	
   975                           ; 2 bytes @ 0x0
   976                           
   977                           
   978                           ; 2 bytes @ 0x0
   979  0070                     	ds	2
   980  0072                     ??_errorsISR:	
   981                           
   982                           ; 1 bytes @ 0x2
   983  0072                     	ds	1
   984  0073                     ??_isr:	
   985                           
   986                           ; 1 bytes @ 0x3
   987  0073                     	ds	2
   988  0075                     ??_GPIO_pin_Initialize:	
   989  0075                     ??_allPeripheralInit:	
   990                           ; 1 bytes @ 0x5
   991                           
   992  0075                     ??_clearAllPorts:	
   993                           ; 1 bytes @ 0x5
   994                           
   995  0075                     ??_pinINIT_extra:	
   996                           ; 1 bytes @ 0x5
   997                           
   998  0075                     ??_EUSART_Initialize:	
   999                           ; 1 bytes @ 0x5
  1000                           
  1001  0075                     ??_EUSART2_Initialize:	
  1002                           ; 1 bytes @ 0x5
  1003                           
  1004  0075                     ??_TMR1_Initialize:	
  1005                           ; 1 bytes @ 0x5
  1006                           
  1007  0075                     ??_TMR2_Initialize:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010  0075                     ??_CCP10_Initialize:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013  0075                     ??_CCP8_Initialize:	
  1014                           ; 1 bytes @ 0x5
  1015                           
  1016  0075                     ??_isdigit:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019  0075                     ??___wmul:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022                           
  1023                           	psect	cstackBANK0
  1024  0020                     __pcstackBANK0:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027  0020                     ?_strncpy:	
  1028  0020                     ??_sendAcknowledgment:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0020                     ??_ReceivingIndicationLedBlinking:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0020                     ??_copyReceivedDataBuffer:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0020                     ?_errorsMain:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0020                     ??_copyTouchpanelReceiveDataBuffer:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0020                     ?_sendFeedback_TO_Gateway:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0020                     ?_strlen:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0020                     ?___wmul:	
  1050                           ; 2 bytes @ 0x0
  1051                           
  1052  0020                     ?___lwdiv:	
  1053                           ; 2 bytes @ 0x0
  1054                           
  1055  0020                     ?___ftpack:	
  1056                           ; 2 bytes @ 0x0
  1057                           
  1058  0020                     sendFeedback_TO_Gateway@sw_status:	
  1059                           ; 3 bytes @ 0x0
  1060                           
  1061  0020                     _isdigit$1027:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0020                     strncpy@from:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0020                     errorsMain@errNum:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0020                     ___wmul@multiplier:	
  1071                           ; 2 bytes @ 0x0
  1072                           
  1073  0020                     ___lwdiv@divisor:	
  1074                           ; 2 bytes @ 0x0
  1075                           
  1076  0020                     ___ftpack@arg:	
  1077                           ; 2 bytes @ 0x0
  1078                           
  1079                           
  1080                           ; 3 bytes @ 0x0
  1081  0020                     	ds	1
  1082  0021                     ??_sendFeedback_TO_Gateway:	
  1083  0021                     isdigit@c:	
  1084                           ; 1 bytes @ 0x1
  1085                           
  1086  0021                     sendAcknowledgment@Tx_count:	
  1087                           ; 1 bytes @ 0x1
  1088                           
  1089  0021                     copyReceivedDataBuffer@dataBufferCounter:	
  1090                           ; 2 bytes @ 0x1
  1091                           
  1092  0021                     copyTouchpanelReceiveDataBuffer@dataBufferCounter:	
  1093                           ; 2 bytes @ 0x1
  1094                           
  1095  0021                     strncpy@size:	
  1096                           ; 2 bytes @ 0x1
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x1
  1100  0021                     	ds	1
  1101  0022                     ??_strlen:	
  1102  0022                     ??_errorsMain:	
  1103                           ; 1 bytes @ 0x2
  1104                           
  1105  0022                     sendFeedback_TO_Gateway@Switch_Num:	
  1106                           ; 1 bytes @ 0x2
  1107                           
  1108  0022                     ___wmul@multiplicand:	
  1109                           ; 1 bytes @ 0x2
  1110                           
  1111  0022                     ___lwdiv@dividend:	
  1112                           ; 2 bytes @ 0x2
  1113                           
  1114                           
  1115                           ; 2 bytes @ 0x2
  1116  0022                     	ds	1
  1117  0023                     ??_strncpy:	
  1118  0023                     ?_actiontouchPanel:	
  1119                           ; 1 bytes @ 0x3
  1120                           
  1121  0023                     actiontouchPanel@sw_status:	
  1122                           ; 1 bytes @ 0x3
  1123                           
  1124  0023                     sendAcknowledgment@currentStateBuffer:	
  1125                           ; 1 bytes @ 0x3
  1126                           
  1127  0023                     ___ftpack@exp:	
  1128                           ; 1 bytes @ 0x3
  1129                           
  1130                           
  1131                           ; 1 bytes @ 0x3
  1132  0023                     	ds	1
  1133  0024                     ??_actiontouchPanel:	
  1134  0024                     ??___lwdiv:	
  1135                           ; 1 bytes @ 0x4
  1136                           
  1137  0024                     ___ftpack@sign:	
  1138                           ; 1 bytes @ 0x4
  1139                           
  1140  0024                     strncpy@to:	
  1141                           ; 1 bytes @ 0x4
  1142                           
  1143  0024                     ___wmul@product:	
  1144                           ; 1 bytes @ 0x4
  1145                           
  1146                           
  1147                           ; 2 bytes @ 0x4
  1148  0024                     	ds	1
  1149  0025                     ??___ftpack:	
  1150  0025                     actiontouchPanel@ch_sw_num:	
  1151                           ; 1 bytes @ 0x5
  1152                           
  1153  0025                     ___lwdiv@counter:	
  1154                           ; 1 bytes @ 0x5
  1155                           
  1156  0025                     strncpy@cp:	
  1157                           ; 1 bytes @ 0x5
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0x5
  1161  0025                     	ds	1
  1162  0026                     ?_atoi:	
  1163  0026                     strlen@s:	
  1164                           ; 2 bytes @ 0x6
  1165                           
  1166  0026                     actiontouchPanel@SwNum:	
  1167                           ; 1 bytes @ 0x6
  1168                           
  1169  0026                     ___lwdiv@quotient:	
  1170                           ; 2 bytes @ 0x6
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x6
  1174  0026                     	ds	1
  1175  0027                     strlen@cp:	
  1176                           
  1177                           ; 1 bytes @ 0x7
  1178  0027                     	ds	1
  1179  0028                     ??_atoi:	
  1180  0028                     ?_sprintf:	
  1181                           ; 1 bytes @ 0x8
  1182                           
  1183  0028                     ?_hexadecimalToDecimal:	
  1184                           ; 2 bytes @ 0x8
  1185                           
  1186  0028                     ?___awtoft:	
  1187                           ; 2 bytes @ 0x8
  1188                           
  1189  0028                     ?___ftmul:	
  1190                           ; 3 bytes @ 0x8
  1191                           
  1192  0028                     actiontouchPanel@Switch_Num:	
  1193                           ; 3 bytes @ 0x8
  1194                           
  1195  0028                     sprintf@f:	
  1196                           ; 1 bytes @ 0x8
  1197                           
  1198  0028                     ___awtoft@c:	
  1199                           ; 2 bytes @ 0x8
  1200                           
  1201  0028                     ___ftmul@f1:	
  1202                           ; 2 bytes @ 0x8
  1203                           
  1204                           
  1205                           ; 3 bytes @ 0x8
  1206  0028                     	ds	1
  1207  0029                     actiontouchPanel@switch_status:	
  1208                           
  1209                           ; 2 bytes @ 0x9
  1210  0029                     	ds	1
  1211  002A                     ??_hexadecimalToDecimal:	
  1212  002A                     atoi@sign:	
  1213                           ; 1 bytes @ 0xA
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0xA
  1217  002A                     	ds	1
  1218  002B                     ??___awtoft:	
  1219  002B                     atoi@a:	
  1220                           ; 1 bytes @ 0xB
  1221                           
  1222  002B                     ___ftmul@f2:	
  1223                           ; 2 bytes @ 0xB
  1224                           
  1225                           
  1226                           ; 3 bytes @ 0xB
  1227  002B                     	ds	1
  1228  002C                     hexadecimalToDecimal@len:	
  1229                           
  1230                           ; 2 bytes @ 0xC
  1231  002C                     	ds	1
  1232  002D                     atoi@s:	
  1233  002D                     ___awtoft@sign:	
  1234                           ; 1 bytes @ 0xD
  1235                           
  1236                           
  1237                           ; 1 bytes @ 0xD
  1238  002D                     	ds	1
  1239  002E                     ??_sprintf:	
  1240  002E                     ??___ftmul:	
  1241                           ; 1 bytes @ 0xE
  1242                           
  1243  002E                     ?___ftdiv:	
  1244                           ; 1 bytes @ 0xE
  1245                           
  1246  002E                     hexadecimalToDecimal@dec_val:	
  1247                           ; 3 bytes @ 0xE
  1248                           
  1249  002E                     ___ftdiv@f2:	
  1250                           ; 2 bytes @ 0xE
  1251                           
  1252                           
  1253                           ; 3 bytes @ 0xE
  1254  002E                     	ds	2
  1255  0030                     hexadecimalToDecimal@base:	
  1256                           
  1257                           ; 2 bytes @ 0x10
  1258  0030                     	ds	1
  1259  0031                     ___ftdiv@f1:	
  1260                           
  1261                           ; 3 bytes @ 0x11
  1262  0031                     	ds	1
  1263  0032                     hexadecimalToDecimal@hexVal:	
  1264  0032                     sprintf@flag:	
  1265                           ; 1 bytes @ 0x12
  1266                           
  1267  0032                     ___ftmul@exp:	
  1268                           ; 1 bytes @ 0x12
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x12
  1272  0032                     	ds	1
  1273  0033                     sprintf@idx:	
  1274  0033                     hexadecimalToDecimal@i:	
  1275                           ; 1 bytes @ 0x13
  1276                           
  1277  0033                     ___ftmul@f3_as_product:	
  1278                           ; 2 bytes @ 0x13
  1279                           
  1280                           
  1281                           ; 3 bytes @ 0x13
  1282  0033                     	ds	1
  1283  0034                     ??___ftdiv:	
  1284  0034                     sprintf@ap:	
  1285                           ; 1 bytes @ 0x14
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0x14
  1289  0034                     	ds	1
  1290  0035                     sprintf@val:	
  1291                           
  1292                           ; 2 bytes @ 0x15
  1293  0035                     	ds	1
  1294  0036                     ___ftmul@cntr:	
  1295                           
  1296                           ; 1 bytes @ 0x16
  1297  0036                     	ds	1
  1298  0037                     sprintf@prec:	
  1299  0037                     ___ftmul@sign:	
  1300                           ; 1 bytes @ 0x17
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x17
  1304  0037                     	ds	1
  1305  0038                     sprintf@sp:	
  1306  0038                     ___ftdiv@cntr:	
  1307                           ; 1 bytes @ 0x18
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x18
  1311  0038                     	ds	1
  1312  0039                     sprintf@c:	
  1313  0039                     ___ftdiv@f3:	
  1314                           ; 1 bytes @ 0x19
  1315                           
  1316                           
  1317                           ; 3 bytes @ 0x19
  1318  0039                     	ds	3
  1319  003C                     ___ftdiv@exp:	
  1320                           
  1321                           ; 1 bytes @ 0x1C
  1322  003C                     	ds	1
  1323  003D                     ___ftdiv@sign:	
  1324                           
  1325                           ; 1 bytes @ 0x1D
  1326  003D                     	ds	1
  1327  003E                     ?___fttol:	
  1328  003E                     ___fttol@f1:	
  1329                           ; 4 bytes @ 0x1E
  1330                           
  1331                           
  1332                           ; 3 bytes @ 0x1E
  1333  003E                     	ds	4
  1334  0042                     ??___fttol:	
  1335                           
  1336                           ; 1 bytes @ 0x22
  1337  0042                     	ds	4
  1338  0046                     ___fttol@sign1:	
  1339                           
  1340                           ; 1 bytes @ 0x26
  1341  0046                     	ds	1
  1342  0047                     ___fttol@lval:	
  1343                           
  1344                           ; 4 bytes @ 0x27
  1345  0047                     	ds	4
  1346  004B                     ___fttol@exp1:	
  1347                           
  1348                           ; 1 bytes @ 0x2B
  1349  004B                     	ds	1
  1350  004C                     ?_applianceControl:	
  1351  004C                     applianceControl@charSwitchLSB:	
  1352                           ; 1 bytes @ 0x2C
  1353                           
  1354                           
  1355                           ; 1 bytes @ 0x2C
  1356  004C                     	ds	1
  1357  004D                     applianceControl@charSwitchSTATE:	
  1358                           
  1359                           ; 1 bytes @ 0x2D
  1360  004D                     	ds	1
  1361  004E                     applianceControl@chDimmerSpeedMSB:	
  1362                           
  1363                           ; 1 bytes @ 0x2E
  1364  004E                     	ds	1
  1365  004F                     applianceControl@chDimmerSpeedLSB:	
  1366                           
  1367                           ; 1 bytes @ 0x2F
  1368  004F                     	ds	1
  1369  0050                     applianceControl@charParentalControl:	
  1370                           
  1371                           ; 1 bytes @ 0x30
  1372  0050                     	ds	1
  1373  0051                     applianceControl@charFinalFrameState:	
  1374                           
  1375                           ; 1 bytes @ 0x31
  1376  0051                     	ds	1
  1377  0052                     ??_applianceControl:	
  1378                           
  1379                           ; 1 bytes @ 0x32
  1380  0052                     	ds	8
  1381  005A                     ??_main:	
  1382                           
  1383                           ; 1 bytes @ 0x3A
  1384  005A                     	ds	6
  1385                           
  1386                           	psect	maintext
  1387  0410                     __pmaintext:	
  1388 ;;
  1389 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1390 ;;
  1391 ;; *************** function _main *****************
  1392 ;; Defined at:
  1393 ;;		line 323 in file "main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  dataBufferCo    2    6[BANK3 ] int 
  1398 ;;  dataBufferCo    2    4[BANK3 ] int 
  1399 ;;  end_flag        2    2[BANK3 ] int 
  1400 ;;  start_flag      2    0[BANK3 ] int 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2  266[None  ] int 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : B1F/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0
  1412 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1413 ;;      Totals:         0       6       0       0       8       0       0       0       0       0       0
  1414 ;;Total ram usage:       14 bytes
  1415 ;; Hardware stack levels required when called:    5
  1416 ;; This function calls:
  1417 ;;		_GPIO_pin_Initialize
  1418 ;;		_ReceivingIndicationLedBlinking
  1419 ;;		_actiontouchPanel
  1420 ;;		_allPeripheralInit
  1421 ;;		_applianceControl
  1422 ;;		_copyReceivedDataBuffer
  1423 ;;		_copyTouchpanelReceiveDataBuffer
  1424 ;;		_errorsMain
  1425 ;; This function is called by:
  1426 ;;		Startup code after reset
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _main
  1432  0410                     _main:	
  1433                           
  1434                           ;main.c: 324: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1438  0410  3029               	movlw	41
  1439  0411  0020               	movlb	0	; select bank0
  1440  0412  00DB               	movwf	??_main+1
  1441  0413  3096               	movlw	150
  1442  0414  00DA               	movwf	??_main
  1443  0415  307F               	movlw	127
  1444  0416                     u3967:	
  1445  0416  0B89               	decfsz	9,f
  1446  0417  2C16               	goto	u3967
  1447  0418  0BDA               	decfsz	??_main,f
  1448  0419  2C16               	goto	u3967
  1449  041A  0BDB               	decfsz	??_main+1,f
  1450  041B  2C16               	goto	u3967
  1451                           
  1452                           ;main.c: 325: M1=0; M2=0; M3=0; M4=0; M5=0; M6=0; M7=0;M8=0;
  1453  041C  0020               	movlb	0	; select bank0
  1454  041D  01E4               	clrf	_M1
  1455  041E  01E5               	clrf	_M1+1
  1456  041F  01E2               	clrf	_M2
  1457  0420  01E3               	clrf	_M2+1
  1458  0421  01E0               	clrf	_M3
  1459  0422  01E1               	clrf	_M3+1
  1460  0423  0021               	movlb	1	; select bank1
  1461  0424  01E3               	clrf	_M4^(0+128)
  1462  0425  01E4               	clrf	(_M4+1)^(0+128)
  1463  0426  01E1               	clrf	_M5^(0+128)
  1464  0427  01E2               	clrf	(_M5+1)^(0+128)
  1465  0428  01DF               	clrf	_M6^(0+128)
  1466  0429  01E0               	clrf	(_M6+1)^(0+128)
  1467  042A  01DD               	clrf	_M7^(0+128)
  1468  042B  01DE               	clrf	(_M7+1)^(0+128)
  1469  042C  01DB               	clrf	_M8^(0+128)
  1470  042D  01DC               	clrf	(_M8+1)^(0+128)
  1471                           
  1472                           ;main.c: 326: PORTFbits.RF3 = 0;
  1473  042E  0025               	movlb	5	; select bank5
  1474  042F  118C               	bcf	12,3	;volatile
  1475                           
  1476                           ;main.c: 327: GPIO_pin_Initialize();
  1477  0430  318C  240D  3184   	fcall	_GPIO_pin_Initialize
  1478                           
  1479                           ;main.c: 328: allPeripheralInit();
  1480  0433  3187  27ED  3184   	fcall	_allPeripheralInit
  1481  0436                     l3832:	
  1482                           ;main.c: 330: while(1){
  1483                           
  1484                           
  1485                           ;main.c: 331: if(mainDataReceived==1){
  1486  0436  0020               	movlb	0	; select bank0
  1487  0437  036A               	decf	_mainDataReceived,w
  1488  0438  046B               	iorwf	_mainDataReceived+1,w
  1489  0439  1D03               	btfss	3,2
  1490  043A  2CB9               	goto	l3868
  1491                           
  1492                           ;main.c: 332: mainDataReceived=0;
  1493  043B  01EA               	clrf	_mainDataReceived
  1494  043C  01EB               	clrf	_mainDataReceived+1
  1495                           
  1496                           ;main.c: 333: if(mainReceivedDataBuffer[0]=='%' && mainReceivedDataBuffer[1]=='%' && mai
      +                          nReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]=='@'){
  1497  043D  3025               	movlw	37
  1498  043E  0022               	movlb	2	; select bank2
  1499  043F  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  1500  0440  1D03               	btfss	3,2
  1501  0441  2C7E               	goto	l3850
  1502  0442  3025               	movlw	37
  1503  0443  0621               	xorwf	(_mainReceivedDataBuffer^(0+256)+1),w
  1504  0444  1D03               	btfss	3,2
  1505  0445  2C7E               	goto	l3850
  1506  0446  3040               	movlw	64
  1507  0447  062E               	xorwf	(_mainReceivedDataBuffer^(0+256)+14),w
  1508  0448  1D03               	btfss	3,2
  1509  0449  2C7E               	goto	l3850
  1510  044A  3040               	movlw	64
  1511  044B  062F               	xorwf	(_mainReceivedDataBuffer^(0+256)+15),w
  1512  044C  1D03               	btfss	3,2
  1513  044D  2C7E               	goto	l3850
  1514                           
  1515                           ;main.c: 334: ReceivingIndicationLedBlinking();
  1516  044E  318B  230C  3184   	fcall	_ReceivingIndicationLedBlinking
  1517                           
  1518                           ;main.c: 335: copyReceivedDataBuffer();
  1519  0451  318C  2463  3184   	fcall	_copyReceivedDataBuffer
  1520                           
  1521                           ;main.c: 336: applianceControl(tempReceivedDataBuffer[0],
  1522                           ;main.c: 337: tempReceivedDataBuffer[1],
  1523                           ;main.c: 338: tempReceivedDataBuffer[2],
  1524                           ;main.c: 339: tempReceivedDataBuffer[3],
  1525                           ;main.c: 340: tempReceivedDataBuffer[4],
  1526                           ;main.c: 341: tempReceivedDataBuffer[5],
  1527                           ;main.c: 342: tempReceivedDataBuffer[6]);
  1528  0454  0022               	movlb	2	; select bank2
  1529  0455  085F               	movf	(_tempReceivedDataBuffer^(0+256)+1),w
  1530  0456  0020               	movlb	0	; select bank0
  1531  0457  00DA               	movwf	??_main
  1532  0458  085A               	movf	??_main,w
  1533  0459  00CC               	movwf	applianceControl@charSwitchLSB
  1534  045A  0022               	movlb	2	; select bank2
  1535  045B  0860               	movf	(_tempReceivedDataBuffer^(0+256)+2),w
  1536  045C  0020               	movlb	0	; select bank0
  1537  045D  00DB               	movwf	??_main+1
  1538  045E  085B               	movf	??_main+1,w
  1539  045F  00CD               	movwf	applianceControl@charSwitchSTATE
  1540  0460  0022               	movlb	2	; select bank2
  1541  0461  0861               	movf	(_tempReceivedDataBuffer^(0+256)+3),w
  1542  0462  0020               	movlb	0	; select bank0
  1543  0463  00DC               	movwf	??_main+2
  1544  0464  085C               	movf	??_main+2,w
  1545  0465  00CE               	movwf	applianceControl@chDimmerSpeedMSB
  1546  0466  0022               	movlb	2	; select bank2
  1547  0467  0862               	movf	(_tempReceivedDataBuffer^(0+256)+4),w
  1548  0468  0020               	movlb	0	; select bank0
  1549  0469  00DD               	movwf	??_main+3
  1550  046A  085D               	movf	??_main+3,w
  1551  046B  00CF               	movwf	applianceControl@chDimmerSpeedLSB
  1552  046C  0022               	movlb	2	; select bank2
  1553  046D  0863               	movf	(_tempReceivedDataBuffer^(0+256)+5),w
  1554  046E  0020               	movlb	0	; select bank0
  1555  046F  00DE               	movwf	??_main+4
  1556  0470  085E               	movf	??_main+4,w
  1557  0471  00D0               	movwf	applianceControl@charParentalControl
  1558  0472  0022               	movlb	2	; select bank2
  1559  0473  0864               	movf	(_tempReceivedDataBuffer^(0+256)+6),w
  1560  0474  0020               	movlb	0	; select bank0
  1561  0475  00DF               	movwf	??_main+5
  1562  0476  085F               	movf	??_main+5,w
  1563  0477  00D1               	movwf	applianceControl@charFinalFrameState
  1564  0478  0022               	movlb	2	; select bank2
  1565  0479  085E               	movf	_tempReceivedDataBuffer^(0+256),w
  1566  047A  3181  2105  3184   	fcall	_applianceControl
  1567                           
  1568                           ;main.c: 344: }
  1569  047D  2CB9               	goto	l3868
  1570  047E                     l3850:	
  1571                           
  1572                           ;main.c: 345: else
  1573                           ;main.c: 346: {
  1574                           ;main.c: 348: errorsMain("ERLS");
  1575  047E  3024               	movlw	low (STR_7| (0+32768))
  1576  047F  0020               	movlb	0	; select bank0
  1577  0480  00A0               	movwf	errorsMain@errNum
  1578  0481  3090               	movlw	high (STR_7| (0+32768))
  1579  0482  00A1               	movwf	errorsMain@errNum+1
  1580  0483  318B  2373  3184   	fcall	_errorsMain
  1581                           
  1582                           ;main.c: 349: RC1STAbits.SPEN=0;
  1583  0486  0023               	movlb	3	; select bank3
  1584  0487  139D               	bcf	29,7	;volatile
  1585                           
  1586                           ;main.c: 350: RC1STAbits.CREN = 0;
  1587  0488  121D               	bcf	29,4	;volatile
  1588                           
  1589                           ;main.c: 351: for(int dataBufferCounter = 0; dataBufferCounter< 15; dataBufferCounter++)
  1590  0489  01DE               	clrf	main@dataBufferCounter^(0+384)
  1591  048A  01DF               	clrf	(main@dataBufferCounter+1)^(0+384)
  1592  048B  085F               	movf	(main@dataBufferCounter+1)^(0+384),w
  1593  048C  3A80               	xorlw	128
  1594  048D  0020               	movlb	0	; select bank0
  1595  048E  00DA               	movwf	??_main
  1596  048F  3080               	movlw	128
  1597  0490  025A               	subwf	??_main,w
  1598  0491  1D03               	skipz
  1599  0492  2C96               	goto	u3845
  1600  0493  300F               	movlw	15
  1601  0494  0023               	movlb	3	; select bank3
  1602  0495  025E               	subwf	main@dataBufferCounter^(0+384),w
  1603  0496                     u3845:	
  1604  0496  1803               	btfsc	3,0
  1605  0497  2CB6               	goto	l272
  1606  0498                     l3862:	
  1607                           
  1608                           ;main.c: 352: {
  1609                           ;main.c: 353: mainReceivedDataBuffer[dataBufferCounter] = '#';
  1610  0498  3023               	movlw	35
  1611  0499  0020               	movlb	0	; select bank0
  1612  049A  00DA               	movwf	??_main
  1613  049B  0023               	movlb	3	; select bank3
  1614  049C  085E               	movf	main@dataBufferCounter^(0+384),w
  1615  049D  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  1616  049E  0086               	movwf	6
  1617  049F  3001               	movlw	1	; select bank2/3
  1618  04A0  0087               	movwf	7
  1619  04A1  0020               	movlb	0	; select bank0
  1620  04A2  085A               	movf	??_main,w
  1621  04A3  0081               	movwf	1
  1622  04A4  3001               	movlw	1
  1623  04A5  0023               	movlb	3	; select bank3
  1624  04A6  07DE               	addwf	main@dataBufferCounter^(0+384),f
  1625  04A7  3000               	movlw	0
  1626  04A8  3DDF               	addwfc	(main@dataBufferCounter+1)^(0+384),f
  1627  04A9  085F               	movf	(main@dataBufferCounter+1)^(0+384),w
  1628  04AA  3A80               	xorlw	128
  1629  04AB  0020               	movlb	0	; select bank0
  1630  04AC  00DA               	movwf	??_main
  1631  04AD  3080               	movlw	128
  1632  04AE  025A               	subwf	??_main,w
  1633  04AF  1D03               	skipz
  1634  04B0  2CB4               	goto	u3855
  1635  04B1  300F               	movlw	15
  1636  04B2  0023               	movlb	3	; select bank3
  1637  04B3  025E               	subwf	main@dataBufferCounter^(0+384),w
  1638  04B4                     u3855:	
  1639  04B4  1C03               	skipc
  1640  04B5  2C98               	goto	l3862
  1641  04B6                     l272:	
  1642                           
  1643                           ;main.c: 354: }
  1644                           ;main.c: 355: RC1STAbits.CREN = 1;
  1645  04B6  0023               	movlb	3	; select bank3
  1646  04B7  161D               	bsf	29,4	;volatile
  1647                           
  1648                           ;main.c: 356: RC1STAbits.SPEN=1;
  1649  04B8  179D               	bsf	29,7	;volatile
  1650  04B9                     l3868:	
  1651                           
  1652                           ;main.c: 357: }
  1653                           ;main.c: 358: }
  1654                           ;main.c: 360: if(touchPanelDataReceived == 1)
  1655  04B9  0020               	movlb	0	; select bank0
  1656  04BA  0366               	decf	_touchPanelDataReceived,w	;volatile
  1657  04BB  0467               	iorwf	_touchPanelDataReceived+1,w	;volatile
  1658  04BC  1D03               	btfss	3,2
  1659  04BD  2C36               	goto	l3832
  1660                           
  1661                           ;main.c: 361: {
  1662                           ;main.c: 362: touchPanelDataReceived = 0;
  1663  04BE  01E6               	clrf	_touchPanelDataReceived	;volatile
  1664  04BF  01E7               	clrf	_touchPanelDataReceived+1	;volatile
  1665                           
  1666                           ;main.c: 363: int start_flag = 0;
  1667  04C0  0023               	movlb	3	; select bank3
  1668  04C1  01DA               	clrf	main@start_flag^(0+384)
  1669  04C2  01DB               	clrf	(main@start_flag+1)^(0+384)
  1670                           
  1671                           ;main.c: 364: int end_flag = 0;
  1672  04C3  01DC               	clrf	main@end_flag^(0+384)
  1673  04C4  01DD               	clrf	(main@end_flag+1)^(0+384)
  1674                           
  1675                           ;main.c: 365: if(touchpanleReceivedDatabuffer[0] == '(' && touchpanleReceivedDatabuffer[
      +                          7] == ')')
  1676  04C5  3028               	movlw	40
  1677  04C6  0022               	movlb	2	; select bank2
  1678  04C7  0632               	xorwf	_touchpanleReceivedDatabuffer^(0+256),w
  1679  04C8  1D03               	btfss	3,2
  1680  04C9  2CFD               	goto	l3896
  1681  04CA  3029               	movlw	41
  1682  04CB  0639               	xorwf	(_touchpanleReceivedDatabuffer^(0+256)+7),w
  1683  04CC  1D03               	btfss	3,2
  1684  04CD  2CFD               	goto	l3896
  1685                           
  1686                           ;main.c: 366: {
  1687                           ;main.c: 368: if(touchpanleReceivedDatabuffer[0] == '(' && start_flag == 0)
  1688  04CE  3028               	movlw	40
  1689  04CF  0632               	xorwf	_touchpanleReceivedDatabuffer^(0+256),w
  1690  04D0  1D03               	btfss	3,2
  1691  04D1  2CDB               	goto	l3882
  1692  04D2  0023               	movlb	3	; select bank3
  1693  04D3  085A               	movf	main@start_flag^(0+384),w
  1694  04D4  045B               	iorwf	(main@start_flag+1)^(0+384),w
  1695  04D5  1D03               	btfss	3,2
  1696  04D6  2CDB               	goto	l3882
  1697                           
  1698                           ;main.c: 369: {
  1699                           ;main.c: 370: end_flag =1;
  1700  04D7  3001               	movlw	1
  1701  04D8  00DC               	movwf	main@end_flag^(0+384)
  1702  04D9  3000               	movlw	0
  1703  04DA  00DD               	movwf	(main@end_flag^(0+384)+1)
  1704  04DB                     l3882:	
  1705                           
  1706                           ;main.c: 372: }
  1707                           ;main.c: 373: if(touchpanleReceivedDatabuffer[7] == ')' && end_flag ==1)
  1708  04DB  3029               	movlw	41
  1709  04DC  0022               	movlb	2	; select bank2
  1710  04DD  0639               	xorwf	(_touchpanleReceivedDatabuffer^(0+256)+7),w
  1711  04DE  1D03               	btfss	3,2
  1712  04DF  2C36               	goto	l3832
  1713  04E0  0023               	movlb	3	; select bank3
  1714  04E1  035C               	decf	main@end_flag^(0+384),w
  1715  04E2  045D               	iorwf	(main@end_flag+1)^(0+384),w
  1716  04E3  1D03               	btfss	3,2
  1717  04E4  2C36               	goto	l3832
  1718                           
  1719                           ;main.c: 374: {
  1720                           ;main.c: 375: copyTouchpanelReceiveDataBuffer();
  1721  04E5  318C  2495  3184   	fcall	_copyTouchpanelReceiveDataBuffer
  1722                           
  1723                           ;main.c: 376: if(tempReceiveTouchpanelDataBuffer[0] != '@')
  1724  04E8  3040               	movlw	64
  1725  04E9  0022               	movlb	2	; select bank2
  1726  04EA  0668               	xorwf	_tempReceiveTouchpanelDataBuffer^(0+256),w
  1727  04EB  1903               	btfsc	3,2
  1728  04EC  2C36               	goto	l3832
  1729                           
  1730                           ;main.c: 377: {
  1731                           ;main.c: 378: actiontouchPanel(tempReceiveTouchpanelDataBuffer[0],tempReceiveTouchpanelD
      +                          ataBuffer[1]);
  1732  04ED  0869               	movf	(_tempReceiveTouchpanelDataBuffer^(0+256)+1),w
  1733  04EE  0020               	movlb	0	; select bank0
  1734  04EF  00DA               	movwf	??_main
  1735  04F0  085A               	movf	??_main,w
  1736  04F1  00A3               	movwf	actiontouchPanel@sw_status
  1737  04F2  0022               	movlb	2	; select bank2
  1738  04F3  0868               	movf	_tempReceiveTouchpanelDataBuffer^(0+256),w
  1739  04F4  3185  253A  3184   	fcall	_actiontouchPanel
  1740                           
  1741                           ;main.c: 379: start_flag = 0;
  1742  04F7  0023               	movlb	3	; select bank3
  1743  04F8  01DA               	clrf	main@start_flag^(0+384)
  1744  04F9  01DB               	clrf	(main@start_flag+1)^(0+384)
  1745                           
  1746                           ;main.c: 380: end_flag = 0;
  1747  04FA  01DC               	clrf	main@end_flag^(0+384)
  1748  04FB  01DD               	clrf	(main@end_flag+1)^(0+384)
  1749                           
  1750                           ;main.c: 381: }
  1751                           ;main.c: 383: }
  1752                           ;main.c: 385: }
  1753  04FC  2C36               	goto	l3832
  1754  04FD                     l3896:	
  1755                           
  1756                           ;main.c: 386: else
  1757                           ;main.c: 387: {
  1758                           ;main.c: 389: errorsMain("ERLS");
  1759  04FD  3024               	movlw	low (STR_7| (0+32768))
  1760  04FE  0020               	movlb	0	; select bank0
  1761  04FF  00A0               	movwf	errorsMain@errNum
  1762  0500  3090               	movlw	high (STR_7| (0+32768))
  1763  0501  00A1               	movwf	errorsMain@errNum+1
  1764  0502  318B  2373  3184   	fcall	_errorsMain
  1765                           
  1766                           ;main.c: 390: RC2STAbits.SPEN = 0;
  1767  0505  0029               	movlb	9	; select bank9
  1768  0506  1395               	bcf	21,7	;volatile
  1769                           
  1770                           ;main.c: 391: RC2STAbits.CREN = 0;
  1771  0507  1215               	bcf	21,4	;volatile
  1772                           
  1773                           ;main.c: 392: for(int dataBufferCounter = 0; dataBufferCounter< 8; dataBufferCounter++)
  1774  0508  0023               	movlb	3	; select bank3
  1775  0509  01E0               	clrf	main@dataBufferCounter_749^(0+384)
  1776  050A  01E1               	clrf	(main@dataBufferCounter_749+1)^(0+384)
  1777  050B  0861               	movf	(main@dataBufferCounter_749+1)^(0+384),w
  1778  050C  3A80               	xorlw	128
  1779  050D  0020               	movlb	0	; select bank0
  1780  050E  00DA               	movwf	??_main
  1781  050F  3080               	movlw	128
  1782  0510  025A               	subwf	??_main,w
  1783  0511  1D03               	skipz
  1784  0512  2D16               	goto	u3945
  1785  0513  3008               	movlw	8
  1786  0514  0023               	movlb	3	; select bank3
  1787  0515  0260               	subwf	main@dataBufferCounter_749^(0+384),w
  1788  0516                     u3945:	
  1789  0516  1803               	btfsc	3,0
  1790  0517  2D36               	goto	l280
  1791  0518                     l3908:	
  1792                           
  1793                           ;main.c: 393: {
  1794                           ;main.c: 394: touchpanleReceivedDatabuffer[dataBufferCounter] = '#';
  1795  0518  3023               	movlw	35
  1796  0519  0020               	movlb	0	; select bank0
  1797  051A  00DA               	movwf	??_main
  1798  051B  0023               	movlb	3	; select bank3
  1799  051C  0860               	movf	main@dataBufferCounter_749^(0+384),w
  1800  051D  3E32               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  1801  051E  0086               	movwf	6
  1802  051F  3001               	movlw	1	; select bank2/3
  1803  0520  0087               	movwf	7
  1804  0521  0020               	movlb	0	; select bank0
  1805  0522  085A               	movf	??_main,w
  1806  0523  0081               	movwf	1
  1807  0524  3001               	movlw	1
  1808  0525  0023               	movlb	3	; select bank3
  1809  0526  07E0               	addwf	main@dataBufferCounter_749^(0+384),f
  1810  0527  3000               	movlw	0
  1811  0528  3DE1               	addwfc	(main@dataBufferCounter_749+1)^(0+384),f
  1812  0529  0861               	movf	(main@dataBufferCounter_749+1)^(0+384),w
  1813  052A  3A80               	xorlw	128
  1814  052B  0020               	movlb	0	; select bank0
  1815  052C  00DA               	movwf	??_main
  1816  052D  3080               	movlw	128
  1817  052E  025A               	subwf	??_main,w
  1818  052F  1D03               	skipz
  1819  0530  2D34               	goto	u3955
  1820  0531  3008               	movlw	8
  1821  0532  0023               	movlb	3	; select bank3
  1822  0533  0260               	subwf	main@dataBufferCounter_749^(0+384),w
  1823  0534                     u3955:	
  1824  0534  1C03               	skipc
  1825  0535  2D18               	goto	l3908
  1826  0536                     l280:	
  1827                           
  1828                           ;main.c: 395: }
  1829                           ;main.c: 396: RC2STAbits.CREN = 1;
  1830  0536  0029               	movlb	9	; select bank9
  1831  0537  1615               	bsf	21,4	;volatile
  1832                           
  1833                           ;main.c: 397: RC2STAbits.SPEN=1;
  1834  0538  1795               	bsf	21,7	;volatile
  1835  0539  2C36               	goto	l3832
  1836  053A                     __end_of_main:	
  1837                           
  1838                           	psect	text1
  1839  0B73                     __ptext1:	
  1840 ;; *************** function _errorsMain *****************
  1841 ;; Defined at:
  1842 ;;		line 1076 in file "main.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  errNum          2    0[BANK0 ] PTR const unsigned char 
  1845 ;;		 -> STR_8(5), STR_7(5), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  1859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  1861 ;;Total ram usage:        3 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _errorsMain
  1873  0B73                     _errorsMain:	
  1874  0B73                     l3710:	
  1875                           ;main.c: 1078: while(*errNum != (0))
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _errorsMain: [wreg-fsr0h+status,2+status,0+pclath]
  1879                           
  1880  0B73  0020               	movlb	0	; select bank0
  1881  0B74  0820               	movf	errorsMain@errNum,w
  1882  0B75  0084               	movwf	4
  1883  0B76  0821               	movf	errorsMain@errNum+1,w
  1884  0B77  0085               	movwf	5
  1885  0B78  0012               	moviw fsr0++
  1886  0B79  1903               	btfsc	3,2
  1887  0B7A  0008               	return
  1888  0B7B                     l352:	
  1889                           ;main.c: 1079: {
  1890                           ;main.c: 1080: while (!TX1STAbits.TRMT);
  1891                           
  1892  0B7B  0023               	movlb	3	; select bank3
  1893  0B7C  1C9E               	btfss	30,1	;volatile
  1894  0B7D  2B7B               	goto	l352
  1895                           
  1896                           ;main.c: 1081: TX1REG = *errNum;
  1897  0B7E  0020               	movlb	0	; select bank0
  1898  0B7F  0820               	movf	errorsMain@errNum,w
  1899  0B80  0084               	movwf	4
  1900  0B81  0821               	movf	errorsMain@errNum+1,w
  1901  0B82  0085               	movwf	5
  1902  0B83  0800               	movf	0,w	;code access
  1903  0B84  0023               	movlb	3	; select bank3
  1904  0B85  009A               	movwf	26	;volatile
  1905                           
  1906                           ;main.c: 1082: *errNum++;
  1907  0B86  3001               	movlw	1
  1908  0B87  0020               	movlb	0	; select bank0
  1909  0B88  07A0               	addwf	errorsMain@errNum,f
  1910  0B89  3000               	movlw	0
  1911  0B8A  3DA1               	addwfc	errorsMain@errNum+1,f
  1912  0B8B  2B73               	goto	l3710
  1913  0B8C                     __end_of_errorsMain:	
  1914                           
  1915                           	psect	text2
  1916  0C95                     __ptext2:	
  1917 ;; *************** function _copyTouchpanelReceiveDataBuffer *****************
  1918 ;; Defined at:
  1919 ;;		line 1130 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  dataBufferCo    2    1[BANK0 ] int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        3 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    2
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _copyTouchpanelReceiveDataBuffer
  1949  0C95                     _copyTouchpanelReceiveDataBuffer:	
  1950                           
  1951                           ;main.c: 1132: int dataBufferCounter=2;
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _copyTouchpanelReceiveDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1955  0C95  3002               	movlw	2
  1956  0C96  0020               	movlb	0	; select bank0
  1957  0C97  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  1958  0C98  3000               	movlw	0
  1959  0C99  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  1960                           
  1961                           ;main.c: 1133: for(dataBufferCounter=2; dataBufferCounter<5;dataBufferCounter++)
  1962  0C9A  3002               	movlw	2
  1963  0C9B  00A1               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter
  1964  0C9C  3000               	movlw	0
  1965  0C9D  00A2               	movwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1
  1966  0C9E                     L1:	
  1967  0C9E  0822               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,w
  1968  0C9F  3A80               	xorlw	128
  1969  0CA0  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1970  0CA1  3080               	movlw	128
  1971  0CA2  0220               	subwf	??_copyTouchpanelReceiveDataBuffer,w
  1972  0CA3  1D03               	skipz
  1973  0CA4  2CA7               	goto	u3625
  1974  0CA5  3005               	movlw	5
  1975  0CA6  0221               	subwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1976  0CA7                     u3625:	
  1977  0CA7  1803               	btfsc	3,0
  1978  0CA8  0008               	return
  1979                           
  1980                           ;main.c: 1134: {
  1981                           ;main.c: 1135: tempReceiveTouchpanelDataBuffer[dataBufferCounter-2] = touchpanleReceived
      +                          Databuffer[dataBufferCounter];
  1982  0CA9  0020               	movlb	0	; select bank0
  1983  0CAA  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1984  0CAB  3E32               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  1985  0CAC  0086               	movwf	6
  1986  0CAD  3001               	movlw	1	; select bank2/3
  1987  0CAE  0087               	movwf	7
  1988  0CAF  0801               	movf	1,w
  1989  0CB0  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  1990  0CB1  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  1991  0CB2  3EFE               	addlw	254
  1992  0CB3  3E68               	addlw	(low (_tempReceiveTouchpanelDataBuffer| (0+256)))& (0+255)
  1993  0CB4  0086               	movwf	6
  1994  0CB5  3001               	movlw	1	; select bank2/3
  1995  0CB6  0087               	movwf	7
  1996  0CB7  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  1997  0CB8  0081               	movwf	1
  1998                           
  1999                           ;main.c: 1136: touchpanleReceivedDatabuffer[dataBufferCounter] = "#";
  2000  0CB9  303B               	movlw	(low (STR_9| (0+32768)))& (0+255)
  2001  0CBA  00A0               	movwf	??_copyTouchpanelReceiveDataBuffer
  2002  0CBB  0821               	movf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,w
  2003  0CBC  3E32               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  2004  0CBD  0086               	movwf	6
  2005  0CBE  3001               	movlw	1	; select bank2/3
  2006  0CBF  0087               	movwf	7
  2007  0CC0  0820               	movf	??_copyTouchpanelReceiveDataBuffer,w
  2008  0CC1  0081               	movwf	1
  2009  0CC2  3001               	movlw	1
  2010  0CC3  07A1               	addwf	copyTouchpanelReceiveDataBuffer@dataBufferCounter,f
  2011  0CC4  3000               	movlw	0
  2012  0CC5  3DA2               	addwfc	copyTouchpanelReceiveDataBuffer@dataBufferCounter+1,f
  2013  0CC6  2C9E               	goto	L1
  2014  0CC7                     __end_of_copyTouchpanelReceiveDataBuffer:	
  2015                           
  2016                           	psect	text3
  2017  0C63                     __ptext3:	
  2018 ;; *************** function _copyReceivedDataBuffer *****************
  2019 ;; Defined at:
  2020 ;;		line 1122 in file "main.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  dataBufferCo    2    1[BANK0 ] int 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  2037 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        3 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    2
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _copyReceivedDataBuffer
  2050  0C63                     _copyReceivedDataBuffer:	
  2051                           
  2052                           ;main.c: 1123: int dataBufferCounter=2;
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _copyReceivedDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2056  0C63  3002               	movlw	2
  2057  0C64  0020               	movlb	0	; select bank0
  2058  0C65  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  2059  0C66  3000               	movlw	0
  2060  0C67  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  2061                           
  2062                           ;main.c: 1124: for(dataBufferCounter=2;dataBufferCounter<9;dataBufferCounter++){
  2063  0C68  3002               	movlw	2
  2064  0C69  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  2065  0C6A  3000               	movlw	0
  2066  0C6B  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  2067  0C6C                     L2:	
  2068  0C6C  0822               	movf	copyReceivedDataBuffer@dataBufferCounter+1,w
  2069  0C6D  3A80               	xorlw	128
  2070  0C6E  00A0               	movwf	??_copyReceivedDataBuffer
  2071  0C6F  3080               	movlw	128
  2072  0C70  0220               	subwf	??_copyReceivedDataBuffer,w
  2073  0C71  1D03               	skipz
  2074  0C72  2C75               	goto	u3585
  2075  0C73  3009               	movlw	9
  2076  0C74  0221               	subwf	copyReceivedDataBuffer@dataBufferCounter,w
  2077  0C75                     u3585:	
  2078  0C75  1803               	btfsc	3,0
  2079  0C76  0008               	return
  2080                           
  2081                           ;main.c: 1125: tempReceivedDataBuffer[dataBufferCounter-2]=mainReceivedDataBuffer[dataBu
      +                          fferCounter];
  2082  0C77  0020               	movlb	0	; select bank0
  2083  0C78  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  2084  0C79  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  2085  0C7A  0086               	movwf	6
  2086  0C7B  3001               	movlw	1	; select bank2/3
  2087  0C7C  0087               	movwf	7
  2088  0C7D  0801               	movf	1,w
  2089  0C7E  00A0               	movwf	??_copyReceivedDataBuffer
  2090  0C7F  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  2091  0C80  3EFE               	addlw	254
  2092  0C81  3E5E               	addlw	(low (_tempReceivedDataBuffer| (0+256)))& (0+255)
  2093  0C82  0086               	movwf	6
  2094  0C83  3001               	movlw	1	; select bank2/3
  2095  0C84  0087               	movwf	7
  2096  0C85  0820               	movf	??_copyReceivedDataBuffer,w
  2097  0C86  0081               	movwf	1
  2098                           
  2099                           ;main.c: 1126: mainReceivedDataBuffer[dataBufferCounter]='#';
  2100  0C87  3023               	movlw	35
  2101  0C88  00A0               	movwf	??_copyReceivedDataBuffer
  2102  0C89  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  2103  0C8A  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  2104  0C8B  0086               	movwf	6
  2105  0C8C  3001               	movlw	1	; select bank2/3
  2106  0C8D  0087               	movwf	7
  2107  0C8E  0820               	movf	??_copyReceivedDataBuffer,w
  2108  0C8F  0081               	movwf	1
  2109  0C90  3001               	movlw	1
  2110  0C91  07A1               	addwf	copyReceivedDataBuffer@dataBufferCounter,f
  2111  0C92  3000               	movlw	0
  2112  0C93  3DA2               	addwfc	copyReceivedDataBuffer@dataBufferCounter+1,f
  2113  0C94  2C6C               	goto	L2
  2114  0C95                     __end_of_copyReceivedDataBuffer:	
  2115                           
  2116                           	psect	text4
  2117  0105                     __ptext4:	
  2118 ;; *************** function _applianceControl *****************
  2119 ;; Defined at:
  2120 ;;		line 3 in file "applicationcontrol.h"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  charSwitchMS    1    wreg     unsigned char 
  2123 ;;  charSwitchLS    1   44[BANK0 ] unsigned char 
  2124 ;;  charSwitchST    1   45[BANK0 ] unsigned char 
  2125 ;;  chDimmerSpee    1   46[BANK0 ] unsigned char 
  2126 ;;  chDimmerSpee    1   47[BANK0 ] unsigned char 
  2127 ;;  charParental    1   48[BANK0 ] unsigned char 
  2128 ;;  charFinalFra    1   49[BANK0 ] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  charSwitchMS    1   37[BANK1 ] unsigned char 
  2131 ;;  HexlevelBuff    5    8[BANK1 ] unsigned char [5]
  2132 ;;  NeedPulse       4   27[BANK1 ] unsigned long 
  2133 ;;  Pulse           4   23[BANK1 ] unsigned long 
  2134 ;;  CompleteCloc    4   13[BANK1 ] unsigned long 
  2135 ;;  strL            3   34[BANK1 ] unsigned char [3]
  2136 ;;  strH            3   31[BANK1 ] unsigned char [3]
  2137 ;;  ConvertIntTo    3   40[BANK1 ] float 
  2138 ;;  clockPerCycl    3   20[BANK1 ] float 
  2139 ;;  deno            3   17[BANK1 ] float 
  2140 ;;  integerSwitc    2   51[BANK1 ] int 
  2141 ;;  dimmerSpeedS    2   45[BANK1 ] unsigned char [2]
  2142 ;;  currentState    2   49[BANK1 ] int 
  2143 ;;  integerSwitc    2   47[BANK1 ] int 
  2144 ;;  switchNumber    2   38[BANK1 ] unsigned char [2]
  2145 ;;  integerSpeed    2   43[BANK1 ] int 
  2146 ;;  end             2    6[BANK1 ] int 
  2147 ;;  start           2    4[BANK1 ] int 
  2148 ;;  remainder       2    2[BANK1 ] int 
  2149 ;;  ConvertStrin    2    0[BANK1 ] int 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2159 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         0       0      53       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         0      14      53       0       0       0       0       0       0       0       0
  2163 ;;Total ram usage:       67 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    4
  2166 ;; This function calls:
  2167 ;;		___awtoft
  2168 ;;		___ftdiv
  2169 ;;		___ftmul
  2170 ;;		___fttol
  2171 ;;		_atoi
  2172 ;;		_hexadecimalToDecimal
  2173 ;;		_sendAcknowledgment
  2174 ;;		_sprintf
  2175 ;;		_strlen
  2176 ;;		_strncpy
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _applianceControl
  2184  0105                     _applianceControl:	
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _applianceControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2188                           ;applianceControl@charSwitchMSB stored from wreg
  2189  0105  0021               	movlb	1	; select bank1
  2190  0106  00C5               	movwf	applianceControl@charSwitchMSB^(0+128)
  2191                           
  2192                           ;applicationcontrol.h: 7: int integerSwitchNumber = 0;
  2193  0107  01CF               	clrf	applianceControl@integerSwitchNumber^(0+128)
  2194  0108  01D0               	clrf	(applianceControl@integerSwitchNumber+1)^(0+128)
  2195                           
  2196                           ;applicationcontrol.h: 8: int integerSwitchState = 0;
  2197  0109  01D3               	clrf	applianceControl@integerSwitchState^(0+128)
  2198  010A  01D4               	clrf	(applianceControl@integerSwitchState+1)^(0+128)
  2199                           
  2200                           ;applicationcontrol.h: 9: int integerSpeed = 0;
  2201  010B  01CB               	clrf	applianceControl@integerSpeed^(0+128)
  2202  010C  01CC               	clrf	(applianceControl@integerSpeed+1)^(0+128)
  2203                           
  2204                           ;applicationcontrol.h: 10: int currentStateBufferPositions=0;
  2205  010D  01D1               	clrf	applianceControl@currentStateBufferPositions^(0+128)
  2206  010E  01D2               	clrf	(applianceControl@currentStateBufferPositions+1)^(0+128)
  2207                           
  2208                           ;applicationcontrol.h: 12: int ConvertStringIntoInt=0;
  2209  010F  01A0               	clrf	applianceControl@ConvertStringIntoInt^(0+128)
  2210  0110  01A1               	clrf	(applianceControl@ConvertStringIntoInt+1)^(0+128)
  2211                           
  2212                           ;applicationcontrol.h: 13: float ConvertIntToTimeInMilisec=0;
  2213  0111  3000               	movlw	0
  2214  0112  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  2215  0113  3000               	movlw	0
  2216  0114  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  2217  0115  3000               	movlw	0
  2218  0116  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  2219                           
  2220                           ;applicationcontrol.h: 14: unsigned long long int Pulse=0,NeedPulse=0,CompleteClock =655
      +                          35;
  2221  0117  3000               	movlw	0
  2222  0118  00BA               	movwf	(applianceControl@Pulse+3)^(0+128)
  2223  0119  3000               	movlw	0
  2224  011A  00B9               	movwf	(applianceControl@Pulse+2)^(0+128)
  2225  011B  3000               	movlw	0
  2226  011C  00B8               	movwf	(applianceControl@Pulse+1)^(0+128)
  2227  011D  3000               	movlw	0
  2228  011E  00B7               	movwf	applianceControl@Pulse^(0+128)
  2229  011F  3000               	movlw	0
  2230  0120  00BE               	movwf	(applianceControl@NeedPulse+3)^(0+128)
  2231  0121  3000               	movlw	0
  2232  0122  00BD               	movwf	(applianceControl@NeedPulse+2)^(0+128)
  2233  0123  3000               	movlw	0
  2234  0124  00BC               	movwf	(applianceControl@NeedPulse+1)^(0+128)
  2235  0125  3000               	movlw	0
  2236  0126  00BB               	movwf	applianceControl@NeedPulse^(0+128)
  2237  0127  3000               	movlw	0
  2238  0128  00B0               	movwf	(applianceControl@CompleteClock+3)^(0+128)
  2239  0129  3000               	movlw	0
  2240  012A  00AF               	movwf	(applianceControl@CompleteClock+2)^(0+128)
  2241  012B  30FF               	movlw	255
  2242  012C  00AE               	movwf	(applianceControl@CompleteClock+1)^(0+128)
  2243  012D  30FF               	movlw	255
  2244  012E  00AD               	movwf	applianceControl@CompleteClock^(0+128)
  2245                           
  2246                           ;applicationcontrol.h: 15: float deno = 10.0;
  2247  012F  3000               	movlw	0
  2248  0130  00B1               	movwf	applianceControl@deno^(0+128)
  2249  0131  3020               	movlw	32
  2250  0132  00B2               	movwf	(applianceControl@deno+1)^(0+128)
  2251  0133  3041               	movlw	65
  2252  0134  00B3               	movwf	(applianceControl@deno+2)^(0+128)
  2253                           
  2254                           ;applicationcontrol.h: 16: float clockPerCycle=0.25;
  2255  0135  3000               	movlw	0
  2256  0136  00B4               	movwf	applianceControl@clockPerCycle^(0+128)
  2257  0137  3080               	movlw	128
  2258  0138  00B5               	movwf	(applianceControl@clockPerCycle+1)^(0+128)
  2259  0139  303E               	movlw	62
  2260  013A  00B6               	movwf	(applianceControl@clockPerCycle+2)^(0+128)
  2261                           
  2262                           ;applicationcontrol.h: 17: int remainder=0;
  2263  013B  01A2               	clrf	applianceControl@remainder^(0+128)
  2264  013C  01A3               	clrf	(applianceControl@remainder+1)^(0+128)
  2265                           
  2266                           ;applicationcontrol.h: 18: char HexlevelBuffer[5];
  2267                           ;applicationcontrol.h: 19: int start=0;
  2268  013D  01A4               	clrf	applianceControl@start^(0+128)
  2269  013E  01A5               	clrf	(applianceControl@start+1)^(0+128)
  2270                           
  2271                           ;applicationcontrol.h: 20: int end = strlen(HexlevelBuffer)-1;
  2272  013F  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  2273  0140  318B  23E8  3181   	fcall	_strlen
  2274  0143  0020               	movlb	0	; select bank0
  2275  0144  0820               	movf	?_strlen,w
  2276  0145  3EFF               	addlw	255
  2277  0146  0021               	movlb	1	; select bank1
  2278  0147  00A6               	movwf	applianceControl@end^(0+128)
  2279  0148  30FF               	movlw	255
  2280  0149  0020               	movlb	0	; select bank0
  2281  014A  3D21               	addwfc	?_strlen+1,w
  2282  014B  0021               	movlb	1	; select bank1
  2283  014C  00A7               	movwf	(applianceControl@end+1)^(0+128)
  2284                           
  2285                           ;applicationcontrol.h: 21: char strH[3],strL[3];
  2286                           ;applicationcontrol.h: 24: char switchNumberStringBuffer[2]="#";
  2287  014D  0868               	movf	(applianceControl@F3894+1)^(0+128),w
  2288  014E  00C7               	movwf	(applianceControl@switchNumberStringBuffer+1)^(0+128)
  2289  014F  0867               	movf	applianceControl@F3894^(0+128),w
  2290  0150  00C6               	movwf	applianceControl@switchNumberStringBuffer^(0+128)
  2291                           
  2292                           ;applicationcontrol.h: 25: char dimmerSpeedStringBuffer[2]="#";
  2293  0151  0866               	movf	(applianceControl@F3896+1)^(0+128),w
  2294  0152  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer+1)^(0+128)
  2295  0153  0865               	movf	applianceControl@F3896^(0+128),w
  2296  0154  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  2297                           
  2298                           ;applicationcontrol.h: 27: switchNumberStringBuffer[0]=charSwitchMSB;
  2299  0155  0845               	movf	applianceControl@charSwitchMSB^(0+128),w
  2300  0156  0020               	movlb	0	; select bank0
  2301  0157  00D2               	movwf	??_applianceControl
  2302  0158  0852               	movf	??_applianceControl,w
  2303  0159  0021               	movlb	1	; select bank1
  2304  015A  00C6               	movwf	applianceControl@switchNumberStringBuffer^(0+128)
  2305                           
  2306                           ;applicationcontrol.h: 28: switchNumberStringBuffer[1]=charSwitchLSB;
  2307  015B  0020               	movlb	0	; select bank0
  2308  015C  084C               	movf	applianceControl@charSwitchLSB,w
  2309  015D  00D2               	movwf	??_applianceControl
  2310  015E  0852               	movf	??_applianceControl,w
  2311  015F  0021               	movlb	1	; select bank1
  2312  0160  00C7               	movwf	(applianceControl@switchNumberStringBuffer^(0+128)+1)
  2313                           
  2314                           ;applicationcontrol.h: 29: integerSwitchNumber = atoi(switchNumberStringBuffer);
  2315  0161  30C6               	movlw	(low (applianceControl@switchNumberStringBuffer| 0))& (0+255)
  2316  0162  318D  25E6  3181   	fcall	_atoi
  2317  0165  0020               	movlb	0	; select bank0
  2318  0166  0827               	movf	?_atoi+1,w
  2319  0167  0021               	movlb	1	; select bank1
  2320  0168  00D0               	movwf	(applianceControl@integerSwitchNumber+1)^(0+128)
  2321  0169  0020               	movlb	0	; select bank0
  2322  016A  0826               	movf	?_atoi,w
  2323  016B  0021               	movlb	1	; select bank1
  2324  016C  00CF               	movwf	applianceControl@integerSwitchNumber^(0+128)
  2325                           
  2326                           ;applicationcontrol.h: 33: integerSwitchState = charSwitchSTATE-'0';
  2327  016D  0020               	movlb	0	; select bank0
  2328  016E  084D               	movf	applianceControl@charSwitchSTATE,w
  2329  016F  3ED0               	addlw	208
  2330  0170  0021               	movlb	1	; select bank1
  2331  0171  00D3               	movwf	applianceControl@integerSwitchState^(0+128)
  2332  0172  30FF               	movlw	255
  2333  0173  1803               	skipnc
  2334  0174  3000               	movlw	0
  2335  0175  00D4               	movwf	(applianceControl@integerSwitchState^(0+128)+1)
  2336                           
  2337                           ;applicationcontrol.h: 36: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  2338  0176  0020               	movlb	0	; select bank0
  2339  0177  084E               	movf	applianceControl@chDimmerSpeedMSB,w
  2340  0178  00D2               	movwf	??_applianceControl
  2341  0179  0852               	movf	??_applianceControl,w
  2342  017A  0021               	movlb	1	; select bank1
  2343  017B  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  2344                           
  2345                           ;applicationcontrol.h: 37: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  2346  017C  0020               	movlb	0	; select bank0
  2347  017D  084F               	movf	applianceControl@chDimmerSpeedLSB,w
  2348  017E  00D2               	movwf	??_applianceControl
  2349  017F  0852               	movf	??_applianceControl,w
  2350  0180  0021               	movlb	1	; select bank1
  2351  0181  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer^(0+128)+1)
  2352                           
  2353                           ;applicationcontrol.h: 38: integerSpeed = atoi(dimmerSpeedStringBuffer);
  2354  0182  30CD               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  2355  0183  318D  25E6  3181   	fcall	_atoi
  2356  0186  0020               	movlb	0	; select bank0
  2357  0187  0827               	movf	?_atoi+1,w
  2358  0188  0021               	movlb	1	; select bank1
  2359  0189  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  2360  018A  0020               	movlb	0	; select bank0
  2361  018B  0826               	movf	?_atoi,w
  2362  018C  0021               	movlb	1	; select bank1
  2363  018D  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  2364                           
  2365                           ;applicationcontrol.h: 41: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  2366  018E  0020               	movlb	0	; select bank0
  2367  018F  084E               	movf	applianceControl@chDimmerSpeedMSB,w
  2368  0190  00D2               	movwf	??_applianceControl
  2369  0191  0852               	movf	??_applianceControl,w
  2370  0192  0021               	movlb	1	; select bank1
  2371  0193  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  2372                           
  2373                           ;applicationcontrol.h: 42: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  2374  0194  0020               	movlb	0	; select bank0
  2375  0195  084F               	movf	applianceControl@chDimmerSpeedLSB,w
  2376  0196  00D2               	movwf	??_applianceControl
  2377  0197  0852               	movf	??_applianceControl,w
  2378  0198  0021               	movlb	1	; select bank1
  2379  0199  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer^(0+128)+1)
  2380                           
  2381                           ;applicationcontrol.h: 43: integerSpeed = atoi(dimmerSpeedStringBuffer);
  2382  019A  30CD               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  2383  019B  318D  25E6  3181   	fcall	_atoi
  2384  019E  0020               	movlb	0	; select bank0
  2385  019F  0827               	movf	?_atoi+1,w
  2386  01A0  0021               	movlb	1	; select bank1
  2387  01A1  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  2388  01A2  0020               	movlb	0	; select bank0
  2389  01A3  0826               	movf	?_atoi,w
  2390  01A4  0021               	movlb	1	; select bank1
  2391  01A5  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  2392                           
  2393                           ;applicationcontrol.h: 44: integerSpeed = 99-integerSpeed;
  2394  01A6  094B               	comf	applianceControl@integerSpeed^(0+128),w
  2395  01A7  0020               	movlb	0	; select bank0
  2396  01A8  00D2               	movwf	??_applianceControl
  2397  01A9  0021               	movlb	1	; select bank1
  2398  01AA  094C               	comf	(applianceControl@integerSpeed+1)^(0+128),w
  2399  01AB  0020               	movlb	0	; select bank0
  2400  01AC  00D3               	movwf	??_applianceControl+1
  2401  01AD  0AD2               	incf	??_applianceControl,f
  2402  01AE  1903               	skipnz
  2403  01AF  0AD3               	incf	??_applianceControl+1,f
  2404  01B0  0852               	movf	??_applianceControl,w
  2405  01B1  3E63               	addlw	99
  2406  01B2  0021               	movlb	1	; select bank1
  2407  01B3  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  2408  01B4  3000               	movlw	0
  2409  01B5  0020               	movlb	0	; select bank0
  2410  01B6  3D53               	addwfc	??_applianceControl+1,w
  2411  01B7  0021               	movlb	1	; select bank1
  2412  01B8  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  2413                           
  2414                           ;applicationcontrol.h: 45: ConvertIntToTimeInMilisec = (integerSpeed/deno);
  2415  01B9  0831               	movf	applianceControl@deno^(0+128),w
  2416  01BA  0020               	movlb	0	; select bank0
  2417  01BB  00AE               	movwf	___ftdiv@f2
  2418  01BC  0021               	movlb	1	; select bank1
  2419  01BD  0832               	movf	(applianceControl@deno+1)^(0+128),w
  2420  01BE  0020               	movlb	0	; select bank0
  2421  01BF  00AF               	movwf	___ftdiv@f2+1
  2422  01C0  0021               	movlb	1	; select bank1
  2423  01C1  0833               	movf	(applianceControl@deno+2)^(0+128),w
  2424  01C2  0020               	movlb	0	; select bank0
  2425  01C3  00B0               	movwf	___ftdiv@f2+2
  2426  01C4  0021               	movlb	1	; select bank1
  2427  01C5  084C               	movf	(applianceControl@integerSpeed+1)^(0+128),w
  2428  01C6  0020               	movlb	0	; select bank0
  2429  01C7  00A9               	movwf	___awtoft@c+1
  2430  01C8  0021               	movlb	1	; select bank1
  2431  01C9  084B               	movf	applianceControl@integerSpeed^(0+128),w
  2432  01CA  0020               	movlb	0	; select bank0
  2433  01CB  00A8               	movwf	___awtoft@c
  2434  01CC  318B  23C6  3181   	fcall	___awtoft
  2435  01CF  0020               	movlb	0	; select bank0
  2436  01D0  0828               	movf	?___awtoft,w
  2437  01D1  00B1               	movwf	___ftdiv@f1
  2438  01D2  0829               	movf	?___awtoft+1,w
  2439  01D3  00B2               	movwf	___ftdiv@f1+1
  2440  01D4  082A               	movf	?___awtoft+2,w
  2441  01D5  00B3               	movwf	___ftdiv@f1+2
  2442  01D6  318F  2757  3181   	fcall	___ftdiv
  2443  01D9  0020               	movlb	0	; select bank0
  2444  01DA  082E               	movf	?___ftdiv,w
  2445  01DB  0021               	movlb	1	; select bank1
  2446  01DC  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  2447  01DD  0020               	movlb	0	; select bank0
  2448  01DE  082F               	movf	?___ftdiv+1,w
  2449  01DF  0021               	movlb	1	; select bank1
  2450  01E0  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  2451  01E1  0020               	movlb	0	; select bank0
  2452  01E2  0830               	movf	?___ftdiv+2,w
  2453  01E3  0021               	movlb	1	; select bank1
  2454  01E4  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  2455                           
  2456                           ;applicationcontrol.h: 46: ConvertIntToTimeInMilisec = (ConvertIntToTimeInMilisec*1000);
  2457  01E5  3000               	movlw	0
  2458  01E6  0020               	movlb	0	; select bank0
  2459  01E7  00A8               	movwf	___ftmul@f1
  2460  01E8  307A               	movlw	122
  2461  01E9  00A9               	movwf	___ftmul@f1+1
  2462  01EA  3044               	movlw	68
  2463  01EB  00AA               	movwf	___ftmul@f1+2
  2464  01EC  0021               	movlb	1	; select bank1
  2465  01ED  0848               	movf	applianceControl@ConvertIntToTimeInMilisec^(0+128),w
  2466  01EE  0020               	movlb	0	; select bank0
  2467  01EF  00AB               	movwf	___ftmul@f2
  2468  01F0  0021               	movlb	1	; select bank1
  2469  01F1  0849               	movf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128),w
  2470  01F2  0020               	movlb	0	; select bank0
  2471  01F3  00AC               	movwf	___ftmul@f2+1
  2472  01F4  0021               	movlb	1	; select bank1
  2473  01F5  084A               	movf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128),w
  2474  01F6  0020               	movlb	0	; select bank0
  2475  01F7  00AD               	movwf	___ftmul@f2+2
  2476  01F8  3186  264C  3181   	fcall	___ftmul
  2477  01FB  0020               	movlb	0	; select bank0
  2478  01FC  0828               	movf	?___ftmul,w
  2479  01FD  0021               	movlb	1	; select bank1
  2480  01FE  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  2481  01FF  0020               	movlb	0	; select bank0
  2482  0200  0829               	movf	?___ftmul+1,w
  2483  0201  0021               	movlb	1	; select bank1
  2484  0202  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  2485  0203  0020               	movlb	0	; select bank0
  2486  0204  082A               	movf	?___ftmul+2,w
  2487  0205  0021               	movlb	1	; select bank1
  2488  0206  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  2489                           
  2490                           ;applicationcontrol.h: 47: Pulse = (ConvertIntToTimeInMilisec/clockPerCycle);
  2491  0207  0848               	movf	applianceControl@ConvertIntToTimeInMilisec^(0+128),w
  2492  0208  0020               	movlb	0	; select bank0
  2493  0209  00B1               	movwf	___ftdiv@f1
  2494  020A  0021               	movlb	1	; select bank1
  2495  020B  0849               	movf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128),w
  2496  020C  0020               	movlb	0	; select bank0
  2497  020D  00B2               	movwf	___ftdiv@f1+1
  2498  020E  0021               	movlb	1	; select bank1
  2499  020F  084A               	movf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128),w
  2500  0210  0020               	movlb	0	; select bank0
  2501  0211  00B3               	movwf	___ftdiv@f1+2
  2502  0212  0021               	movlb	1	; select bank1
  2503  0213  0834               	movf	applianceControl@clockPerCycle^(0+128),w
  2504  0214  0020               	movlb	0	; select bank0
  2505  0215  00AE               	movwf	___ftdiv@f2
  2506  0216  0021               	movlb	1	; select bank1
  2507  0217  0835               	movf	(applianceControl@clockPerCycle+1)^(0+128),w
  2508  0218  0020               	movlb	0	; select bank0
  2509  0219  00AF               	movwf	___ftdiv@f2+1
  2510  021A  0021               	movlb	1	; select bank1
  2511  021B  0836               	movf	(applianceControl@clockPerCycle+2)^(0+128),w
  2512  021C  0020               	movlb	0	; select bank0
  2513  021D  00B0               	movwf	___ftdiv@f2+2
  2514  021E  318F  2757  3181   	fcall	___ftdiv
  2515  0221  0020               	movlb	0	; select bank0
  2516  0222  082E               	movf	?___ftdiv,w
  2517  0223  00BE               	movwf	___fttol@f1
  2518  0224  082F               	movf	?___ftdiv+1,w
  2519  0225  00BF               	movwf	___fttol@f1+1
  2520  0226  0830               	movf	?___ftdiv+2,w
  2521  0227  00C0               	movwf	___fttol@f1+2
  2522  0228  318E  26D0  3181   	fcall	___fttol
  2523  022B  0020               	movlb	0	; select bank0
  2524  022C  0841               	movf	?___fttol+3,w
  2525  022D  0021               	movlb	1	; select bank1
  2526  022E  00BA               	movwf	(applianceControl@Pulse+3)^(0+128)
  2527  022F  0020               	movlb	0	; select bank0
  2528  0230  0840               	movf	?___fttol+2,w
  2529  0231  0021               	movlb	1	; select bank1
  2530  0232  00B9               	movwf	(applianceControl@Pulse+2)^(0+128)
  2531  0233  0020               	movlb	0	; select bank0
  2532  0234  083F               	movf	?___fttol+1,w
  2533  0235  0021               	movlb	1	; select bank1
  2534  0236  00B8               	movwf	(applianceControl@Pulse+1)^(0+128)
  2535  0237  0020               	movlb	0	; select bank0
  2536  0238  083E               	movf	?___fttol,w
  2537  0239  0021               	movlb	1	; select bank1
  2538  023A  00B7               	movwf	applianceControl@Pulse^(0+128)
  2539                           
  2540                           ;applicationcontrol.h: 48: NeedPulse = CompleteClock - Pulse;
  2541  023B  082D               	movf	applianceControl@CompleteClock^(0+128),w
  2542  023C  0020               	movlb	0	; select bank0
  2543  023D  00D2               	movwf	??_applianceControl
  2544  023E  0021               	movlb	1	; select bank1
  2545  023F  082E               	movf	(applianceControl@CompleteClock+1)^(0+128),w
  2546  0240  0020               	movlb	0	; select bank0
  2547  0241  00D3               	movwf	??_applianceControl+1
  2548  0242  0021               	movlb	1	; select bank1
  2549  0243  082F               	movf	(applianceControl@CompleteClock+2)^(0+128),w
  2550  0244  0020               	movlb	0	; select bank0
  2551  0245  00D4               	movwf	??_applianceControl+2
  2552  0246  0021               	movlb	1	; select bank1
  2553  0247  0830               	movf	(applianceControl@CompleteClock+3)^(0+128),w
  2554  0248  0020               	movlb	0	; select bank0
  2555  0249  00D5               	movwf	??_applianceControl+3
  2556  024A  0021               	movlb	1	; select bank1
  2557  024B  0937               	comf	applianceControl@Pulse^(0+128),w
  2558  024C  0020               	movlb	0	; select bank0
  2559  024D  00D6               	movwf	??_applianceControl+4
  2560  024E  0021               	movlb	1	; select bank1
  2561  024F  0938               	comf	(applianceControl@Pulse+1)^(0+128),w
  2562  0250  0020               	movlb	0	; select bank0
  2563  0251  00D7               	movwf	??_applianceControl+5
  2564  0252  0021               	movlb	1	; select bank1
  2565  0253  0939               	comf	(applianceControl@Pulse+2)^(0+128),w
  2566  0254  0020               	movlb	0	; select bank0
  2567  0255  00D8               	movwf	??_applianceControl+6
  2568  0256  0021               	movlb	1	; select bank1
  2569  0257  093A               	comf	(applianceControl@Pulse+3)^(0+128),w
  2570  0258  0020               	movlb	0	; select bank0
  2571  0259  00D9               	movwf	??_applianceControl+7
  2572  025A  0AD6               	incf	??_applianceControl+4,f
  2573  025B  1903               	skipnz
  2574  025C  0AD7               	incf	??_applianceControl+5,f
  2575  025D  1903               	skipnz
  2576  025E  0AD8               	incf	??_applianceControl+6,f
  2577  025F  1903               	skipnz
  2578  0260  0AD9               	incf	??_applianceControl+7,f
  2579  0261  0856               	movf	??_applianceControl+4,w
  2580  0262  07D2               	addwf	??_applianceControl,f
  2581  0263  0857               	movf	??_applianceControl+5,w
  2582  0264  3DD3               	addwfc	??_applianceControl+1,f
  2583  0265  0858               	movf	??_applianceControl+6,w
  2584  0266  3DD4               	addwfc	??_applianceControl+2,f
  2585  0267  0859               	movf	??_applianceControl+7,w
  2586  0268  3DD5               	addwfc	??_applianceControl+3,f
  2587  0269  0855               	movf	??_applianceControl+3,w
  2588  026A  0021               	movlb	1	; select bank1
  2589  026B  00BE               	movwf	(applianceControl@NeedPulse+3)^(0+128)
  2590  026C  0020               	movlb	0	; select bank0
  2591  026D  0854               	movf	??_applianceControl+2,w
  2592  026E  0021               	movlb	1	; select bank1
  2593  026F  00BD               	movwf	(applianceControl@NeedPulse+2)^(0+128)
  2594  0270  0020               	movlb	0	; select bank0
  2595  0271  0853               	movf	??_applianceControl+1,w
  2596  0272  0021               	movlb	1	; select bank1
  2597  0273  00BC               	movwf	(applianceControl@NeedPulse+1)^(0+128)
  2598  0274  0020               	movlb	0	; select bank0
  2599  0275  0852               	movf	??_applianceControl,w
  2600  0276  0021               	movlb	1	; select bank1
  2601  0277  00BB               	movwf	applianceControl@NeedPulse^(0+128)
  2602                           
  2603                           ;applicationcontrol.h: 49: sprintf(HexlevelBuffer,"%X",NeedPulse);
  2604  0278  3038               	movlw	low (STR_1| (0+32768))
  2605  0279  0020               	movlb	0	; select bank0
  2606  027A  00A8               	movwf	sprintf@f
  2607  027B  3090               	movlw	high (STR_1| (0+32768))
  2608  027C  00A9               	movwf	sprintf@f+1
  2609  027D  0021               	movlb	1	; select bank1
  2610  027E  083E               	movf	(applianceControl@NeedPulse+3)^(0+128),w
  2611  027F  0020               	movlb	0	; select bank0
  2612  0280  00AD               	movwf	?_sprintf+5
  2613  0281  0021               	movlb	1	; select bank1
  2614  0282  083D               	movf	(applianceControl@NeedPulse+2)^(0+128),w
  2615  0283  0020               	movlb	0	; select bank0
  2616  0284  00AC               	movwf	?_sprintf+4
  2617  0285  0021               	movlb	1	; select bank1
  2618  0286  083C               	movf	(applianceControl@NeedPulse+1)^(0+128),w
  2619  0287  0020               	movlb	0	; select bank0
  2620  0288  00AB               	movwf	?_sprintf+3
  2621  0289  0021               	movlb	1	; select bank1
  2622  028A  083B               	movf	applianceControl@NeedPulse^(0+128),w
  2623  028B  0020               	movlb	0	; select bank0
  2624  028C  00AA               	movwf	?_sprintf+2
  2625  028D  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  2626  028E  3187  2700  3181   	fcall	_sprintf
  2627                           
  2628                           ;applicationcontrol.h: 50: strncpy(strH,HexlevelBuffer,2);
  2629  0291  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  2630  0292  0020               	movlb	0	; select bank0
  2631  0293  00D2               	movwf	??_applianceControl
  2632  0294  0852               	movf	??_applianceControl,w
  2633  0295  00A0               	movwf	strncpy@from
  2634  0296  3002               	movlw	2
  2635  0297  00A1               	movwf	strncpy@size
  2636  0298  3000               	movlw	0
  2637  0299  00A2               	movwf	strncpy@size+1
  2638  029A  30BF               	movlw	(low (applianceControl@strH| 0))& (0+255)
  2639  029B  318C  2434  3181   	fcall	_strncpy
  2640                           
  2641                           ;applicationcontrol.h: 51: strH[2]='\0';
  2642  029E  0021               	movlb	1	; select bank1
  2643  029F  01C1               	clrf	(applianceControl@strH^(0+128)+2)
  2644                           
  2645                           ;applicationcontrol.h: 54: strncpy(strL,HexlevelBuffer+2,2);
  2646  02A0  30AA               	movlw	(low ((applianceControl@HexlevelBuffer| 0+2)))& (0+255)
  2647  02A1  0020               	movlb	0	; select bank0
  2648  02A2  00D2               	movwf	??_applianceControl
  2649  02A3  0852               	movf	??_applianceControl,w
  2650  02A4  00A0               	movwf	strncpy@from
  2651  02A5  3002               	movlw	2
  2652  02A6  00A1               	movwf	strncpy@size
  2653  02A7  3000               	movlw	0
  2654  02A8  00A2               	movwf	strncpy@size+1
  2655  02A9  30C2               	movlw	(low (applianceControl@strL| 0))& (0+255)
  2656  02AA  318C  2434  3181   	fcall	_strncpy
  2657                           
  2658                           ;applicationcontrol.h: 55: strL[2]='\0';
  2659  02AD  0021               	movlb	1	; select bank1
  2660  02AE  01C4               	clrf	(applianceControl@strL^(0+128)+2)
  2661                           
  2662                           ;applicationcontrol.h: 58: parentalLockBuffer[integerSwitchNumber] = charParentalControl
      +                          ;
  2663  02AF  0020               	movlb	0	; select bank0
  2664  02B0  0850               	movf	applianceControl@charParentalControl,w
  2665  02B1  00D2               	movwf	??_applianceControl
  2666  02B2  0021               	movlb	1	; select bank1
  2667  02B3  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  2668  02B4  3E50               	addlw	(low (_parentalLockBuffer| (0+256)))& (0+255)
  2669  02B5  0086               	movwf	6
  2670  02B6  3001               	movlw	1	; select bank2/3
  2671  02B7  0087               	movwf	7
  2672  02B8  0020               	movlb	0	; select bank0
  2673  02B9  0852               	movf	??_applianceControl,w
  2674  02BA  0081               	movwf	1
  2675                           
  2676                           ;applicationcontrol.h: 59: copy_parentalLockBuffer[integerSwitchNumber]=parentalLockBuff
      +                          er[integerSwitchNumber];
  2677  02BB  0021               	movlb	1	; select bank1
  2678  02BC  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  2679  02BD  3E50               	addlw	(low (_parentalLockBuffer| (0+256)))& (0+255)
  2680  02BE  0086               	movwf	6
  2681  02BF  3001               	movlw	1	; select bank2/3
  2682  02C0  0087               	movwf	7
  2683  02C1  0801               	movf	1,w
  2684  02C2  0020               	movlb	0	; select bank0
  2685  02C3  00D2               	movwf	??_applianceControl
  2686  02C4  0021               	movlb	1	; select bank1
  2687  02C5  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  2688  02C6  3E42               	addlw	(low (_copy_parentalLockBuffer| (0+256)))& (0+255)
  2689  02C7  0086               	movwf	6
  2690  02C8  3001               	movlw	1	; select bank2/3
  2691  02C9  0087               	movwf	7
  2692  02CA  0020               	movlb	0	; select bank0
  2693  02CB  0852               	movf	??_applianceControl,w
  2694  02CC  0081               	movwf	1
  2695                           
  2696                           ;applicationcontrol.h: 62: currentStateBufferPositions = ((1+4*(integerSwitchNumber))-5)
      +                          ;
  2697  02CD  0021               	movlb	1	; select bank1
  2698  02CE  0850               	movf	(applianceControl@integerSwitchNumber+1)^(0+128),w
  2699  02CF  0020               	movlb	0	; select bank0
  2700  02D0  00D3               	movwf	??_applianceControl+1
  2701  02D1  0021               	movlb	1	; select bank1
  2702  02D2  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  2703  02D3  0020               	movlb	0	; select bank0
  2704  02D4  00D2               	movwf	??_applianceControl
  2705  02D5  35D2               	lslf	??_applianceControl,f
  2706  02D6  0DD3               	rlf	??_applianceControl+1,f
  2707  02D7  35D2               	lslf	??_applianceControl,f
  2708  02D8  0DD3               	rlf	??_applianceControl+1,f
  2709  02D9  0852               	movf	??_applianceControl,w
  2710  02DA  3EFC               	addlw	252
  2711  02DB  0021               	movlb	1	; select bank1
  2712  02DC  00D1               	movwf	applianceControl@currentStateBufferPositions^(0+128)
  2713  02DD  30FF               	movlw	255
  2714  02DE  0020               	movlb	0	; select bank0
  2715  02DF  3D53               	addwfc	??_applianceControl+1,w
  2716  02E0  0021               	movlb	1	; select bank1
  2717  02E1  00D2               	movwf	(applianceControl@currentStateBufferPositions+1)^(0+128)
  2718                           
  2719                           ;applicationcontrol.h: 63: currentStateBuffer[currentStateBufferPositions++] = 'G';
  2720  02E2  3047               	movlw	71
  2721  02E3  0020               	movlb	0	; select bank0
  2722  02E4  00D2               	movwf	??_applianceControl
  2723  02E5  0021               	movlb	1	; select bank1
  2724  02E6  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  2725  02E7  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2726  02E8  0086               	movwf	6
  2727  02E9  3001               	movlw	1	; select bank3/4
  2728  02EA  0087               	movwf	7
  2729  02EB  0020               	movlb	0	; select bank0
  2730  02EC  0852               	movf	??_applianceControl,w
  2731  02ED  0081               	movwf	1
  2732  02EE  3001               	movlw	1
  2733  02EF  0021               	movlb	1	; select bank1
  2734  02F0  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  2735  02F1  3000               	movlw	0
  2736  02F2  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  2737                           
  2738                           ;applicationcontrol.h: 64: currentStateBuffer[currentStateBufferPositions++] = charSwitc
      +                          hSTATE;
  2739  02F3  0020               	movlb	0	; select bank0
  2740  02F4  084D               	movf	applianceControl@charSwitchSTATE,w
  2741  02F5  00D2               	movwf	??_applianceControl
  2742  02F6  0021               	movlb	1	; select bank1
  2743  02F7  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  2744  02F8  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2745  02F9  0086               	movwf	6
  2746  02FA  3001               	movlw	1	; select bank3/4
  2747  02FB  0087               	movwf	7
  2748  02FC  0020               	movlb	0	; select bank0
  2749  02FD  0852               	movf	??_applianceControl,w
  2750  02FE  0081               	movwf	1
  2751  02FF  3001               	movlw	1
  2752  0300  0021               	movlb	1	; select bank1
  2753  0301  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  2754  0302  3000               	movlw	0
  2755  0303  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  2756                           
  2757                           ;applicationcontrol.h: 65: currentStateBuffer[currentStateBufferPositions++] = charSwitc
      +                          hMSB;
  2758  0304  0845               	movf	applianceControl@charSwitchMSB^(0+128),w
  2759  0305  0020               	movlb	0	; select bank0
  2760  0306  00D2               	movwf	??_applianceControl
  2761  0307  0021               	movlb	1	; select bank1
  2762  0308  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  2763  0309  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2764  030A  0086               	movwf	6
  2765  030B  3001               	movlw	1	; select bank3/4
  2766  030C  0087               	movwf	7
  2767  030D  0020               	movlb	0	; select bank0
  2768  030E  0852               	movf	??_applianceControl,w
  2769  030F  0081               	movwf	1
  2770  0310  3001               	movlw	1
  2771  0311  0021               	movlb	1	; select bank1
  2772  0312  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  2773  0313  3000               	movlw	0
  2774  0314  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  2775                           
  2776                           ;applicationcontrol.h: 66: currentStateBuffer[currentStateBufferPositions] = charSwitchL
      +                          SB;
  2777  0315  0020               	movlb	0	; select bank0
  2778  0316  084C               	movf	applianceControl@charSwitchLSB,w
  2779  0317  00D2               	movwf	??_applianceControl
  2780  0318  0021               	movlb	1	; select bank1
  2781  0319  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  2782  031A  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2783  031B  0086               	movwf	6
  2784  031C  3001               	movlw	1	; select bank3/4
  2785  031D  0087               	movwf	7
  2786  031E  0020               	movlb	0	; select bank0
  2787  031F  0852               	movf	??_applianceControl,w
  2788  0320  0081               	movwf	1
  2789                           
  2790                           ;applicationcontrol.h: 68: currentStateBufferPositions-=3;
  2791  0321  30FD               	movlw	253
  2792  0322  0021               	movlb	1	; select bank1
  2793  0323  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  2794  0324  30FF               	movlw	255
  2795  0325  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  2796                           
  2797                           ;applicationcontrol.h: 69: if(charFinalFrameState=='1')
  2798  0326  3031               	movlw	49
  2799  0327  0020               	movlb	0	; select bank0
  2800  0328  0651               	xorwf	applianceControl@charFinalFrameState,w
  2801  0329  1D03               	btfss	3,2
  2802  032A  2BFC               	goto	l3610
  2803                           
  2804                           ;applicationcontrol.h: 70: {
  2805                           ;applicationcontrol.h: 71: sendAcknowledgment(currentStateBuffer+currentStateBufferPosit
      +                          ions);
  2806  032B  0021               	movlb	1	; select bank1
  2807  032C  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  2808  032D  3EA0               	addlw	(low (_currentStateBuffer| (0+256)))& (0+255)
  2809  032E  318B  23A8  3181   	fcall	_sendAcknowledgment
  2810                           
  2811                           ;applicationcontrol.h: 72: _delay((unsigned long)((5)*(16000000/4000.0)));
  2812  0331  301A               	movlw	26
  2813  0332  0020               	movlb	0	; select bank0
  2814  0333  00D2               	movwf	??_applianceControl
  2815  0334  30F8               	movlw	248
  2816  0335                     u3977:	
  2817  0335  0B89               	decfsz	9,f
  2818  0336  2B35               	goto	u3977
  2819  0337  0BD2               	decfsz	??_applianceControl,f
  2820  0338  2B35               	goto	u3977
  2821  0339  0000               	nop
  2822                           
  2823                           ;applicationcontrol.h: 73: TX2REG = '(' ;
  2824  033A  3028               	movlw	40
  2825  033B  0029               	movlb	9	; select bank9
  2826  033C  0092               	movwf	18	;volatile
  2827                           
  2828                           ;applicationcontrol.h: 74: _delay((unsigned long)((1)*(16000000/4000.0)));
  2829  033D  3006               	movlw	6
  2830  033E  0020               	movlb	0	; select bank0
  2831  033F  00D2               	movwf	??_applianceControl
  2832  0340  3030               	movlw	48
  2833  0341                     u3987:	
  2834  0341  0B89               	decfsz	9,f
  2835  0342  2B41               	goto	u3987
  2836  0343  0BD2               	decfsz	??_applianceControl,f
  2837  0344  2B41               	goto	u3987
  2838  0345  0000               	nop
  2839                           
  2840                           ;applicationcontrol.h: 75: TX2REG = 'h' ;
  2841  0346  3068               	movlw	104
  2842  0347  0029               	movlb	9	; select bank9
  2843  0348  0092               	movwf	18	;volatile
  2844                           
  2845                           ;applicationcontrol.h: 76: _delay((unsigned long)((1)*(16000000/4000.0)));
  2846  0349  3006               	movlw	6
  2847  034A  0020               	movlb	0	; select bank0
  2848  034B  00D2               	movwf	??_applianceControl
  2849  034C  3030               	movlw	48
  2850  034D                     u3997:	
  2851  034D  0B89               	decfsz	9,f
  2852  034E  2B4D               	goto	u3997
  2853  034F  0BD2               	decfsz	??_applianceControl,f
  2854  0350  2B4D               	goto	u3997
  2855  0351  0000               	nop
  2856                           
  2857                           ;applicationcontrol.h: 77: TX2REG =charSwitchLSB + 16 ;
  2858  0352  0020               	movlb	0	; select bank0
  2859  0353  084C               	movf	applianceControl@charSwitchLSB,w
  2860  0354  3E10               	addlw	16
  2861  0355  0029               	movlb	9	; select bank9
  2862  0356  0092               	movwf	18	;volatile
  2863                           
  2864                           ;applicationcontrol.h: 78: _delay((unsigned long)((1)*(16000000/4000.0)));
  2865  0357  3006               	movlw	6
  2866  0358  0020               	movlb	0	; select bank0
  2867  0359  00D2               	movwf	??_applianceControl
  2868  035A  3030               	movlw	48
  2869  035B                     u4007:	
  2870  035B  0B89               	decfsz	9,f
  2871  035C  2B5B               	goto	u4007
  2872  035D  0BD2               	decfsz	??_applianceControl,f
  2873  035E  2B5B               	goto	u4007
  2874  035F  0000               	nop
  2875                           
  2876                           ;applicationcontrol.h: 79: TX2REG=charSwitchSTATE;
  2877  0360  0020               	movlb	0	; select bank0
  2878  0361  084D               	movf	applianceControl@charSwitchSTATE,w
  2879  0362  0029               	movlb	9	; select bank9
  2880  0363  0092               	movwf	18	;volatile
  2881                           
  2882                           ;applicationcontrol.h: 80: _delay((unsigned long)((1)*(16000000/4000.0)));
  2883  0364  3006               	movlw	6
  2884  0365  0020               	movlb	0	; select bank0
  2885  0366  00D2               	movwf	??_applianceControl
  2886  0367  3030               	movlw	48
  2887  0368                     u4017:	
  2888  0368  0B89               	decfsz	9,f
  2889  0369  2B68               	goto	u4017
  2890  036A  0BD2               	decfsz	??_applianceControl,f
  2891  036B  2B68               	goto	u4017
  2892  036C  0000               	nop
  2893                           
  2894                           ;applicationcontrol.h: 81: TX2REG='0';
  2895  036D  3030               	movlw	48
  2896  036E  0029               	movlb	9	; select bank9
  2897  036F  0092               	movwf	18	;volatile
  2898                           
  2899                           ;applicationcontrol.h: 82: _delay((unsigned long)((1)*(16000000/4000.0)));
  2900  0370  3006               	movlw	6
  2901  0371  0020               	movlb	0	; select bank0
  2902  0372  00D2               	movwf	??_applianceControl
  2903  0373  3030               	movlw	48
  2904  0374                     u4027:	
  2905  0374  0B89               	decfsz	9,f
  2906  0375  2B74               	goto	u4027
  2907  0376  0BD2               	decfsz	??_applianceControl,f
  2908  0377  2B74               	goto	u4027
  2909  0378  0000               	nop
  2910                           
  2911                           ;applicationcontrol.h: 83: TX2REG='0';
  2912  0379  3030               	movlw	48
  2913  037A  0029               	movlb	9	; select bank9
  2914  037B  0092               	movwf	18	;volatile
  2915                           
  2916                           ;applicationcontrol.h: 84: _delay((unsigned long)((1)*(16000000/4000.0)));
  2917  037C  3006               	movlw	6
  2918  037D  0020               	movlb	0	; select bank0
  2919  037E  00D2               	movwf	??_applianceControl
  2920  037F  3030               	movlw	48
  2921  0380                     u4037:	
  2922  0380  0B89               	decfsz	9,f
  2923  0381  2B80               	goto	u4037
  2924  0382  0BD2               	decfsz	??_applianceControl,f
  2925  0383  2B80               	goto	u4037
  2926  0384  0000               	nop
  2927                           
  2928                           ;applicationcontrol.h: 85: TX2REG='0';
  2929  0385  3030               	movlw	48
  2930  0386  0029               	movlb	9	; select bank9
  2931  0387  0092               	movwf	18	;volatile
  2932                           
  2933                           ;applicationcontrol.h: 86: _delay((unsigned long)((1)*(16000000/4000.0)));
  2934  0388  3006               	movlw	6
  2935  0389  0020               	movlb	0	; select bank0
  2936  038A  00D2               	movwf	??_applianceControl
  2937  038B  3030               	movlw	48
  2938  038C                     u4047:	
  2939  038C  0B89               	decfsz	9,f
  2940  038D  2B8C               	goto	u4047
  2941  038E  0BD2               	decfsz	??_applianceControl,f
  2942  038F  2B8C               	goto	u4047
  2943  0390  0000               	nop
  2944                           
  2945                           ;applicationcontrol.h: 87: TX2REG=')';
  2946  0391  3029               	movlw	41
  2947  0392  0029               	movlb	9	; select bank9
  2948  0393  0092               	movwf	18	;volatile
  2949                           
  2950                           ;applicationcontrol.h: 88: }
  2951                           ;applicationcontrol.h: 90: switch(integerSwitchNumber){
  2952  0394  2BFC               	goto	l3610
  2953  0395                     l3586:	
  2954                           ;applicationcontrol.h: 91: case 1:
  2955                           
  2956                           
  2957                           ;applicationcontrol.h: 92: {
  2958                           ;applicationcontrol.h: 93: PORTEbits.RE1 = integerSwitchState;
  2959  0395  0021               	movlb	1	; select bank1
  2960  0396  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  2961  0397  0020               	movlb	0	; select bank0
  2962  0398  1C03               	skipc
  2963  0399  1090               	bcf	16,1	;volatile
  2964  039A  1803               	skipnc
  2965  039B  1490               	bsf	16,1	;volatile
  2966                           
  2967                           ;applicationcontrol.h: 94: }break;
  2968  039C  0008               	return
  2969  039D                     l3588:	
  2970                           ;applicationcontrol.h: 96: case 2:
  2971                           
  2972                           
  2973                           ;applicationcontrol.h: 97: {
  2974                           ;applicationcontrol.h: 98: PORTEbits.RE0 = integerSwitchState;
  2975  039D  0021               	movlb	1	; select bank1
  2976  039E  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  2977  039F  0020               	movlb	0	; select bank0
  2978  03A0  1C03               	skipc
  2979  03A1  1010               	bcf	16,0	;volatile
  2980  03A2  1803               	skipnc
  2981  03A3  1410               	bsf	16,0	;volatile
  2982                           
  2983                           ;applicationcontrol.h: 100: } break;
  2984  03A4  0008               	return
  2985  03A5                     l3590:	
  2986                           ;applicationcontrol.h: 101: case 3:
  2987                           
  2988                           
  2989                           ;applicationcontrol.h: 102: {
  2990                           ;applicationcontrol.h: 103: PORTGbits.RG0 = integerSwitchState;
  2991  03A5  0021               	movlb	1	; select bank1
  2992  03A6  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  2993  03A7  0025               	movlb	5	; select bank5
  2994  03A8  1C03               	skipc
  2995  03A9  100D               	bcf	13,0	;volatile
  2996  03AA  1803               	skipnc
  2997  03AB  140D               	bsf	13,0	;volatile
  2998                           
  2999                           ;applicationcontrol.h: 105: } break;
  3000  03AC  0008               	return
  3001  03AD                     l3592:	
  3002                           ;applicationcontrol.h: 107: case 4:
  3003                           
  3004                           
  3005                           ;applicationcontrol.h: 108: {
  3006                           ;applicationcontrol.h: 109: PORTGbits.RG3 = integerSwitchState;
  3007  03AD  0021               	movlb	1	; select bank1
  3008  03AE  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3009  03AF  0025               	movlb	5	; select bank5
  3010  03B0  1C03               	skipc
  3011  03B1  118D               	bcf	13,3	;volatile
  3012  03B2  1803               	skipnc
  3013  03B3  158D               	bsf	13,3	;volatile
  3014                           
  3015                           ;applicationcontrol.h: 110: }break;
  3016  03B4  0008               	return
  3017  03B5                     l3594:	
  3018                           ;applicationcontrol.h: 111: case 5:
  3019                           
  3020                           
  3021                           ;applicationcontrol.h: 112: {
  3022                           ;applicationcontrol.h: 113: PORTGbits.RG4 = integerSwitchState;
  3023  03B5  0021               	movlb	1	; select bank1
  3024  03B6  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3025  03B7  0025               	movlb	5	; select bank5
  3026  03B8  1C03               	skipc
  3027  03B9  120D               	bcf	13,4	;volatile
  3028  03BA  1803               	skipnc
  3029  03BB  160D               	bsf	13,4	;volatile
  3030                           
  3031                           ;applicationcontrol.h: 114: }break;
  3032  03BC  0008               	return
  3033  03BD                     l3596:	
  3034                           ;applicationcontrol.h: 115: case 6:
  3035                           
  3036                           
  3037                           ;applicationcontrol.h: 116: {
  3038                           ;applicationcontrol.h: 117: PORTFbits.RF6 = integerSwitchState;
  3039  03BD  0021               	movlb	1	; select bank1
  3040  03BE  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3041  03BF  0025               	movlb	5	; select bank5
  3042  03C0  1C03               	skipc
  3043  03C1  130C               	bcf	12,6	;volatile
  3044  03C2  1803               	skipnc
  3045  03C3  170C               	bsf	12,6	;volatile
  3046                           
  3047                           ;applicationcontrol.h: 118: }break;
  3048  03C4  0008               	return
  3049  03C5                     l3598:	
  3050                           ;applicationcontrol.h: 120: case 7:
  3051                           
  3052                           
  3053                           ;applicationcontrol.h: 121: {
  3054                           ;applicationcontrol.h: 122: PORTFbits.RF5 = integerSwitchState;
  3055  03C5  0021               	movlb	1	; select bank1
  3056  03C6  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  3057  03C7  0025               	movlb	5	; select bank5
  3058  03C8  1C03               	skipc
  3059  03C9  128C               	bcf	12,5	;volatile
  3060  03CA  1803               	skipnc
  3061  03CB  168C               	bsf	12,5	;volatile
  3062                           
  3063                           ;applicationcontrol.h: 123: }break;
  3064  03CC  0008               	return
  3065  03CD                     l3600:	
  3066                           ;applicationcontrol.h: 125: case 8:{
  3067                           
  3068                           
  3069                           ;applicationcontrol.h: 126: start_PWM_Generation_For_DIMMER = integerSwitchState;
  3070  03CD  0021               	movlb	1	; select bank1
  3071  03CE  0854               	movf	(applianceControl@integerSwitchState+1)^(0+128),w
  3072  03CF  00D6               	movwf	(_start_PWM_Generation_For_DIMMER+1)^(0+128)
  3073  03D0  0853               	movf	applianceControl@integerSwitchState^(0+128),w
  3074  03D1  00D5               	movwf	_start_PWM_Generation_For_DIMMER^(0+128)
  3075                           
  3076                           ;applicationcontrol.h: 127: switch(integerSwitchState){
  3077  03D2  2BEE               	goto	l3606
  3078  03D3                     l235:	
  3079                           ;applicationcontrol.h: 128: case 0:
  3080                           
  3081                           
  3082                           ;applicationcontrol.h: 129: PORTFbits.RF3=1;
  3083  03D3  0025               	movlb	5	; select bank5
  3084  03D4  158C               	bsf	12,3	;volatile
  3085                           
  3086                           ;applicationcontrol.h: 130: break;
  3087  03D5  0008               	return
  3088  03D6                     l3602:	
  3089                           ;applicationcontrol.h: 131: case 1:
  3090                           
  3091                           
  3092                           ;applicationcontrol.h: 132: Timer1H = hexadecimalToDecimal(strH);
  3093  03D6  30BF               	movlw	(low (applianceControl@strH| 0))& (0+255)
  3094  03D7  318E  2651  3181   	fcall	_hexadecimalToDecimal
  3095  03DA  0020               	movlb	0	; select bank0
  3096  03DB  0829               	movf	?_hexadecimalToDecimal+1,w
  3097  03DC  0021               	movlb	1	; select bank1
  3098  03DD  00DA               	movwf	(_Timer1H+1)^(0+128)
  3099  03DE  0020               	movlb	0	; select bank0
  3100  03DF  0828               	movf	?_hexadecimalToDecimal,w
  3101  03E0  0021               	movlb	1	; select bank1
  3102  03E1  00D9               	movwf	_Timer1H^(0+128)
  3103                           
  3104                           ;applicationcontrol.h: 133: Timer1L = hexadecimalToDecimal(strL);
  3105  03E2  30C2               	movlw	(low (applianceControl@strL| 0))& (0+255)
  3106  03E3  318E  2651         	fcall	_hexadecimalToDecimal
  3107  03E5  0020               	movlb	0	; select bank0
  3108  03E6  0829               	movf	?_hexadecimalToDecimal+1,w
  3109  03E7  0021               	movlb	1	; select bank1
  3110  03E8  00D8               	movwf	(_Timer1L+1)^(0+128)
  3111  03E9  0020               	movlb	0	; select bank0
  3112  03EA  0828               	movf	?_hexadecimalToDecimal,w
  3113  03EB  0021               	movlb	1	; select bank1
  3114  03EC  00D7               	movwf	_Timer1L^(0+128)
  3115                           
  3116                           ;applicationcontrol.h: 137: }
  3117                           
  3118                           ;applicationcontrol.h: 136: break;
  3119                           
  3120                           ;applicationcontrol.h: 135: default:
  3121                           
  3122                           ;applicationcontrol.h: 134: break;
  3123  03ED  0008               	return
  3124  03EE                     l3606:	
  3125                           
  3126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3127                           ; Switch size 1, requested type "space"
  3128                           ; Number of cases is 1, Range of values is 0 to 0
  3129                           ; switch strategies available:
  3130                           ; Name         Instructions Cycles
  3131                           ; simple_byte            4     3 (average)
  3132                           ; direct_byte            8     6 (fixed)
  3133                           ; jumptable            260     6 (fixed)
  3134                           ;	Chosen strategy is simple_byte
  3135  03EE  0854               	movf	(applianceControl@integerSwitchState+1)^(0+128),w
  3136  03EF  3A00               	xorlw	0	; case 0
  3137  03F0  1903               	skipnz
  3138  03F1  2BF3               	goto	l3994
  3139  03F2  2C0F               	goto	l240
  3140  03F3                     l3994:	
  3141                           
  3142                           ; Switch size 1, requested type "space"
  3143                           ; Number of cases is 2, Range of values is 0 to 1
  3144                           ; switch strategies available:
  3145                           ; Name         Instructions Cycles
  3146                           ; simple_byte            7     4 (average)
  3147                           ; direct_byte           10     6 (fixed)
  3148                           ; jumptable            260     6 (fixed)
  3149                           ;	Chosen strategy is simple_byte
  3150  03F3  0853               	movf	applianceControl@integerSwitchState^(0+128),w
  3151  03F4  3A00               	xorlw	0	; case 0
  3152  03F5  1903               	skipnz
  3153  03F6  2BD3               	goto	l235
  3154  03F7  3A01               	xorlw	1	; case 1
  3155  03F8  1903               	skipnz
  3156  03F9  2BD6               	goto	l3602
  3157  03FA  2C0F               	goto	l240
  3158                           
  3159                           ;applicationcontrol.h: 141: }
  3160                           
  3161                           ;applicationcontrol.h: 140: break;
  3162                           
  3163                           ;applicationcontrol.h: 139: default:
  3164                           
  3165                           ;applicationcontrol.h: 138: }break;
  3166  03FB  0008               	return
  3167  03FC                     l3610:	
  3168                           
  3169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3170                           ; Switch size 1, requested type "space"
  3171                           ; Number of cases is 1, Range of values is 0 to 0
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte            4     3 (average)
  3175                           ; direct_byte            8     6 (fixed)
  3176                           ; jumptable            260     6 (fixed)
  3177                           ;	Chosen strategy is simple_byte
  3178  03FC  0021               	movlb	1	; select bank1
  3179  03FD  0850               	movf	(applianceControl@integerSwitchNumber+1)^(0+128),w
  3180  03FE  3A00               	xorlw	0	; case 0
  3181  03FF  1903               	skipnz
  3182  0400  2C02               	goto	l3996
  3183  0401  2C0F               	goto	l240
  3184  0402                     l3996:	
  3185                           
  3186                           ; Switch size 1, requested type "space"
  3187                           ; Number of cases is 8, Range of values is 1 to 8
  3188                           ; switch strategies available:
  3189                           ; Name         Instructions Cycles
  3190                           ; direct_byte           25     9 (fixed)
  3191                           ; simple_byte           25    13 (average)
  3192                           ; jumptable            263     9 (fixed)
  3193                           ;	Chosen strategy is direct_byte
  3194  0402  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  3195  0403  3EFF               	addlw	-1
  3196  0404  1C03               	skipc
  3197  0405  0008               	return
  3198  0406  0084               	movwf	4
  3199  0407  3008               	movlw	8
  3200  0408  0204               	subwf	4,w
  3201  0409  1803               	skipnc
  3202  040A  0008               	return
  3203  040B  3188               	movlp	high S3998
  3204  040C  3504               	lslf	4,w
  3205  040D  3E00               	addlw	low S3998
  3206  040E  0082               	movwf	2
  3207  040F                     l240:	
  3208  040F  0008               	return
  3209  0410                     __end_of_applianceControl:	
  3210                           
  3211                           	psect	swtext1
  3212  0800                     __pswtext1:	
  3213  0800                     S3998:	
  3214  0800  3183  2B95         	ljmp	l3586
  3215  0802  3183  2B9D         	ljmp	l3588
  3216  0804  3183  2BA5         	ljmp	l3590
  3217  0806  3183  2BAD         	ljmp	l3592
  3218  0808  3183  2BB5         	ljmp	l3594
  3219  080A  3183  2BBD         	ljmp	l3596
  3220  080C  3183  2BC5         	ljmp	l3598
  3221  080E  3183  2BCD         	ljmp	l3600
  3222                           
  3223                           	psect	text5
  3224  0C34                     __ptext5:	
  3225 ;; *************** function _strncpy *****************
  3226 ;; Defined at:
  3227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  to              1    wreg     PTR unsigned char 
  3230 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3231 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  3232 ;;		 -> applianceControl@HexlevelBuffer(5), 
  3233 ;;  size            2    1[BANK0 ] unsigned int 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  to              1    4[BANK0 ] PTR unsigned char 
  3236 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3237 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  3238 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      PTR unsigned char 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3248 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  3249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  3250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3251 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  3252 ;;Total ram usage:        6 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    2
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_applianceControl
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _strncpy
  3264  0C34                     _strncpy:	
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
  3268                           ;strncpy@to stored from wreg
  3269  0C34  0020               	movlb	0	; select bank0
  3270  0C35  00A4               	movwf	strncpy@to
  3271  0C36  0824               	movf	strncpy@to,w
  3272  0C37  00A3               	movwf	??_strncpy
  3273  0C38  0823               	movf	??_strncpy,w
  3274  0C39  00A5               	movwf	strncpy@cp
  3275  0C3A                     l3192:	
  3276  0C3A  0821               	movf	strncpy@size,w
  3277  0C3B  0422               	iorwf	strncpy@size+1,w
  3278  0C3C  1903               	btfsc	3,2
  3279  0C3D  2C58               	goto	l3198
  3280  0C3E  3001               	movlw	1
  3281  0C3F  02A1               	subwf	strncpy@size,f
  3282  0C40  3000               	movlw	0
  3283  0C41  3BA2               	subwfb	strncpy@size+1,f
  3284  0C42  0825               	movf	strncpy@cp,w
  3285  0C43  0086               	movwf	6
  3286  0C44  0187               	clrf	7
  3287  0C45  0AA5               	incf	strncpy@cp,f
  3288  0C46  0820               	movf	strncpy@from,w
  3289  0C47  0084               	movwf	4
  3290  0C48  0185               	clrf	5
  3291  0C49  0AA0               	incf	strncpy@from,f
  3292  0C4A  0800               	movf	0,w
  3293  0C4B  3FC0               	movwi [0]fsr1
  3294  0C4C  0889               	movf	9,f
  3295  0C4D  1903               	btfsc	3,2
  3296  0C4E  2C58               	goto	l3198
  3297  0C4F  2C3A               	goto	l3192
  3298  0C50                     l3194:	
  3299  0C50  0825               	movf	strncpy@cp,w
  3300  0C51  0086               	movwf	6
  3301  0C52  0187               	clrf	7
  3302  0C53  0181               	clrf	1
  3303  0C54  3001               	movlw	1
  3304  0C55  00A3               	movwf	??_strncpy
  3305  0C56  0823               	movf	??_strncpy,w
  3306  0C57  07A5               	addwf	strncpy@cp,f
  3307  0C58                     l3198:	
  3308  0C58  3001               	movlw	1
  3309  0C59  02A1               	subwf	strncpy@size,f
  3310  0C5A  3000               	movlw	0
  3311  0C5B  3BA2               	subwfb	strncpy@size+1,f
  3312  0C5C  0A21               	incf	strncpy@size,w
  3313  0C5D  1D03               	skipz
  3314  0C5E  2C50               	goto	l3194
  3315  0C5F  0A22               	incf	strncpy@size+1,w
  3316  0C60  1903               	btfsc	3,2
  3317  0C61  0008               	return
  3318  0C62  2C50               	goto	l3194
  3319  0C63                     __end_of_strncpy:	
  3320                           ;	Return value of _strncpy is never used
  3321                           
  3322                           
  3323                           	psect	text6
  3324  0700                     __ptext6:	
  3325 ;; *************** function _sprintf *****************
  3326 ;; Defined at:
  3327 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  sp              1    wreg     PTR unsigned char 
  3330 ;;		 -> applianceControl@HexlevelBuffer(5), 
  3331 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  3332 ;;		 -> STR_1(3), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  sp              1   24[BANK0 ] PTR unsigned char 
  3335 ;;		 -> applianceControl@HexlevelBuffer(5), 
  3336 ;;  idx             1   19[BANK0 ] unsigned char 
  3337 ;;  tmpval          4    0        struct .
  3338 ;;  val             2   21[BANK0 ] unsigned int 
  3339 ;;  cp              2    0        PTR const unsigned char 
  3340 ;;  len             2    0        unsigned int 
  3341 ;;  c               1   25[BANK0 ] char 
  3342 ;;  prec            1   23[BANK0 ] char 
  3343 ;;  ap              1   20[BANK0 ] PTR void [1]
  3344 ;;		 -> ?_sprintf(2), 
  3345 ;;  flag            1   18[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2    8[BANK0 ] int 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  3356 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0
  3357 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  3358 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0
  3359 ;;Total ram usage:       18 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    3
  3362 ;; This function calls:
  3363 ;;		___lwdiv
  3364 ;; This function is called by:
  3365 ;;		_applianceControl
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _sprintf
  3371  0700                     _sprintf:	
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3375                           ;sprintf@sp stored from wreg
  3376  0700  0020               	movlb	0	; select bank0
  3377  0701  00B8               	movwf	sprintf@sp
  3378                           
  3379                           ;doprnt.c: 494: va_list ap;
  3380                           ;doprnt.c: 499: signed char c;
  3381                           ;doprnt.c: 506: signed char prec;
  3382                           ;doprnt.c: 508: unsigned char flag;
  3383                           ;doprnt.c: 523: union {
  3384                           ;doprnt.c: 524: unsigned long vd;
  3385                           ;doprnt.c: 525: double integ;
  3386                           ;doprnt.c: 526: } tmpval;
  3387                           ;doprnt.c: 528: unsigned int val;
  3388                           ;doprnt.c: 529: unsigned len;
  3389                           ;doprnt.c: 530: const char * cp;
  3390                           ;doprnt.c: 533: *ap = __va_start();
  3391  0702  302A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3392  0703  00AE               	movwf	??_sprintf
  3393  0704  082E               	movf	??_sprintf,w
  3394  0705  00B4               	movwf	sprintf@ap
  3395  0706                     l3178:	
  3396                           ;doprnt.c: 536: while(c = *f++) {
  3397                           
  3398  0706  0829               	movf	sprintf@f+1,w
  3399  0707  00AF               	movwf	??_sprintf+1
  3400  0708  0828               	movf	sprintf@f,w
  3401  0709  00AE               	movwf	??_sprintf
  3402  070A  0AA8               	incf	sprintf@f,f
  3403  070B  1903               	skipnz
  3404  070C  0AA9               	incf	sprintf@f+1,f
  3405  070D  082E               	movf	??_sprintf,w
  3406  070E  0084               	movwf	4
  3407  070F  082F               	movf	??_sprintf+1,w
  3408  0710  0085               	movwf	5
  3409  0711  0800               	movf	0,w	;code access
  3410  0712  00B0               	movwf	??_sprintf+2
  3411  0713  0830               	movf	??_sprintf+2,w
  3412  0714  00B9               	movwf	sprintf@c
  3413  0715  0839               	movf	sprintf@c,w
  3414  0716  1903               	btfsc	3,2
  3415  0717  2FAE               	goto	l3180
  3416                           
  3417                           ;doprnt.c: 538: if(c != '%')
  3418  0718  3025               	movlw	37
  3419  0719  0639               	xorwf	sprintf@c,w
  3420  071A  1903               	btfsc	3,2
  3421  071B  2F28               	goto	l3144
  3422                           
  3423                           ;doprnt.c: 540: {
  3424                           ;doprnt.c: 541: ((*sp++ = (c)));
  3425  071C  0839               	movf	sprintf@c,w
  3426  071D  00AE               	movwf	??_sprintf
  3427  071E  0838               	movf	sprintf@sp,w
  3428  071F  0086               	movwf	6
  3429  0720  0187               	clrf	7
  3430  0721  082E               	movf	??_sprintf,w
  3431  0722  0081               	movwf	1
  3432  0723  3001               	movlw	1
  3433  0724  00AE               	movwf	??_sprintf
  3434  0725  082E               	movf	??_sprintf,w
  3435  0726  07B8               	addwf	sprintf@sp,f
  3436                           
  3437                           ;doprnt.c: 542: continue;
  3438  0727  2F06               	goto	l3178
  3439  0728                     l3144:	
  3440                           
  3441                           ;doprnt.c: 543: }
  3442                           ;doprnt.c: 548: flag = 0;
  3443  0728  01B2               	clrf	sprintf@flag
  3444                           
  3445                           ;doprnt.c: 822: }
  3446                           
  3447                           ;doprnt.c: 813: continue;
  3448                           
  3449                           ;doprnt.c: 802: default:
  3450                           
  3451                           ;doprnt.c: 718: case 'x':
  3452                           ;doprnt.c: 723: break;
  3453                           
  3454                           ;doprnt.c: 712: case 'X':
  3455                           
  3456                           ;doprnt.c: 638: goto alldone;
  3457                           
  3458                           ;doprnt.c: 637: case 0:
  3459                           
  3460                           ;doprnt.c: 635: switch(c = *f++) {
  3461  0729  0829               	movf	sprintf@f+1,w
  3462  072A  00AF               	movwf	??_sprintf+1
  3463  072B  0828               	movf	sprintf@f,w
  3464  072C  00AE               	movwf	??_sprintf
  3465  072D  0AA8               	incf	sprintf@f,f
  3466  072E  1903               	skipnz
  3467  072F  0AA9               	incf	sprintf@f+1,f
  3468  0730  082E               	movf	??_sprintf,w
  3469  0731  0084               	movwf	4
  3470  0732  082F               	movf	??_sprintf+1,w
  3471  0733  0085               	movwf	5
  3472  0734  0800               	movf	0,w	;code access
  3473  0735  00B9               	movwf	sprintf@c
  3474                           
  3475                           ; Switch size 1, requested type "space"
  3476                           ; Number of cases is 3, Range of values is 0 to 120
  3477                           ; switch strategies available:
  3478                           ; Name         Instructions Cycles
  3479                           ; simple_byte           10     6 (average)
  3480                           ; direct_byte          248     6 (fixed)
  3481                           ; jumptable            260     6 (fixed)
  3482                           ;	Chosen strategy is simple_byte
  3483  0736  3A00               	xorlw	0	; case 0
  3484  0737  1903               	skipnz
  3485  0738  2FAE               	goto	l3180
  3486  0739  3A58               	xorlw	88	; case 88
  3487  073A  1903               	skipnz
  3488  073B  2F40               	goto	l3150
  3489  073C  3A20               	xorlw	32	; case 120
  3490  073D  1903               	skipnz
  3491  073E  2F40               	goto	l3150
  3492  073F  2F06               	goto	l3178
  3493  0740                     l3150:	
  3494                           
  3495                           ;doprnt.c: 1273: {
  3496                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3497  0740  0834               	movf	sprintf@ap,w
  3498  0741  0086               	movwf	6
  3499  0742  0187               	clrf	7
  3500  0743  3F40               	moviw [0]fsr1
  3501  0744  00B5               	movwf	sprintf@val
  3502  0745  3F41               	moviw [1]fsr1
  3503  0746  00B6               	movwf	sprintf@val+1
  3504  0747  3002               	movlw	2
  3505  0748  00AE               	movwf	??_sprintf
  3506  0749  082E               	movf	??_sprintf,w
  3507  074A  07B4               	addwf	sprintf@ap,f
  3508                           
  3509                           ;doprnt.c: 1287: }
  3510                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3511  074B  01B9               	clrf	sprintf@c
  3512  074C  0AB9               	incf	sprintf@c,f
  3513  074D  3004               	movlw	4
  3514  074E  0639               	xorwf	sprintf@c,w
  3515  074F  1903               	btfsc	3,2
  3516  0750  2F70               	goto	l3166
  3517  0751                     l3160:	
  3518                           
  3519                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3520  0751  0839               	movf	sprintf@c,w
  3521  0752  00AE               	movwf	??_sprintf
  3522  0753  01AF               	clrf	??_sprintf+1
  3523  0754  35AE               	lslf	??_sprintf,f
  3524  0755  0DAF               	rlf	??_sprintf+1,f
  3525  0756  3000               	movlw	low (_hexpowers| (0+32768))
  3526  0757  072E               	addwf	??_sprintf,w
  3527  0758  0084               	movwf	4
  3528  0759  3090               	movlw	high (_hexpowers| (0+32768))
  3529  075A  3D2F               	addwfc	??_sprintf+1,w
  3530  075B  0085               	movwf	5
  3531  075C  3F00               	moviw [0]fsr0
  3532  075D  00B0               	movwf	??_sprintf+2
  3533  075E  3F01               	moviw [1]fsr0
  3534  075F  00B1               	movwf	??_sprintf+3
  3535  0760  0831               	movf	??_sprintf+3,w
  3536  0761  0236               	subwf	sprintf@val+1,w
  3537  0762  1D03               	skipz
  3538  0763  2F66               	goto	u3115
  3539  0764  0830               	movf	??_sprintf+2,w
  3540  0765  0235               	subwf	sprintf@val,w
  3541  0766                     u3115:	
  3542  0766  1C03               	btfss	3,0
  3543  0767  2F70               	goto	l3166
  3544                           
  3545                           ;doprnt.c: 1318: break;
  3546  0768  3001               	movlw	1
  3547  0769  00AE               	movwf	??_sprintf
  3548  076A  082E               	movf	??_sprintf,w
  3549  076B  07B9               	addwf	sprintf@c,f
  3550  076C  3004               	movlw	4
  3551  076D  0639               	xorwf	sprintf@c,w
  3552  076E  1D03               	btfss	3,2
  3553  076F  2F51               	goto	l3160
  3554  0770                     l3166:	
  3555                           
  3556                           ;doprnt.c: 1422: {
  3557                           ;doprnt.c: 1469: }
  3558                           ;doprnt.c: 1472: prec = c;
  3559  0770  0839               	movf	sprintf@c,w
  3560  0771  00AE               	movwf	??_sprintf
  3561  0772  082E               	movf	??_sprintf,w
  3562  0773  00B7               	movwf	sprintf@prec
  3563  0774                     l3176:	
  3564                           ;doprnt.c: 1474: while(prec--) {
  3565                           
  3566  0774  30FF               	movlw	255
  3567  0775  00AE               	movwf	??_sprintf
  3568  0776  082E               	movf	??_sprintf,w
  3569  0777  07B7               	addwf	sprintf@prec,f
  3570  0778  0A37               	incf	sprintf@prec,w
  3571  0779  1903               	btfsc	3,2
  3572  077A  2F06               	goto	l3178
  3573                           
  3574                           ;doprnt.c: 1478: {
  3575                           ;doprnt.c: 1499: {
  3576                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3577  077B  0837               	movf	sprintf@prec,w
  3578  077C  00AE               	movwf	??_sprintf
  3579  077D  01AF               	clrf	??_sprintf+1
  3580  077E  35AE               	lslf	??_sprintf,f
  3581  077F  0DAF               	rlf	??_sprintf+1,f
  3582  0780  3000               	movlw	low (_hexpowers| (0+32768))
  3583  0781  072E               	addwf	??_sprintf,w
  3584  0782  0084               	movwf	4
  3585  0783  3090               	movlw	high (_hexpowers| (0+32768))
  3586  0784  3D2F               	addwfc	??_sprintf+1,w
  3587  0785  0085               	movwf	5
  3588  0786  3F00               	moviw [0]fsr0
  3589  0787  00A0               	movwf	___lwdiv@divisor
  3590  0788  3F01               	moviw [1]fsr0
  3591  0789  00A1               	movwf	___lwdiv@divisor+1
  3592  078A  0836               	movf	sprintf@val+1,w
  3593  078B  00A3               	movwf	___lwdiv@dividend+1
  3594  078C  0835               	movf	sprintf@val,w
  3595  078D  00A2               	movwf	___lwdiv@dividend
  3596  078E  318C  24FC  3187   	fcall	___lwdiv
  3597  0791  0020               	movlb	0	; select bank0
  3598  0792  0820               	movf	?___lwdiv,w
  3599  0793  390F               	andlw	15
  3600  0794  00B0               	movwf	??_sprintf+2
  3601  0795  0830               	movf	??_sprintf+2,w
  3602  0796  00B3               	movwf	sprintf@idx
  3603                           
  3604                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  3605  0797  0833               	movf	sprintf@idx,w
  3606  0798  3E08               	addlw	low (STR_10| (0+32768))
  3607  0799  0084               	movwf	4
  3608  079A  3090               	movlw	high (STR_10| (0+32768))
  3609  079B  1803               	skipnc
  3610  079C  3E01               	addlw	1
  3611  079D  0085               	movwf	5
  3612  079E  0800               	movf	0,w	;code access
  3613  079F  00AE               	movwf	??_sprintf
  3614  07A0  082E               	movf	??_sprintf,w
  3615  07A1  00B9               	movwf	sprintf@c
  3616                           
  3617                           ;doprnt.c: 1508: }
  3618                           ;doprnt.c: 1523: }
  3619                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3620  07A2  0839               	movf	sprintf@c,w
  3621  07A3  00AE               	movwf	??_sprintf
  3622  07A4  0838               	movf	sprintf@sp,w
  3623  07A5  0086               	movwf	6
  3624  07A6  0187               	clrf	7
  3625  07A7  082E               	movf	??_sprintf,w
  3626  07A8  0081               	movwf	1
  3627  07A9  3001               	movlw	1
  3628  07AA  00AE               	movwf	??_sprintf
  3629  07AB  082E               	movf	??_sprintf,w
  3630  07AC  07B8               	addwf	sprintf@sp,f
  3631  07AD  2F74               	goto	l3176
  3632  07AE                     l3180:	
  3633                           ;doprnt.c: 1525: }
  3634                           ;doprnt.c: 1533: }
  3635                           ;doprnt.c: 1535: alldone:
  3636                           
  3637                           
  3638                           ;doprnt.c: 1538: *sp = 0;
  3639  07AE  0838               	movf	sprintf@sp,w
  3640  07AF  0086               	movwf	6
  3641  07B0  0187               	clrf	7
  3642  07B1  0181               	clrf	1
  3643  07B2  0008               	return
  3644  07B3                     __end_of_sprintf:	
  3645                           ;doprnt.c: 1540: return 0;
  3646                           ;	Return value of _sprintf is never used
  3647                           
  3648                           
  3649                           	psect	text7
  3650  0CFC                     __ptext7:	
  3651 ;; *************** function ___lwdiv *****************
  3652 ;; Defined at:
  3653 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  divisor         2    0[BANK0 ] unsigned int 
  3656 ;;  dividend        2    2[BANK0 ] unsigned int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  quotient        2    6[BANK0 ] unsigned int 
  3659 ;;  counter         1    5[BANK0 ] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  2    0[BANK0 ] unsigned int 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  3670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  3671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3672 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  3673 ;;Total ram usage:        8 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    2
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_sprintf
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           
  3684                           ;psect for function ___lwdiv
  3685  0CFC                     ___lwdiv:	
  3686                           
  3687                           ;incstack = 0
  3688                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3689  0CFC  0020               	movlb	0	; select bank0
  3690  0CFD  01A6               	clrf	___lwdiv@quotient
  3691  0CFE  01A7               	clrf	___lwdiv@quotient+1
  3692  0CFF  0820               	movf	___lwdiv@divisor,w
  3693  0D00  0421               	iorwf	___lwdiv@divisor+1,w
  3694  0D01  1903               	btfsc	3,2
  3695  0D02  2D2C               	goto	l3098
  3696  0D03  01A5               	clrf	___lwdiv@counter
  3697  0D04  0AA5               	incf	___lwdiv@counter,f
  3698  0D05                     l3086:	
  3699  0D05  1BA1               	btfsc	___lwdiv@divisor+1,7
  3700  0D06  2D11               	goto	l3088
  3701  0D07  3001               	movlw	1
  3702  0D08                     u2975:	
  3703  0D08  35A0               	lslf	___lwdiv@divisor,f
  3704  0D09  0DA1               	rlf	___lwdiv@divisor+1,f
  3705  0D0A  0B89               	decfsz	9,f
  3706  0D0B  2D08               	goto	u2975
  3707  0D0C  3001               	movlw	1
  3708  0D0D  00A4               	movwf	??___lwdiv
  3709  0D0E  0824               	movf	??___lwdiv,w
  3710  0D0F  07A5               	addwf	___lwdiv@counter,f
  3711  0D10  2D05               	goto	l3086
  3712  0D11                     l3088:	
  3713  0D11  3001               	movlw	1
  3714  0D12                     u2995:	
  3715  0D12  35A6               	lslf	___lwdiv@quotient,f
  3716  0D13  0DA7               	rlf	___lwdiv@quotient+1,f
  3717  0D14  0B89               	decfsz	9,f
  3718  0D15  2D12               	goto	u2995
  3719  0D16  0821               	movf	___lwdiv@divisor+1,w
  3720  0D17  0223               	subwf	___lwdiv@dividend+1,w
  3721  0D18  1D03               	skipz
  3722  0D19  2D1C               	goto	u3005
  3723  0D1A  0820               	movf	___lwdiv@divisor,w
  3724  0D1B  0222               	subwf	___lwdiv@dividend,w
  3725  0D1C                     u3005:	
  3726  0D1C  1C03               	skipc
  3727  0D1D  2D23               	goto	l3094
  3728  0D1E  0820               	movf	___lwdiv@divisor,w
  3729  0D1F  02A2               	subwf	___lwdiv@dividend,f
  3730  0D20  0821               	movf	___lwdiv@divisor+1,w
  3731  0D21  3BA3               	subwfb	___lwdiv@dividend+1,f
  3732  0D22  1426               	bsf	___lwdiv@quotient,0
  3733  0D23                     l3094:	
  3734  0D23  3001               	movlw	1
  3735  0D24                     u3015:	
  3736  0D24  36A1               	lsrf	___lwdiv@divisor+1,f
  3737  0D25  0CA0               	rrf	___lwdiv@divisor,f
  3738  0D26  0B89               	decfsz	9,f
  3739  0D27  2D24               	goto	u3015
  3740  0D28  3001               	movlw	1
  3741  0D29  02A5               	subwf	___lwdiv@counter,f
  3742  0D2A  1D03               	btfss	3,2
  3743  0D2B  2D11               	goto	l3088
  3744  0D2C                     l3098:	
  3745  0D2C  0827               	movf	___lwdiv@quotient+1,w
  3746  0D2D  00A1               	movwf	?___lwdiv+1
  3747  0D2E  0826               	movf	___lwdiv@quotient,w
  3748  0D2F  00A0               	movwf	?___lwdiv
  3749  0D30  0008               	return
  3750  0D31                     __end_of___lwdiv:	
  3751                           
  3752                           	psect	text8
  3753  0BA8                     __ptext8:	
  3754 ;; *************** function _sendAcknowledgment *****************
  3755 ;; Defined at:
  3756 ;;		line 1098 in file "main.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  currentState    1    wreg     PTR unsigned char 
  3759 ;;		 -> currentStateBuffer(58), 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  currentState    1    3[BANK0 ] PTR unsigned char 
  3762 ;;		 -> currentStateBuffer(58), 
  3763 ;;  Tx_count        2    1[BANK0 ] int 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3774 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  3775 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  3776 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  3777 ;;Total ram usage:        4 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    2
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_applianceControl
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function _sendAcknowledgment
  3789  0BA8                     _sendAcknowledgment:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _sendAcknowledgment: [wreg+fsr1l+fsr1h+status,2+status,0]
  3793                           ;sendAcknowledgment@currentStateBuffer stored from wreg
  3794  0BA8  0020               	movlb	0	; select bank0
  3795  0BA9  00A3               	movwf	sendAcknowledgment@currentStateBuffer
  3796                           
  3797                           ;main.c: 1099: int Tx_count=0;
  3798  0BAA  01A1               	clrf	sendAcknowledgment@Tx_count
  3799  0BAB  01A2               	clrf	sendAcknowledgment@Tx_count+1
  3800  0BAC                     l3208:	
  3801                           ;main.c: 1100: while(Tx_count!=4)
  3802                           
  3803  0BAC  3004               	movlw	4
  3804  0BAD  0621               	xorwf	sendAcknowledgment@Tx_count,w
  3805  0BAE  0422               	iorwf	sendAcknowledgment@Tx_count+1,w
  3806  0BAF  1903               	btfsc	3,2
  3807  0BB0  0008               	return
  3808  0BB1                     l367:	
  3809                           ;main.c: 1101: {
  3810                           ;main.c: 1102: while (!TX1STAbits.TRMT);
  3811                           
  3812  0BB1  0023               	movlb	3	; select bank3
  3813  0BB2  1C9E               	btfss	30,1	;volatile
  3814  0BB3  2BB1               	goto	l367
  3815                           
  3816                           ;main.c: 1103: TX1REG = *currentStateBuffer;
  3817  0BB4  0020               	movlb	0	; select bank0
  3818  0BB5  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  3819  0BB6  0086               	movwf	6
  3820  0BB7  3001               	movlw	1	; select bank2/3
  3821  0BB8  0087               	movwf	7
  3822  0BB9  0801               	movf	1,w
  3823  0BBA  0023               	movlb	3	; select bank3
  3824  0BBB  009A               	movwf	26	;volatile
  3825                           
  3826                           ;main.c: 1104: *currentStateBuffer++;
  3827  0BBC  3001               	movlw	1
  3828  0BBD  0020               	movlb	0	; select bank0
  3829  0BBE  00A0               	movwf	??_sendAcknowledgment
  3830  0BBF  0820               	movf	??_sendAcknowledgment,w
  3831  0BC0  07A3               	addwf	sendAcknowledgment@currentStateBuffer,f
  3832                           
  3833                           ;main.c: 1105: Tx_count++;
  3834  0BC1  3001               	movlw	1
  3835  0BC2  07A1               	addwf	sendAcknowledgment@Tx_count,f
  3836  0BC3  3000               	movlw	0
  3837  0BC4  3DA2               	addwfc	sendAcknowledgment@Tx_count+1,f
  3838  0BC5  2BAC               	goto	l3208
  3839  0BC6                     __end_of_sendAcknowledgment:	
  3840                           
  3841                           	psect	text9
  3842  0E51                     __ptext9:	
  3843 ;; *************** function _hexadecimalToDecimal *****************
  3844 ;; Defined at:
  3845 ;;		line 854 in file "main.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  hexVal          1    wreg     PTR unsigned char 
  3848 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  hexVal          1   18[BANK0 ] PTR unsigned char 
  3851 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  3852 ;;  i               2   19[BANK0 ] int 
  3853 ;;  base            2   16[BANK0 ] int 
  3854 ;;  dec_val         2   14[BANK0 ] int 
  3855 ;;  len             2   12[BANK0 ] int 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2    8[BANK0 ] int 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  3866 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0
  3867 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  3868 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0
  3869 ;;Total ram usage:       13 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    3
  3872 ;; This function calls:
  3873 ;;		___wmul
  3874 ;;		_strlen
  3875 ;; This function is called by:
  3876 ;;		_applianceControl
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _hexadecimalToDecimal
  3882  0E51                     _hexadecimalToDecimal:	
  3883                           
  3884                           ;incstack = 0
  3885                           ; Regs used in _hexadecimalToDecimal: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3886                           ;hexadecimalToDecimal@hexVal stored from wreg
  3887  0E51  0020               	movlb	0	; select bank0
  3888  0E52  00B2               	movwf	hexadecimalToDecimal@hexVal
  3889                           
  3890                           ;main.c: 856: int len = strlen(hexVal);
  3891  0E53  0832               	movf	hexadecimalToDecimal@hexVal,w
  3892  0E54  318B  23E8  318E   	fcall	_strlen
  3893  0E57  0020               	movlb	0	; select bank0
  3894  0E58  0821               	movf	?_strlen+1,w
  3895  0E59  00AD               	movwf	hexadecimalToDecimal@len+1
  3896  0E5A  0820               	movf	?_strlen,w
  3897  0E5B  00AC               	movwf	hexadecimalToDecimal@len
  3898                           
  3899                           ;main.c: 859: int base = 1;
  3900  0E5C  3001               	movlw	1
  3901  0E5D  00B0               	movwf	hexadecimalToDecimal@base
  3902  0E5E  3000               	movlw	0
  3903  0E5F  00B1               	movwf	hexadecimalToDecimal@base+1
  3904                           
  3905                           ;main.c: 861: int dec_val = 0;
  3906  0E60  01AE               	clrf	hexadecimalToDecimal@dec_val
  3907  0E61  01AF               	clrf	hexadecimalToDecimal@dec_val+1
  3908                           
  3909                           ;main.c: 864: for (int i=len-1; i>=0; i--)
  3910  0E62  082C               	movf	hexadecimalToDecimal@len,w
  3911  0E63  3EFF               	addlw	255
  3912  0E64  00B3               	movwf	hexadecimalToDecimal@i
  3913  0E65  30FF               	movlw	255
  3914  0E66  3D2D               	addwfc	hexadecimalToDecimal@len+1,w
  3915  0E67  00B4               	movwf	hexadecimalToDecimal@i+1
  3916  0E68  1BB4               	btfsc	hexadecimalToDecimal@i+1,7
  3917  0E69  2ECB               	goto	l3242
  3918  0E6A                     l3222:	
  3919                           
  3920                           ;main.c: 865: {
  3921                           ;main.c: 869: if (hexVal[i]>='0' && hexVal[i]<='9')
  3922  0E6A  0833               	movf	hexadecimalToDecimal@i,w
  3923  0E6B  0732               	addwf	hexadecimalToDecimal@hexVal,w
  3924  0E6C  00AA               	movwf	??_hexadecimalToDecimal
  3925  0E6D  082A               	movf	??_hexadecimalToDecimal,w
  3926  0E6E  0086               	movwf	6
  3927  0E6F  0187               	clrf	7
  3928  0E70  3030               	movlw	48
  3929  0E71  0201               	subwf	1,w
  3930  0E72  1C03               	skipc
  3931  0E73  2E87               	goto	l3230
  3932  0E74  0833               	movf	hexadecimalToDecimal@i,w
  3933  0E75  0732               	addwf	hexadecimalToDecimal@hexVal,w
  3934  0E76  00AA               	movwf	??_hexadecimalToDecimal
  3935  0E77  082A               	movf	??_hexadecimalToDecimal,w
  3936  0E78  0086               	movwf	6
  3937  0E79  0187               	clrf	7
  3938  0E7A  303A               	movlw	58
  3939  0E7B  0201               	subwf	1,w
  3940  0E7C  1803               	skipnc
  3941  0E7D  2E87               	goto	l3230
  3942                           
  3943                           ;main.c: 870: {
  3944                           ;main.c: 871: dec_val += (hexVal[i] - 48)*base;
  3945  0E7E  0833               	movf	hexadecimalToDecimal@i,w
  3946  0E7F  0732               	addwf	hexadecimalToDecimal@hexVal,w
  3947  0E80  00AA               	movwf	??_hexadecimalToDecimal
  3948  0E81  082A               	movf	??_hexadecimalToDecimal,w
  3949  0E82  0086               	movwf	6
  3950  0E83  0187               	clrf	7
  3951  0E84  0801               	movf	1,w
  3952  0E85  3ED0               	addlw	208
  3953  0E86  2EA3               	goto	L3
  3954  0E87                     l3230:	
  3955                           ;main.c: 875: }
  3956                           
  3957                           ;main.c: 874: base = base * 16;
  3958                           
  3959                           
  3960                           ;main.c: 880: else if (hexVal[i]>='A' && hexVal[i]<='F')
  3961  0E87  0833               	movf	hexadecimalToDecimal@i,w
  3962  0E88  0732               	addwf	hexadecimalToDecimal@hexVal,w
  3963  0E89  00AA               	movwf	??_hexadecimalToDecimal
  3964  0E8A  082A               	movf	??_hexadecimalToDecimal,w
  3965  0E8B  0086               	movwf	6
  3966  0E8C  0187               	clrf	7
  3967  0E8D  3041               	movlw	65
  3968  0E8E  0201               	subwf	1,w
  3969  0E8F  1C03               	skipc
  3970  0E90  2EC5               	goto	l3238
  3971  0E91  0833               	movf	hexadecimalToDecimal@i,w
  3972  0E92  0732               	addwf	hexadecimalToDecimal@hexVal,w
  3973  0E93  00AA               	movwf	??_hexadecimalToDecimal
  3974  0E94  082A               	movf	??_hexadecimalToDecimal,w
  3975  0E95  0086               	movwf	6
  3976  0E96  0187               	clrf	7
  3977  0E97  3047               	movlw	71
  3978  0E98  0201               	subwf	1,w
  3979  0E99  1803               	skipnc
  3980  0E9A  2EC5               	goto	l3238
  3981                           
  3982                           ;main.c: 881: {
  3983                           ;main.c: 882: dec_val += (hexVal[i] - 55)*base;
  3984  0E9B  0833               	movf	hexadecimalToDecimal@i,w
  3985  0E9C  0732               	addwf	hexadecimalToDecimal@hexVal,w
  3986  0E9D  00AA               	movwf	??_hexadecimalToDecimal
  3987  0E9E  082A               	movf	??_hexadecimalToDecimal,w
  3988  0E9F  0086               	movwf	6
  3989  0EA0  0187               	clrf	7
  3990  0EA1  0801               	movf	1,w
  3991  0EA2  3EC9               	addlw	201
  3992  0EA3                     L3:	
  3993  0EA3  00A0               	movwf	___wmul@multiplier
  3994  0EA4  30FF               	movlw	255
  3995  0EA5  1803               	skipnc
  3996  0EA6  3000               	movlw	0
  3997  0EA7  00A1               	movwf	___wmul@multiplier+1
  3998  0EA8  0831               	movf	hexadecimalToDecimal@base+1,w
  3999  0EA9  00A3               	movwf	___wmul@multiplicand+1
  4000  0EAA  0830               	movf	hexadecimalToDecimal@base,w
  4001  0EAB  00A2               	movwf	___wmul@multiplicand
  4002  0EAC  318B  238C  318E   	fcall	___wmul
  4003  0EAF  0020               	movlb	0	; select bank0
  4004  0EB0  0820               	movf	?___wmul,w
  4005  0EB1  07AE               	addwf	hexadecimalToDecimal@dec_val,f
  4006  0EB2  0821               	movf	?___wmul+1,w
  4007  0EB3  3DAF               	addwfc	hexadecimalToDecimal@dec_val+1,f
  4008                           
  4009                           ;main.c: 885: base = base*16;
  4010  0EB4  0831               	movf	hexadecimalToDecimal@base+1,w
  4011  0EB5  00AB               	movwf	??_hexadecimalToDecimal+1
  4012  0EB6  0830               	movf	hexadecimalToDecimal@base,w
  4013  0EB7  00AA               	movwf	??_hexadecimalToDecimal
  4014  0EB8  0EAA               	swapf	??_hexadecimalToDecimal,f
  4015  0EB9  0EAB               	swapf	??_hexadecimalToDecimal+1,f
  4016  0EBA  30F0               	movlw	240
  4017  0EBB  05AB               	andwf	??_hexadecimalToDecimal+1,f
  4018  0EBC  082A               	movf	??_hexadecimalToDecimal,w
  4019  0EBD  390F               	andlw	15
  4020  0EBE  04AB               	iorwf	??_hexadecimalToDecimal+1,f
  4021  0EBF  30F0               	movlw	240
  4022  0EC0  05AA               	andwf	??_hexadecimalToDecimal,f
  4023  0EC1  082A               	movf	??_hexadecimalToDecimal,w
  4024  0EC2  00B0               	movwf	hexadecimalToDecimal@base
  4025  0EC3  082B               	movf	??_hexadecimalToDecimal+1,w
  4026  0EC4  00B1               	movwf	hexadecimalToDecimal@base+1
  4027  0EC5                     l3238:	
  4028  0EC5  30FF               	movlw	255
  4029  0EC6  07B3               	addwf	hexadecimalToDecimal@i,f
  4030  0EC7  30FF               	movlw	255
  4031  0EC8  3DB4               	addwfc	hexadecimalToDecimal@i+1,f
  4032  0EC9  1FB4               	btfss	hexadecimalToDecimal@i+1,7
  4033  0ECA  2E6A               	goto	l3222
  4034  0ECB                     l3242:	
  4035                           
  4036                           ;main.c: 886: }
  4037                           ;main.c: 887: }
  4038                           ;main.c: 889: return dec_val;
  4039  0ECB  082F               	movf	hexadecimalToDecimal@dec_val+1,w
  4040  0ECC  00A9               	movwf	?_hexadecimalToDecimal+1
  4041  0ECD  082E               	movf	hexadecimalToDecimal@dec_val,w
  4042  0ECE  00A8               	movwf	?_hexadecimalToDecimal
  4043  0ECF  0008               	return
  4044  0ED0                     __end_of_hexadecimalToDecimal:	
  4045                           
  4046                           	psect	text10
  4047  0BE8                     __ptext10:	
  4048 ;; *************** function _strlen *****************
  4049 ;; Defined at:
  4050 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  s               1    wreg     PTR const unsigned char 
  4053 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(5), 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4056 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(5), 
  4057 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  4058 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(5), 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2    0[BANK0 ] unsigned int 
  4061 ;; Registers used:
  4062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4071 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  4072 ;;Total ram usage:        8 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    2
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_applianceControl
  4079 ;;		_hexadecimalToDecimal
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _strlen
  4085  0BE8                     _strlen:	
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4089                           ;strlen@s stored from wreg
  4090  0BE8  0020               	movlb	0	; select bank0
  4091  0BE9  00A6               	movwf	strlen@s
  4092  0BEA  0826               	movf	strlen@s,w
  4093  0BEB  00A2               	movwf	??_strlen
  4094  0BEC  0822               	movf	??_strlen,w
  4095  0BED  00A7               	movwf	strlen@cp
  4096  0BEE                     l3012:	
  4097  0BEE  0827               	movf	strlen@cp,w
  4098  0BEF  0086               	movwf	6
  4099  0BF0  0187               	clrf	7
  4100  0BF1  0801               	movf	1,w
  4101  0BF2  1903               	btfsc	3,2
  4102  0BF3  2BF9               	goto	l3014
  4103  0BF4  3001               	movlw	1
  4104  0BF5  00A2               	movwf	??_strlen
  4105  0BF6  0822               	movf	??_strlen,w
  4106  0BF7  07A7               	addwf	strlen@cp,f
  4107  0BF8  2BEE               	goto	l3012
  4108  0BF9                     l3014:	
  4109  0BF9  0826               	movf	strlen@s,w
  4110  0BFA  00A2               	movwf	??_strlen
  4111  0BFB  3000               	movlw	0
  4112  0BFC  00A3               	movwf	??_strlen+1
  4113  0BFD  09A2               	comf	??_strlen,f
  4114  0BFE  09A3               	comf	??_strlen+1,f
  4115  0BFF  0AA2               	incf	??_strlen,f
  4116  0C00  1903               	skipnz
  4117  0C01  0AA3               	incf	??_strlen+1,f
  4118  0C02  0827               	movf	strlen@cp,w
  4119  0C03  00A4               	movwf	??_strlen+2
  4120  0C04  3000               	movlw	0
  4121  0C05  00A5               	movwf	??_strlen+3
  4122  0C06  0822               	movf	??_strlen,w
  4123  0C07  0724               	addwf	??_strlen+2,w
  4124  0C08  00A0               	movwf	?_strlen
  4125  0C09  0823               	movf	??_strlen+1,w
  4126  0C0A  3D25               	addwfc	??_strlen+3,w
  4127  0C0B  00A1               	movwf	?_strlen+1
  4128  0C0C  0008               	return
  4129  0C0D                     __end_of_strlen:	
  4130                           
  4131                           	psect	text11
  4132  0DE6                     __ptext11:	
  4133 ;; *************** function _atoi *****************
  4134 ;; Defined at:
  4135 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  s               1    wreg     PTR const unsigned char 
  4138 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  4141 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  4142 ;;  a               2   11[BANK0 ] int 
  4143 ;;  sign            1   10[BANK0 ] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    6[BANK0 ] int 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4154 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  4155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  4156 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  4157 ;;Total ram usage:        8 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    3
  4160 ;; This function calls:
  4161 ;;		___wmul
  4162 ;;		_isdigit
  4163 ;; This function is called by:
  4164 ;;		_applianceControl
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _atoi
  4170  0DE6                     _atoi:	
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4174                           ;atoi@s stored from wreg
  4175  0DE6  0020               	movlb	0	; select bank0
  4176  0DE7  00AD               	movwf	atoi@s
  4177  0DE8                     l3106:	
  4178  0DE8  082D               	movf	atoi@s,w
  4179  0DE9  0086               	movwf	6
  4180  0DEA  0187               	clrf	7
  4181  0DEB  3020               	movlw	32
  4182  0DEC  0601               	xorwf	1,w
  4183  0DED  1D03               	btfss	3,2
  4184  0DEE  2DF4               	goto	l3108
  4185  0DEF                     l3104:	
  4186  0DEF  3001               	movlw	1
  4187  0DF0  00A8               	movwf	??_atoi
  4188  0DF1  0828               	movf	??_atoi,w
  4189  0DF2  07AD               	addwf	atoi@s,f
  4190  0DF3  2DE8               	goto	l3106
  4191  0DF4                     l3108:	
  4192  0DF4  082D               	movf	atoi@s,w
  4193  0DF5  0086               	movwf	6
  4194  0DF6  0187               	clrf	7
  4195  0DF7  3009               	movlw	9
  4196  0DF8  0601               	xorwf	1,w
  4197  0DF9  1903               	btfsc	3,2
  4198  0DFA  2DEF               	goto	l3104
  4199  0DFB  01AB               	clrf	atoi@a
  4200  0DFC  01AC               	clrf	atoi@a+1
  4201  0DFD  01AA               	clrf	atoi@sign
  4202  0DFE  082D               	movf	atoi@s,w
  4203  0DFF  0086               	movwf	6
  4204  0E00  0187               	clrf	7
  4205  0E01  302D               	movlw	45
  4206  0E02  0601               	xorwf	1,w
  4207  0E03  1D03               	btfss	3,2
  4208  0E04  2E0A               	goto	l3116
  4209  0E05  3001               	movlw	1
  4210  0E06  00A8               	movwf	??_atoi
  4211  0E07  0828               	movf	??_atoi,w
  4212  0E08  07AA               	addwf	atoi@sign,f
  4213  0E09  2E11               	goto	l3122
  4214  0E0A                     l3116:	
  4215  0E0A  082D               	movf	atoi@s,w
  4216  0E0B  0086               	movwf	6
  4217  0E0C  0187               	clrf	7
  4218  0E0D  302B               	movlw	43
  4219  0E0E  0601               	xorwf	1,w
  4220  0E0F  1D03               	btfss	3,2
  4221  0E10  2E15               	goto	l3124
  4222  0E11                     l3122:	
  4223  0E11  3001               	movlw	1
  4224  0E12  00A8               	movwf	??_atoi
  4225  0E13  0828               	movf	??_atoi,w
  4226  0E14  07AD               	addwf	atoi@s,f
  4227  0E15                     l3124:	
  4228  0E15  082D               	movf	atoi@s,w
  4229  0E16  0086               	movwf	6
  4230  0E17  0187               	clrf	7
  4231  0E18  0801               	movf	1,w
  4232  0E19  318A  22FD  318D   	fcall	_isdigit
  4233  0E1C  1C03               	btfss	3,0
  4234  0E1D  2E3C               	goto	l3126
  4235  0E1E  0020               	movlb	0	; select bank0
  4236  0E1F  082C               	movf	atoi@a+1,w
  4237  0E20  00A1               	movwf	___wmul@multiplier+1
  4238  0E21  082B               	movf	atoi@a,w
  4239  0E22  00A0               	movwf	___wmul@multiplier
  4240  0E23  300A               	movlw	10
  4241  0E24  00A2               	movwf	___wmul@multiplicand
  4242  0E25  3000               	movlw	0
  4243  0E26  00A3               	movwf	___wmul@multiplicand+1
  4244  0E27  318B  238C  318D   	fcall	___wmul
  4245  0E2A  0020               	movlb	0	; select bank0
  4246  0E2B  082D               	movf	atoi@s,w
  4247  0E2C  0086               	movwf	6
  4248  0E2D  0187               	clrf	7
  4249  0E2E  0801               	movf	1,w
  4250  0E2F  0720               	addwf	?___wmul,w
  4251  0E30  00A8               	movwf	??_atoi
  4252  0E31  0821               	movf	?___wmul+1,w
  4253  0E32  1803               	skipnc
  4254  0E33  0A21               	incf	?___wmul+1,w
  4255  0E34  00A9               	movwf	??_atoi+1
  4256  0E35  0828               	movf	??_atoi,w
  4257  0E36  3ED0               	addlw	208
  4258  0E37  00AB               	movwf	atoi@a
  4259  0E38  30FF               	movlw	255
  4260  0E39  3D29               	addwfc	??_atoi+1,w
  4261  0E3A  00AC               	movwf	atoi@a+1
  4262  0E3B  2E11               	goto	l3122
  4263  0E3C                     l3126:	
  4264  0E3C  0020               	movlb	0	; select bank0
  4265  0E3D  082A               	movf	atoi@sign,w
  4266  0E3E  1903               	btfsc	3,2
  4267  0E3F  2E4C               	goto	l3132
  4268  0E40  092B               	comf	atoi@a,w
  4269  0E41  00A8               	movwf	??_atoi
  4270  0E42  092C               	comf	atoi@a+1,w
  4271  0E43  00A9               	movwf	??_atoi+1
  4272  0E44  0AA8               	incf	??_atoi,f
  4273  0E45  1903               	skipnz
  4274  0E46  0AA9               	incf	??_atoi+1,f
  4275  0E47  0828               	movf	??_atoi,w
  4276  0E48  00A6               	movwf	?_atoi
  4277  0E49  0829               	movf	??_atoi+1,w
  4278  0E4A  00A7               	movwf	?_atoi+1
  4279  0E4B  0008               	return
  4280  0E4C                     l3132:	
  4281  0E4C  082C               	movf	atoi@a+1,w
  4282  0E4D  00A7               	movwf	?_atoi+1
  4283  0E4E  082B               	movf	atoi@a,w
  4284  0E4F  00A6               	movwf	?_atoi
  4285  0E50  0008               	return
  4286  0E51                     __end_of_atoi:	
  4287                           
  4288                           	psect	text12
  4289  0AFD                     __ptext12:	
  4290 ;; *************** function _isdigit *****************
  4291 ;; Defined at:
  4292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  c               1    wreg     unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  c               1    1[BANK0 ] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;		None               void
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  4307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  4309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  4310 ;;Total ram usage:        2 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    2
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_atoi
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _isdigit
  4322  0AFD                     _isdigit:	
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4326                           ;isdigit@c stored from wreg
  4327  0AFD  0020               	movlb	0	; select bank0
  4328  0AFE  00A1               	movwf	isdigit@c
  4329  0AFF  01A0               	clrf	_isdigit$1027
  4330  0B00  303A               	movlw	58
  4331  0B01  0221               	subwf	isdigit@c,w
  4332  0B02  1803               	skipnc
  4333  0B03  2B0A               	goto	l3072
  4334  0B04  3030               	movlw	48
  4335  0B05  0221               	subwf	isdigit@c,w
  4336  0B06  1C03               	skipc
  4337  0B07  2B0A               	goto	l3072
  4338  0B08  01A0               	clrf	_isdigit$1027
  4339  0B09  0AA0               	incf	_isdigit$1027,f
  4340  0B0A                     l3072:	
  4341  0B0A  0C20               	rrf	_isdigit$1027,w
  4342  0B0B  0008               	return
  4343  0B0C                     __end_of_isdigit:	
  4344                           
  4345                           	psect	text13
  4346  0B8C                     __ptext13:	
  4347 ;; *************** function ___wmul *****************
  4348 ;; Defined at:
  4349 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4352 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  product         2    4[BANK0 ] unsigned int 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    0[BANK0 ] unsigned int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  4365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  4367 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  4368 ;;Total ram usage:        6 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    2
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_hexadecimalToDecimal
  4375 ;;		_atoi
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function ___wmul
  4381  0B8C                     ___wmul:	
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4385  0B8C  0020               	movlb	0	; select bank0
  4386  0B8D  01A4               	clrf	___wmul@product
  4387  0B8E  01A5               	clrf	___wmul@product+1
  4388  0B8F                     l3020:	
  4389  0B8F  1C20               	btfss	___wmul@multiplier,0
  4390  0B90  2B95               	goto	l426
  4391  0B91  0822               	movf	___wmul@multiplicand,w
  4392  0B92  07A4               	addwf	___wmul@product,f
  4393  0B93  0823               	movf	___wmul@multiplicand+1,w
  4394  0B94  3DA5               	addwfc	___wmul@product+1,f
  4395  0B95                     l426:	
  4396  0B95  3001               	movlw	1
  4397  0B96                     u2795:	
  4398  0B96  35A2               	lslf	___wmul@multiplicand,f
  4399  0B97  0DA3               	rlf	___wmul@multiplicand+1,f
  4400  0B98  0B89               	decfsz	9,f
  4401  0B99  2B96               	goto	u2795
  4402  0B9A  3001               	movlw	1
  4403  0B9B                     u2805:	
  4404  0B9B  36A1               	lsrf	___wmul@multiplier+1,f
  4405  0B9C  0CA0               	rrf	___wmul@multiplier,f
  4406  0B9D  0B89               	decfsz	9,f
  4407  0B9E  2B9B               	goto	u2805
  4408  0B9F  0820               	movf	___wmul@multiplier,w
  4409  0BA0  0421               	iorwf	___wmul@multiplier+1,w
  4410  0BA1  1D03               	btfss	3,2
  4411  0BA2  2B8F               	goto	l3020
  4412  0BA3  0825               	movf	___wmul@product+1,w
  4413  0BA4  00A1               	movwf	?___wmul+1
  4414  0BA5  0824               	movf	___wmul@product,w
  4415  0BA6  00A0               	movwf	?___wmul
  4416  0BA7  0008               	return
  4417  0BA8                     __end_of___wmul:	
  4418                           
  4419                           	psect	text14
  4420  0ED0                     __ptext14:	
  4421 ;; *************** function ___fttol *****************
  4422 ;; Defined at:
  4423 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  f1              3   30[BANK0 ] float 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  lval            4   39[BANK0 ] unsigned long 
  4428 ;;  exp1            1   43[BANK0 ] unsigned char 
  4429 ;;  sign1           1   38[BANK0 ] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  4   30[BANK0 ] long 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:       14 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    2
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_applianceControl
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function ___fttol
  4455  0ED0                     ___fttol:	
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4459  0ED0  0020               	movlb	0	; select bank0
  4460  0ED1  083E               	movf	___fttol@f1,w
  4461  0ED2  00C2               	movwf	??___fttol
  4462  0ED3  083F               	movf	___fttol@f1+1,w
  4463  0ED4  00C3               	movwf	??___fttol+1
  4464  0ED5  0840               	movf	___fttol@f1+2,w
  4465  0ED6  00C4               	movwf	??___fttol+2
  4466  0ED7  1003               	clrc
  4467  0ED8  0D43               	rlf	??___fttol+1,w
  4468  0ED9  0D44               	rlf	??___fttol+2,w
  4469  0EDA  00C5               	movwf	??___fttol+3
  4470  0EDB  0845               	movf	??___fttol+3,w
  4471  0EDC  00CB               	movwf	___fttol@exp1
  4472  0EDD  084B               	movf	___fttol@exp1,w
  4473  0EDE  1D03               	btfss	3,2
  4474  0EDF  2EE9               	goto	l3432
  4475  0EE0  3000               	movlw	0
  4476  0EE1  00C1               	movwf	?___fttol+3
  4477  0EE2  3000               	movlw	0
  4478  0EE3  00C0               	movwf	?___fttol+2
  4479  0EE4  3000               	movlw	0
  4480  0EE5  00BF               	movwf	?___fttol+1
  4481  0EE6  3000               	movlw	0
  4482  0EE7  00BE               	movwf	?___fttol
  4483  0EE8  0008               	return
  4484  0EE9                     l3432:	
  4485  0EE9  083E               	movf	___fttol@f1,w
  4486  0EEA  00C2               	movwf	??___fttol
  4487  0EEB  083F               	movf	___fttol@f1+1,w
  4488  0EEC  00C3               	movwf	??___fttol+1
  4489  0EED  0840               	movf	___fttol@f1+2,w
  4490  0EEE  00C4               	movwf	??___fttol+2
  4491  0EEF  3017               	movlw	23
  4492  0EF0                     u3485:	
  4493  0EF0  36C4               	lsrf	??___fttol+2,f
  4494  0EF1  0CC3               	rrf	??___fttol+1,f
  4495  0EF2  0CC2               	rrf	??___fttol,f
  4496  0EF3  0B89               	decfsz	9,f
  4497  0EF4  2EF0               	goto	u3485
  4498  0EF5  0842               	movf	??___fttol,w
  4499  0EF6  00C5               	movwf	??___fttol+3
  4500  0EF7  0845               	movf	??___fttol+3,w
  4501  0EF8  00C6               	movwf	___fttol@sign1
  4502  0EF9  17BF               	bsf	___fttol@f1+1,7
  4503  0EFA  30FF               	movlw	255
  4504  0EFB  05BE               	andwf	___fttol@f1,f
  4505  0EFC  30FF               	movlw	255
  4506  0EFD  05BF               	andwf	___fttol@f1+1,f
  4507  0EFE  3000               	movlw	0
  4508  0EFF  05C0               	andwf	___fttol@f1+2,f
  4509  0F00  083E               	movf	___fttol@f1,w
  4510  0F01  00C7               	movwf	___fttol@lval
  4511  0F02  083F               	movf	___fttol@f1+1,w
  4512  0F03  00C8               	movwf	___fttol@lval+1
  4513  0F04  0840               	movf	___fttol@f1+2,w
  4514  0F05  00C9               	movwf	___fttol@lval+2
  4515  0F06  01CA               	clrf	___fttol@lval+3
  4516  0F07  308E               	movlw	142
  4517  0F08  02CB               	subwf	___fttol@exp1,f
  4518  0F09  1FCB               	btfss	___fttol@exp1,7
  4519  0F0A  2F27               	goto	l3452
  4520  0F0B  084B               	movf	___fttol@exp1,w
  4521  0F0C  3A80               	xorlw	128
  4522  0F0D  3E8F               	addlw	143
  4523  0F0E  1803               	skipnc
  4524  0F0F  2F19               	goto	l3450
  4525  0F10  3000               	movlw	0
  4526  0F11  00C1               	movwf	?___fttol+3
  4527  0F12  3000               	movlw	0
  4528  0F13  00C0               	movwf	?___fttol+2
  4529  0F14  3000               	movlw	0
  4530  0F15  00BF               	movwf	?___fttol+1
  4531  0F16  3000               	movlw	0
  4532  0F17  00BE               	movwf	?___fttol
  4533  0F18  0008               	return
  4534  0F19                     l3450:	
  4535  0F19  3001               	movlw	1
  4536  0F1A                     u3515:	
  4537  0F1A  36CA               	lsrf	___fttol@lval+3,f
  4538  0F1B  0CC9               	rrf	___fttol@lval+2,f
  4539  0F1C  0CC8               	rrf	___fttol@lval+1,f
  4540  0F1D  0CC7               	rrf	___fttol@lval,f
  4541  0F1E  0B89               	decfsz	9,f
  4542  0F1F  2F1A               	goto	u3515
  4543  0F20  3001               	movlw	1
  4544  0F21  00C2               	movwf	??___fttol
  4545  0F22  0842               	movf	??___fttol,w
  4546  0F23  07CB               	addwf	___fttol@exp1,f
  4547  0F24  1903               	btfsc	3,2
  4548  0F25  2F40               	goto	l3460
  4549  0F26  2F19               	goto	l3450
  4550  0F27                     l3452:	
  4551  0F27  3018               	movlw	24
  4552  0F28  024B               	subwf	___fttol@exp1,w
  4553  0F29  1C03               	skipc
  4554  0F2A  2F3D               	goto	l693
  4555  0F2B  3000               	movlw	0
  4556  0F2C  00C1               	movwf	?___fttol+3
  4557  0F2D  3000               	movlw	0
  4558  0F2E  00C0               	movwf	?___fttol+2
  4559  0F2F  3000               	movlw	0
  4560  0F30  00BF               	movwf	?___fttol+1
  4561  0F31  3000               	movlw	0
  4562  0F32  00BE               	movwf	?___fttol
  4563  0F33  0008               	return
  4564  0F34                     l3458:	
  4565  0F34  3001               	movlw	1
  4566  0F35                     u3545:	
  4567  0F35  35C7               	lslf	___fttol@lval,f
  4568  0F36  0DC8               	rlf	___fttol@lval+1,f
  4569  0F37  0DC9               	rlf	___fttol@lval+2,f
  4570  0F38  0DCA               	rlf	___fttol@lval+3,f
  4571  0F39  0B89               	decfsz	9,f
  4572  0F3A  2F35               	goto	u3545
  4573  0F3B  3001               	movlw	1
  4574  0F3C  02CB               	subwf	___fttol@exp1,f
  4575  0F3D                     l693:	
  4576  0F3D  084B               	movf	___fttol@exp1,w
  4577  0F3E  1D03               	btfss	3,2
  4578  0F3F  2F34               	goto	l3458
  4579  0F40                     l3460:	
  4580  0F40  0846               	movf	___fttol@sign1,w
  4581  0F41  1903               	btfsc	3,2
  4582  0F42  2F4E               	goto	l3464
  4583  0F43  09C7               	comf	___fttol@lval,f
  4584  0F44  09C8               	comf	___fttol@lval+1,f
  4585  0F45  09C9               	comf	___fttol@lval+2,f
  4586  0F46  09CA               	comf	___fttol@lval+3,f
  4587  0F47  0AC7               	incf	___fttol@lval,f
  4588  0F48  1903               	skipnz
  4589  0F49  0AC8               	incf	___fttol@lval+1,f
  4590  0F4A  1903               	skipnz
  4591  0F4B  0AC9               	incf	___fttol@lval+2,f
  4592  0F4C  1903               	skipnz
  4593  0F4D  0ACA               	incf	___fttol@lval+3,f
  4594  0F4E                     l3464:	
  4595  0F4E  084A               	movf	___fttol@lval+3,w
  4596  0F4F  00C1               	movwf	?___fttol+3
  4597  0F50  0849               	movf	___fttol@lval+2,w
  4598  0F51  00C0               	movwf	?___fttol+2
  4599  0F52  0848               	movf	___fttol@lval+1,w
  4600  0F53  00BF               	movwf	?___fttol+1
  4601  0F54  0847               	movf	___fttol@lval,w
  4602  0F55  00BE               	movwf	?___fttol
  4603  0F56  0008               	return
  4604  0F57                     __end_of___fttol:	
  4605                           
  4606                           	psect	text15
  4607  064C                     __ptext15:	
  4608 ;; *************** function ___ftmul *****************
  4609 ;; Defined at:
  4610 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  f1              3    8[BANK0 ] float 
  4613 ;;  f2              3   11[BANK0 ] float 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  4616 ;;  sign            1   23[BANK0 ] unsigned char 
  4617 ;;  cntr            1   22[BANK0 ] unsigned char 
  4618 ;;  exp             1   18[BANK0 ] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  3    8[BANK0 ] float 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4631 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:       16 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    3
  4635 ;; This function calls:
  4636 ;;		___ftpack
  4637 ;; This function is called by:
  4638 ;;		_applianceControl
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function ___ftmul
  4644  064C                     ___ftmul:	
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4648  064C  0020               	movlb	0	; select bank0
  4649  064D  0828               	movf	___ftmul@f1,w
  4650  064E  00AE               	movwf	??___ftmul
  4651  064F  0829               	movf	___ftmul@f1+1,w
  4652  0650  00AF               	movwf	??___ftmul+1
  4653  0651  082A               	movf	___ftmul@f1+2,w
  4654  0652  00B0               	movwf	??___ftmul+2
  4655  0653  1003               	clrc
  4656  0654  0D2F               	rlf	??___ftmul+1,w
  4657  0655  0D30               	rlf	??___ftmul+2,w
  4658  0656  00B1               	movwf	??___ftmul+3
  4659  0657  0831               	movf	??___ftmul+3,w
  4660  0658  00B2               	movwf	___ftmul@exp
  4661  0659  0832               	movf	___ftmul@exp,w
  4662  065A  1D03               	btfss	3,2
  4663  065B  2E63               	goto	l3382
  4664  065C  3000               	movlw	0
  4665  065D  00A8               	movwf	?___ftmul
  4666  065E  3000               	movlw	0
  4667  065F  00A9               	movwf	?___ftmul+1
  4668  0660  3000               	movlw	0
  4669  0661  00AA               	movwf	?___ftmul+2
  4670  0662  0008               	return
  4671  0663                     l3382:	
  4672  0663  082B               	movf	___ftmul@f2,w
  4673  0664  00AE               	movwf	??___ftmul
  4674  0665  082C               	movf	___ftmul@f2+1,w
  4675  0666  00AF               	movwf	??___ftmul+1
  4676  0667  082D               	movf	___ftmul@f2+2,w
  4677  0668  00B0               	movwf	??___ftmul+2
  4678  0669  1003               	clrc
  4679  066A  0D2F               	rlf	??___ftmul+1,w
  4680  066B  0D30               	rlf	??___ftmul+2,w
  4681  066C  00B1               	movwf	??___ftmul+3
  4682  066D  0831               	movf	??___ftmul+3,w
  4683  066E  00B7               	movwf	___ftmul@sign
  4684  066F  0837               	movf	___ftmul@sign,w
  4685  0670  1D03               	btfss	3,2
  4686  0671  2E79               	goto	l3388
  4687  0672  3000               	movlw	0
  4688  0673  00A8               	movwf	?___ftmul
  4689  0674  3000               	movlw	0
  4690  0675  00A9               	movwf	?___ftmul+1
  4691  0676  3000               	movlw	0
  4692  0677  00AA               	movwf	?___ftmul+2
  4693  0678  0008               	return
  4694  0679                     l3388:	
  4695  0679  0837               	movf	___ftmul@sign,w
  4696  067A  3E7B               	addlw	123
  4697  067B  00AE               	movwf	??___ftmul
  4698  067C  082E               	movf	??___ftmul,w
  4699  067D  07B2               	addwf	___ftmul@exp,f
  4700  067E  0828               	movf	___ftmul@f1,w
  4701  067F  00AE               	movwf	??___ftmul
  4702  0680  0829               	movf	___ftmul@f1+1,w
  4703  0681  00AF               	movwf	??___ftmul+1
  4704  0682  082A               	movf	___ftmul@f1+2,w
  4705  0683  00B0               	movwf	??___ftmul+2
  4706  0684  3010               	movlw	16
  4707  0685                     u3375:	
  4708  0685  36B0               	lsrf	??___ftmul+2,f
  4709  0686  0CAF               	rrf	??___ftmul+1,f
  4710  0687  0CAE               	rrf	??___ftmul,f
  4711  0688  0B89               	decfsz	9,f
  4712  0689  2E85               	goto	u3375
  4713  068A  082E               	movf	??___ftmul,w
  4714  068B  00B1               	movwf	??___ftmul+3
  4715  068C  0831               	movf	??___ftmul+3,w
  4716  068D  00B7               	movwf	___ftmul@sign
  4717  068E  082B               	movf	___ftmul@f2,w
  4718  068F  00AE               	movwf	??___ftmul
  4719  0690  082C               	movf	___ftmul@f2+1,w
  4720  0691  00AF               	movwf	??___ftmul+1
  4721  0692  082D               	movf	___ftmul@f2+2,w
  4722  0693  00B0               	movwf	??___ftmul+2
  4723  0694  3010               	movlw	16
  4724  0695                     u3385:	
  4725  0695  36B0               	lsrf	??___ftmul+2,f
  4726  0696  0CAF               	rrf	??___ftmul+1,f
  4727  0697  0CAE               	rrf	??___ftmul,f
  4728  0698  0B89               	decfsz	9,f
  4729  0699  2E95               	goto	u3385
  4730  069A  082E               	movf	??___ftmul,w
  4731  069B  00B1               	movwf	??___ftmul+3
  4732  069C  0831               	movf	??___ftmul+3,w
  4733  069D  06B7               	xorwf	___ftmul@sign,f
  4734  069E  3080               	movlw	128
  4735  069F  00AE               	movwf	??___ftmul
  4736  06A0  082E               	movf	??___ftmul,w
  4737  06A1  05B7               	andwf	___ftmul@sign,f
  4738  06A2  17A9               	bsf	___ftmul@f1+1,7
  4739  06A3  17AC               	bsf	___ftmul@f2+1,7
  4740  06A4  30FF               	movlw	255
  4741  06A5  05AB               	andwf	___ftmul@f2,f
  4742  06A6  30FF               	movlw	255
  4743  06A7  05AC               	andwf	___ftmul@f2+1,f
  4744  06A8  3000               	movlw	0
  4745  06A9  05AD               	andwf	___ftmul@f2+2,f
  4746  06AA  3000               	movlw	0
  4747  06AB  00B3               	movwf	___ftmul@f3_as_product
  4748  06AC  3000               	movlw	0
  4749  06AD  00B4               	movwf	___ftmul@f3_as_product+1
  4750  06AE  3000               	movlw	0
  4751  06AF  00B5               	movwf	___ftmul@f3_as_product+2
  4752  06B0  3007               	movlw	7
  4753  06B1  00AE               	movwf	??___ftmul
  4754  06B2  082E               	movf	??___ftmul,w
  4755  06B3  00B6               	movwf	___ftmul@cntr
  4756  06B4                     l3400:	
  4757  06B4  1C28               	btfss	___ftmul@f1,0
  4758  06B5  2EBC               	goto	l3404
  4759  06B6  082B               	movf	___ftmul@f2,w
  4760  06B7  07B3               	addwf	___ftmul@f3_as_product,f
  4761  06B8  082C               	movf	___ftmul@f2+1,w
  4762  06B9  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  4763  06BA  082D               	movf	___ftmul@f2+2,w
  4764  06BB  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  4765  06BC                     l3404:	
  4766  06BC  3001               	movlw	1
  4767  06BD                     u3405:	
  4768  06BD  36AA               	lsrf	___ftmul@f1+2,f
  4769  06BE  0CA9               	rrf	___ftmul@f1+1,f
  4770  06BF  0CA8               	rrf	___ftmul@f1,f
  4771  06C0  0B89               	decfsz	9,f
  4772  06C1  2EBD               	goto	u3405
  4773  06C2  3001               	movlw	1
  4774  06C3                     u3415:	
  4775  06C3  35AB               	lslf	___ftmul@f2,f
  4776  06C4  0DAC               	rlf	___ftmul@f2+1,f
  4777  06C5  0DAD               	rlf	___ftmul@f2+2,f
  4778  06C6  0B89               	decfsz	9,f
  4779  06C7  2EC3               	goto	u3415
  4780  06C8  3001               	movlw	1
  4781  06C9  02B6               	subwf	___ftmul@cntr,f
  4782  06CA  1D03               	btfss	3,2
  4783  06CB  2EB4               	goto	l3400
  4784  06CC  3009               	movlw	9
  4785  06CD  00AE               	movwf	??___ftmul
  4786  06CE  082E               	movf	??___ftmul,w
  4787  06CF  00B6               	movwf	___ftmul@cntr
  4788  06D0                     l3412:	
  4789  06D0  1C28               	btfss	___ftmul@f1,0
  4790  06D1  2ED8               	goto	l3416
  4791  06D2  082B               	movf	___ftmul@f2,w
  4792  06D3  07B3               	addwf	___ftmul@f3_as_product,f
  4793  06D4  082C               	movf	___ftmul@f2+1,w
  4794  06D5  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  4795  06D6  082D               	movf	___ftmul@f2+2,w
  4796  06D7  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  4797  06D8                     l3416:	
  4798  06D8  3001               	movlw	1
  4799  06D9                     u3445:	
  4800  06D9  36AA               	lsrf	___ftmul@f1+2,f
  4801  06DA  0CA9               	rrf	___ftmul@f1+1,f
  4802  06DB  0CA8               	rrf	___ftmul@f1,f
  4803  06DC  0B89               	decfsz	9,f
  4804  06DD  2ED9               	goto	u3445
  4805  06DE  3001               	movlw	1
  4806  06DF                     u3455:	
  4807  06DF  36B5               	lsrf	___ftmul@f3_as_product+2,f
  4808  06E0  0CB4               	rrf	___ftmul@f3_as_product+1,f
  4809  06E1  0CB3               	rrf	___ftmul@f3_as_product,f
  4810  06E2  0B89               	decfsz	9,f
  4811  06E3  2EDF               	goto	u3455
  4812  06E4  3001               	movlw	1
  4813  06E5  02B6               	subwf	___ftmul@cntr,f
  4814  06E6  1D03               	btfss	3,2
  4815  06E7  2ED0               	goto	l3412
  4816  06E8  0833               	movf	___ftmul@f3_as_product,w
  4817  06E9  00A0               	movwf	___ftpack@arg
  4818  06EA  0834               	movf	___ftmul@f3_as_product+1,w
  4819  06EB  00A1               	movwf	___ftpack@arg+1
  4820  06EC  0835               	movf	___ftmul@f3_as_product+2,w
  4821  06ED  00A2               	movwf	___ftpack@arg+2
  4822  06EE  0832               	movf	___ftmul@exp,w
  4823  06EF  00AE               	movwf	??___ftmul
  4824  06F0  082E               	movf	??___ftmul,w
  4825  06F1  00A3               	movwf	___ftpack@exp
  4826  06F2  0837               	movf	___ftmul@sign,w
  4827  06F3  00AF               	movwf	??___ftmul+1
  4828  06F4  082F               	movf	??___ftmul+1,w
  4829  06F5  00A4               	movwf	___ftpack@sign
  4830  06F6  318D  2581         	fcall	___ftpack
  4831  06F8  0020               	movlb	0	; select bank0
  4832  06F9  0820               	movf	?___ftpack,w
  4833  06FA  00A8               	movwf	?___ftmul
  4834  06FB  0821               	movf	?___ftpack+1,w
  4835  06FC  00A9               	movwf	?___ftmul+1
  4836  06FD  0822               	movf	?___ftpack+2,w
  4837  06FE  00AA               	movwf	?___ftmul+2
  4838  06FF  0008               	return
  4839  0700                     __end_of___ftmul:	
  4840                           
  4841                           	psect	text16
  4842  0F57                     __ptext16:	
  4843 ;; *************** function ___ftdiv *****************
  4844 ;; Defined at:
  4845 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  f2              3   14[BANK0 ] float 
  4848 ;;  f1              3   17[BANK0 ] float 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  f3              3   25[BANK0 ] float 
  4851 ;;  sign            1   29[BANK0 ] unsigned char 
  4852 ;;  exp             1   28[BANK0 ] unsigned char 
  4853 ;;  cntr            1   24[BANK0 ] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  3   14[BANK0 ] float 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4863 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  4864 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  4865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  4866 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0
  4867 ;;Total ram usage:       16 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    3
  4870 ;; This function calls:
  4871 ;;		___ftpack
  4872 ;; This function is called by:
  4873 ;;		_applianceControl
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function ___ftdiv
  4879  0F57                     ___ftdiv:	
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4883  0F57  0020               	movlb	0	; select bank0
  4884  0F58  0831               	movf	___ftdiv@f1,w
  4885  0F59  00B4               	movwf	??___ftdiv
  4886  0F5A  0832               	movf	___ftdiv@f1+1,w
  4887  0F5B  00B5               	movwf	??___ftdiv+1
  4888  0F5C  0833               	movf	___ftdiv@f1+2,w
  4889  0F5D  00B6               	movwf	??___ftdiv+2
  4890  0F5E  1003               	clrc
  4891  0F5F  0D35               	rlf	??___ftdiv+1,w
  4892  0F60  0D36               	rlf	??___ftdiv+2,w
  4893  0F61  00B7               	movwf	??___ftdiv+3
  4894  0F62  0837               	movf	??___ftdiv+3,w
  4895  0F63  00BC               	movwf	___ftdiv@exp
  4896  0F64  083C               	movf	___ftdiv@exp,w
  4897  0F65  1D03               	btfss	3,2
  4898  0F66  2F6E               	goto	l3340
  4899  0F67  3000               	movlw	0
  4900  0F68  00AE               	movwf	?___ftdiv
  4901  0F69  3000               	movlw	0
  4902  0F6A  00AF               	movwf	?___ftdiv+1
  4903  0F6B  3000               	movlw	0
  4904  0F6C  00B0               	movwf	?___ftdiv+2
  4905  0F6D  0008               	return
  4906  0F6E                     l3340:	
  4907  0F6E  082E               	movf	___ftdiv@f2,w
  4908  0F6F  00B4               	movwf	??___ftdiv
  4909  0F70  082F               	movf	___ftdiv@f2+1,w
  4910  0F71  00B5               	movwf	??___ftdiv+1
  4911  0F72  0830               	movf	___ftdiv@f2+2,w
  4912  0F73  00B6               	movwf	??___ftdiv+2
  4913  0F74  1003               	clrc
  4914  0F75  0D35               	rlf	??___ftdiv+1,w
  4915  0F76  0D36               	rlf	??___ftdiv+2,w
  4916  0F77  00B7               	movwf	??___ftdiv+3
  4917  0F78  0837               	movf	??___ftdiv+3,w
  4918  0F79  00BD               	movwf	___ftdiv@sign
  4919  0F7A  083D               	movf	___ftdiv@sign,w
  4920  0F7B  1D03               	btfss	3,2
  4921  0F7C  2F84               	goto	l3346
  4922  0F7D  3000               	movlw	0
  4923  0F7E  00AE               	movwf	?___ftdiv
  4924  0F7F  3000               	movlw	0
  4925  0F80  00AF               	movwf	?___ftdiv+1
  4926  0F81  3000               	movlw	0
  4927  0F82  00B0               	movwf	?___ftdiv+2
  4928  0F83  0008               	return
  4929  0F84                     l3346:	
  4930  0F84  3000               	movlw	0
  4931  0F85  00B9               	movwf	___ftdiv@f3
  4932  0F86  3000               	movlw	0
  4933  0F87  00BA               	movwf	___ftdiv@f3+1
  4934  0F88  3000               	movlw	0
  4935  0F89  00BB               	movwf	___ftdiv@f3+2
  4936  0F8A  3089               	movlw	137
  4937  0F8B  073D               	addwf	___ftdiv@sign,w
  4938  0F8C  00B4               	movwf	??___ftdiv
  4939  0F8D  0834               	movf	??___ftdiv,w
  4940  0F8E  02BC               	subwf	___ftdiv@exp,f
  4941  0F8F  0831               	movf	___ftdiv@f1,w
  4942  0F90  00B4               	movwf	??___ftdiv
  4943  0F91  0832               	movf	___ftdiv@f1+1,w
  4944  0F92  00B5               	movwf	??___ftdiv+1
  4945  0F93  0833               	movf	___ftdiv@f1+2,w
  4946  0F94  00B6               	movwf	??___ftdiv+2
  4947  0F95  3010               	movlw	16
  4948  0F96                     u3295:	
  4949  0F96  36B6               	lsrf	??___ftdiv+2,f
  4950  0F97  0CB5               	rrf	??___ftdiv+1,f
  4951  0F98  0CB4               	rrf	??___ftdiv,f
  4952  0F99  0B89               	decfsz	9,f
  4953  0F9A  2F96               	goto	u3295
  4954  0F9B  0834               	movf	??___ftdiv,w
  4955  0F9C  00B7               	movwf	??___ftdiv+3
  4956  0F9D  0837               	movf	??___ftdiv+3,w
  4957  0F9E  00BD               	movwf	___ftdiv@sign
  4958  0F9F  082E               	movf	___ftdiv@f2,w
  4959  0FA0  00B4               	movwf	??___ftdiv
  4960  0FA1  082F               	movf	___ftdiv@f2+1,w
  4961  0FA2  00B5               	movwf	??___ftdiv+1
  4962  0FA3  0830               	movf	___ftdiv@f2+2,w
  4963  0FA4  00B6               	movwf	??___ftdiv+2
  4964  0FA5  3010               	movlw	16
  4965  0FA6                     u3305:	
  4966  0FA6  36B6               	lsrf	??___ftdiv+2,f
  4967  0FA7  0CB5               	rrf	??___ftdiv+1,f
  4968  0FA8  0CB4               	rrf	??___ftdiv,f
  4969  0FA9  0B89               	decfsz	9,f
  4970  0FAA  2FA6               	goto	u3305
  4971  0FAB  0834               	movf	??___ftdiv,w
  4972  0FAC  00B7               	movwf	??___ftdiv+3
  4973  0FAD  0837               	movf	??___ftdiv+3,w
  4974  0FAE  06BD               	xorwf	___ftdiv@sign,f
  4975  0FAF  3080               	movlw	128
  4976  0FB0  00B4               	movwf	??___ftdiv
  4977  0FB1  0834               	movf	??___ftdiv,w
  4978  0FB2  05BD               	andwf	___ftdiv@sign,f
  4979  0FB3  17B2               	bsf	___ftdiv@f1+1,7
  4980  0FB4  30FF               	movlw	255
  4981  0FB5  05B1               	andwf	___ftdiv@f1,f
  4982  0FB6  30FF               	movlw	255
  4983  0FB7  05B2               	andwf	___ftdiv@f1+1,f
  4984  0FB8  3000               	movlw	0
  4985  0FB9  05B3               	andwf	___ftdiv@f1+2,f
  4986  0FBA  17AF               	bsf	___ftdiv@f2+1,7
  4987  0FBB  30FF               	movlw	255
  4988  0FBC  05AE               	andwf	___ftdiv@f2,f
  4989  0FBD  30FF               	movlw	255
  4990  0FBE  05AF               	andwf	___ftdiv@f2+1,f
  4991  0FBF  3000               	movlw	0
  4992  0FC0  05B0               	andwf	___ftdiv@f2+2,f
  4993  0FC1  3018               	movlw	24
  4994  0FC2  00B4               	movwf	??___ftdiv
  4995  0FC3  0834               	movf	??___ftdiv,w
  4996  0FC4  00B8               	movwf	___ftdiv@cntr
  4997  0FC5                     l3360:	
  4998  0FC5  3001               	movlw	1
  4999  0FC6                     u3315:	
  5000  0FC6  35B9               	lslf	___ftdiv@f3,f
  5001  0FC7  0DBA               	rlf	___ftdiv@f3+1,f
  5002  0FC8  0DBB               	rlf	___ftdiv@f3+2,f
  5003  0FC9  0B89               	decfsz	9,f
  5004  0FCA  2FC6               	goto	u3315
  5005  0FCB  0830               	movf	___ftdiv@f2+2,w
  5006  0FCC  0233               	subwf	___ftdiv@f1+2,w
  5007  0FCD  1D03               	skipz
  5008  0FCE  2FD5               	goto	u3325
  5009  0FCF  082F               	movf	___ftdiv@f2+1,w
  5010  0FD0  0232               	subwf	___ftdiv@f1+1,w
  5011  0FD1  1D03               	skipz
  5012  0FD2  2FD5               	goto	u3325
  5013  0FD3  082E               	movf	___ftdiv@f2,w
  5014  0FD4  0231               	subwf	___ftdiv@f1,w
  5015  0FD5                     u3325:	
  5016  0FD5  1C03               	skipc
  5017  0FD6  2FDE               	goto	l3368
  5018  0FD7  082E               	movf	___ftdiv@f2,w
  5019  0FD8  02B1               	subwf	___ftdiv@f1,f
  5020  0FD9  082F               	movf	___ftdiv@f2+1,w
  5021  0FDA  3BB2               	subwfb	___ftdiv@f1+1,f
  5022  0FDB  0830               	movf	___ftdiv@f2+2,w
  5023  0FDC  3BB3               	subwfb	___ftdiv@f1+2,f
  5024  0FDD  1439               	bsf	___ftdiv@f3,0
  5025  0FDE                     l3368:	
  5026  0FDE  3001               	movlw	1
  5027  0FDF                     u3335:	
  5028  0FDF  35B1               	lslf	___ftdiv@f1,f
  5029  0FE0  0DB2               	rlf	___ftdiv@f1+1,f
  5030  0FE1  0DB3               	rlf	___ftdiv@f1+2,f
  5031  0FE2  0B89               	decfsz	9,f
  5032  0FE3  2FDF               	goto	u3335
  5033  0FE4  3001               	movlw	1
  5034  0FE5  02B8               	subwf	___ftdiv@cntr,f
  5035  0FE6  1D03               	btfss	3,2
  5036  0FE7  2FC5               	goto	l3360
  5037  0FE8  0839               	movf	___ftdiv@f3,w
  5038  0FE9  00A0               	movwf	___ftpack@arg
  5039  0FEA  083A               	movf	___ftdiv@f3+1,w
  5040  0FEB  00A1               	movwf	___ftpack@arg+1
  5041  0FEC  083B               	movf	___ftdiv@f3+2,w
  5042  0FED  00A2               	movwf	___ftpack@arg+2
  5043  0FEE  083C               	movf	___ftdiv@exp,w
  5044  0FEF  00B4               	movwf	??___ftdiv
  5045  0FF0  0834               	movf	??___ftdiv,w
  5046  0FF1  00A3               	movwf	___ftpack@exp
  5047  0FF2  083D               	movf	___ftdiv@sign,w
  5048  0FF3  00B5               	movwf	??___ftdiv+1
  5049  0FF4  0835               	movf	??___ftdiv+1,w
  5050  0FF5  00A4               	movwf	___ftpack@sign
  5051  0FF6  318D  2581         	fcall	___ftpack
  5052  0FF8  0020               	movlb	0	; select bank0
  5053  0FF9  0820               	movf	?___ftpack,w
  5054  0FFA  00AE               	movwf	?___ftdiv
  5055  0FFB  0821               	movf	?___ftpack+1,w
  5056  0FFC  00AF               	movwf	?___ftdiv+1
  5057  0FFD  0822               	movf	?___ftpack+2,w
  5058  0FFE  00B0               	movwf	?___ftdiv+2
  5059  0FFF  0008               	return
  5060  1000                     __end_of___ftdiv:	
  5061                           
  5062                           	psect	text17
  5063  0BC6                     __ptext17:	
  5064 ;; *************** function ___awtoft *****************
  5065 ;; Defined at:
  5066 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  c               2    8[BANK0 ] int 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  sign            1   13[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  3    8[BANK0 ] float 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, pclath, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5080 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  5081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  5082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  5083 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  5084 ;;Total ram usage:        6 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		___ftpack
  5089 ;; This function is called by:
  5090 ;;		_applianceControl
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function ___awtoft
  5096  0BC6                     ___awtoft:	
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5100  0BC6  0020               	movlb	0	; select bank0
  5101  0BC7  01AD               	clrf	___awtoft@sign
  5102  0BC8  1FA9               	btfss	___awtoft@c+1,7
  5103  0BC9  2BD1               	goto	l3330
  5104  0BCA  09A8               	comf	___awtoft@c,f
  5105  0BCB  09A9               	comf	___awtoft@c+1,f
  5106  0BCC  0AA8               	incf	___awtoft@c,f
  5107  0BCD  1903               	skipnz
  5108  0BCE  0AA9               	incf	___awtoft@c+1,f
  5109  0BCF  01AD               	clrf	___awtoft@sign
  5110  0BD0  0AAD               	incf	___awtoft@sign,f
  5111  0BD1                     l3330:	
  5112  0BD1  0828               	movf	___awtoft@c,w
  5113  0BD2  00A0               	movwf	___ftpack@arg
  5114  0BD3  0829               	movf	___awtoft@c+1,w
  5115  0BD4  00A1               	movwf	___ftpack@arg+1
  5116  0BD5  01A2               	clrf	___ftpack@arg+2
  5117  0BD6  308E               	movlw	142
  5118  0BD7  00AB               	movwf	??___awtoft
  5119  0BD8  082B               	movf	??___awtoft,w
  5120  0BD9  00A3               	movwf	___ftpack@exp
  5121  0BDA  082D               	movf	___awtoft@sign,w
  5122  0BDB  00AC               	movwf	??___awtoft+1
  5123  0BDC  082C               	movf	??___awtoft+1,w
  5124  0BDD  00A4               	movwf	___ftpack@sign
  5125  0BDE  318D  2581         	fcall	___ftpack
  5126  0BE0  0020               	movlb	0	; select bank0
  5127  0BE1  0820               	movf	?___ftpack,w
  5128  0BE2  00A8               	movwf	?___awtoft
  5129  0BE3  0821               	movf	?___ftpack+1,w
  5130  0BE4  00A9               	movwf	?___awtoft+1
  5131  0BE5  0822               	movf	?___ftpack+2,w
  5132  0BE6  00AA               	movwf	?___awtoft+2
  5133  0BE7  0008               	return
  5134  0BE8                     __end_of___awtoft:	
  5135                           
  5136                           	psect	text18
  5137  0D81                     __ptext18:	
  5138 ;; *************** function ___ftpack *****************
  5139 ;; Defined at:
  5140 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  arg             3    0[BANK0 ] unsigned um
  5143 ;;  exp             1    3[BANK0 ] unsigned char 
  5144 ;;  sign            1    4[BANK0 ] unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  3    0[BANK0 ] float 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5156 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0
  5159 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:        8 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    2
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		___awtoft
  5167 ;;		___ftdiv
  5168 ;;		___ftmul
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function ___ftpack
  5174  0D81                     ___ftpack:	
  5175                           
  5176                           ;incstack = 0
  5177                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5178  0D81  0020               	movlb	0	; select bank0
  5179  0D82  0823               	movf	___ftpack@exp,w
  5180  0D83  1903               	btfsc	3,2
  5181  0D84  2D8A               	goto	l3036
  5182  0D85  0822               	movf	___ftpack@arg+2,w
  5183  0D86  0421               	iorwf	___ftpack@arg+1,w
  5184  0D87  0420               	iorwf	___ftpack@arg,w
  5185  0D88  1D03               	skipz
  5186  0D89  2D9B               	goto	l3042
  5187  0D8A                     l3036:	
  5188  0D8A  3000               	movlw	0
  5189  0D8B  00A0               	movwf	?___ftpack
  5190  0D8C  3000               	movlw	0
  5191  0D8D  00A1               	movwf	?___ftpack+1
  5192  0D8E  3000               	movlw	0
  5193  0D8F  00A2               	movwf	?___ftpack+2
  5194  0D90  0008               	return
  5195  0D91                     l3040:	
  5196  0D91  3001               	movlw	1
  5197  0D92  00A5               	movwf	??___ftpack
  5198  0D93  0825               	movf	??___ftpack,w
  5199  0D94  07A3               	addwf	___ftpack@exp,f
  5200  0D95  3001               	movlw	1
  5201  0D96                     u2845:	
  5202  0D96  36A2               	lsrf	___ftpack@arg+2,f
  5203  0D97  0CA1               	rrf	___ftpack@arg+1,f
  5204  0D98  0CA0               	rrf	___ftpack@arg,f
  5205  0D99  0B89               	decfsz	9,f
  5206  0D9A  2D96               	goto	u2845
  5207  0D9B                     l3042:	
  5208  0D9B  30FE               	movlw	254
  5209  0D9C  0522               	andwf	___ftpack@arg+2,w
  5210  0D9D  1903               	btfsc	3,2
  5211  0D9E  2DB4               	goto	l602
  5212  0D9F  2D91               	goto	l3040
  5213  0DA0                     l3044:	
  5214  0DA0  3001               	movlw	1
  5215  0DA1  00A5               	movwf	??___ftpack
  5216  0DA2  0825               	movf	??___ftpack,w
  5217  0DA3  07A3               	addwf	___ftpack@exp,f
  5218  0DA4  3001               	movlw	1
  5219  0DA5  07A0               	addwf	___ftpack@arg,f
  5220  0DA6  3000               	movlw	0
  5221  0DA7  1803               	skipnc
  5222  0DA8  3001               	movlw	1
  5223  0DA9  07A1               	addwf	___ftpack@arg+1,f
  5224  0DAA  3000               	movlw	0
  5225  0DAB  1803               	skipnc
  5226  0DAC  3001               	movlw	1
  5227  0DAD  07A2               	addwf	___ftpack@arg+2,f
  5228  0DAE  3001               	movlw	1
  5229  0DAF                     u2865:	
  5230  0DAF  36A2               	lsrf	___ftpack@arg+2,f
  5231  0DB0  0CA1               	rrf	___ftpack@arg+1,f
  5232  0DB1  0CA0               	rrf	___ftpack@arg,f
  5233  0DB2  0B89               	decfsz	9,f
  5234  0DB3  2DAF               	goto	u2865
  5235  0DB4                     l602:	
  5236  0DB4  30FF               	movlw	255
  5237  0DB5  0522               	andwf	___ftpack@arg+2,w
  5238  0DB6  1903               	btfsc	3,2
  5239  0DB7  2DC1               	goto	l3052
  5240  0DB8  2DA0               	goto	l3044
  5241  0DB9                     l3050:	
  5242  0DB9  3001               	movlw	1
  5243  0DBA  02A3               	subwf	___ftpack@exp,f
  5244  0DBB  3001               	movlw	1
  5245  0DBC                     u2885:	
  5246  0DBC  35A0               	lslf	___ftpack@arg,f
  5247  0DBD  0DA1               	rlf	___ftpack@arg+1,f
  5248  0DBE  0DA2               	rlf	___ftpack@arg+2,f
  5249  0DBF  0B89               	decfsz	9,f
  5250  0DC0  2DBC               	goto	u2885
  5251  0DC1                     l3052:	
  5252  0DC1  1BA1               	btfsc	___ftpack@arg+1,7
  5253  0DC2  2DC7               	goto	l609
  5254  0DC3  3002               	movlw	2
  5255  0DC4  0223               	subwf	___ftpack@exp,w
  5256  0DC5  1803               	skipnc
  5257  0DC6  2DB9               	goto	l3050
  5258  0DC7                     l609:	
  5259  0DC7  1823               	btfsc	___ftpack@exp,0
  5260  0DC8  2DCF               	goto	l610
  5261  0DC9  30FF               	movlw	255
  5262  0DCA  05A0               	andwf	___ftpack@arg,f
  5263  0DCB  307F               	movlw	127
  5264  0DCC  05A1               	andwf	___ftpack@arg+1,f
  5265  0DCD  30FF               	movlw	255
  5266  0DCE  05A2               	andwf	___ftpack@arg+2,f
  5267  0DCF                     l610:	
  5268  0DCF  1003               	clrc
  5269  0DD0  0CA3               	rrf	___ftpack@exp,f
  5270  0DD1  0823               	movf	___ftpack@exp,w
  5271  0DD2  00A5               	movwf	??___ftpack
  5272  0DD3  01A6               	clrf	??___ftpack+1
  5273  0DD4  01A7               	clrf	??___ftpack+2
  5274  0DD5  3010               	movlw	16
  5275  0DD6                     u2925:	
  5276  0DD6  35A5               	lslf	??___ftpack,f
  5277  0DD7  0DA6               	rlf	??___ftpack+1,f
  5278  0DD8  0DA7               	rlf	??___ftpack+2,f
  5279  0DD9  0B89               	decfsz	9,f
  5280  0DDA  2DD6               	goto	u2925
  5281  0DDB  0825               	movf	??___ftpack,w
  5282  0DDC  04A0               	iorwf	___ftpack@arg,f
  5283  0DDD  0826               	movf	??___ftpack+1,w
  5284  0DDE  04A1               	iorwf	___ftpack@arg+1,f
  5285  0DDF  0827               	movf	??___ftpack+2,w
  5286  0DE0  04A2               	iorwf	___ftpack@arg+2,f
  5287  0DE1  0824               	movf	___ftpack@sign,w
  5288  0DE2  1903               	btfsc	3,2
  5289  0DE3  0008               	return
  5290  0DE4  17A2               	bsf	___ftpack@arg+2,7
  5291  0DE5  0008               	return
  5292  0DE6                     __end_of___ftpack:	
  5293                           
  5294                           	psect	text19
  5295  07ED                     __ptext19:	
  5296 ;; *************** function _allPeripheralInit *****************
  5297 ;; Defined at:
  5298 ;;		line 846 in file "main.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    3
  5319 ;; This function calls:
  5320 ;;		_CCP10_Initialize
  5321 ;;		_CCP8_Initialize
  5322 ;;		_EUSART2_Initialize
  5323 ;;		_EUSART_Initialize
  5324 ;;		_TMR1_Initialize
  5325 ;;		_TMR2_Initialize
  5326 ;; This function is called by:
  5327 ;;		_main
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _allPeripheralInit
  5333  07ED                     _allPeripheralInit:	
  5334                           
  5335                           ;main.c: 847: EUSART_Initialize();
  5336                           
  5337                           ;incstack = 0
  5338                           ; Regs used in _allPeripheralInit: [wreg+status,2+status,0+pclath+cstack]
  5339  07ED  318B  235D  3187   	fcall	_EUSART_Initialize
  5340                           
  5341                           ;main.c: 848: EUSART2_Initialize();
  5342  07F0  318B  2347  3187   	fcall	_EUSART2_Initialize
  5343                           
  5344                           ;main.c: 849: TMR1_Initialize();
  5345  07F3  318A  22E3  3187   	fcall	_TMR1_Initialize
  5346                           
  5347                           ;main.c: 850: TMR2_Initialize();
  5348  07F6  318A  22D9  3187   	fcall	_TMR2_Initialize
  5349                           
  5350                           ;main.c: 851: CCP10_Initialize();
  5351  07F9  318A  22C5  3187   	fcall	_CCP10_Initialize
  5352                           
  5353                           ;main.c: 852: CCP8_Initialize();
  5354  07FC  318A  22CF         	fcall	_CCP8_Initialize
  5355  07FE  0008               	return
  5356  07FF                     __end_of_allPeripheralInit:	
  5357                           
  5358                           	psect	text20
  5359  0AD9                     __ptext20:	
  5360 ;; *************** function _TMR2_Initialize *****************
  5361 ;; Defined at:
  5362 ;;		line 1000 in file "main.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    2
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_allPeripheralInit
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _TMR2_Initialize
  5392  0AD9                     _TMR2_Initialize:	
  5393                           
  5394                           ;main.c: 1005: T2CON = 0x08;
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5398  0AD9  3008               	movlw	8
  5399  0ADA  0020               	movlb	0	; select bank0
  5400  0ADB  009C               	movwf	28	;volatile
  5401                           
  5402                           ;main.c: 1011: TMR2 = 0x00;
  5403  0ADC  019A               	clrf	26	;volatile
  5404                           
  5405                           ;main.c: 1014: PIR1bits.TMR2IF = 0;
  5406  0ADD  1091               	bcf	17,1	;volatile
  5407                           
  5408                           ;main.c: 1017: PIE1bits.TMR2IE = 1;
  5409  0ADE  0021               	movlb	1	; select bank1
  5410  0ADF  1491               	bsf	17,1	;volatile
  5411                           
  5412                           ;main.c: 1018: GIE = 1;
  5413  0AE0  178B               	bsf	11,7	;volatile
  5414                           
  5415                           ;main.c: 1021: PEIE = 1;
  5416  0AE1  170B               	bsf	11,6	;volatile
  5417  0AE2  0008               	return
  5418  0AE3                     __end_of_TMR2_Initialize:	
  5419                           
  5420                           	psect	text21
  5421  0AE3                     __ptext21:	
  5422 ;; *************** function _TMR1_Initialize *****************
  5423 ;; Defined at:
  5424 ;;		line 968 in file "main.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		status,2
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    2
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_allPeripheralInit
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _TMR1_Initialize
  5454  0AE3                     _TMR1_Initialize:	
  5455                           
  5456                           ;main.c: 971: T1CON = 0x00;
  5457                           
  5458                           ;incstack = 0
  5459                           ; Regs used in _TMR1_Initialize: [status,2]
  5460  0AE3  0020               	movlb	0	; select bank0
  5461  0AE4  0198               	clrf	24	;volatile
  5462                           
  5463                           ;main.c: 974: T1GCON = 0x00;
  5464  0AE5  0199               	clrf	25	;volatile
  5465                           
  5466                           ;main.c: 977: TMR1H = 0x00;
  5467  0AE6  0197               	clrf	23	;volatile
  5468                           
  5469                           ;main.c: 980: TMR1L = 0x00;
  5470  0AE7  0196               	clrf	22	;volatile
  5471                           
  5472                           ;main.c: 983: PIR1bits.TMR1IF = 0;
  5473  0AE8  1011               	bcf	17,0	;volatile
  5474                           
  5475                           ;main.c: 986: PIE1bits.TMR1IE = 1;
  5476  0AE9  0021               	movlb	1	; select bank1
  5477  0AEA  1411               	bsf	17,0	;volatile
  5478                           
  5479                           ;main.c: 992: GIE = 1;
  5480  0AEB  178B               	bsf	11,7	;volatile
  5481                           
  5482                           ;main.c: 995: PEIE = 1;
  5483  0AEC  170B               	bsf	11,6	;volatile
  5484  0AED  0008               	return
  5485  0AEE                     __end_of_TMR1_Initialize:	
  5486                           
  5487                           	psect	text22
  5488  0B5D                     __ptext22:	
  5489 ;; *************** function _EUSART_Initialize *****************
  5490 ;; Defined at:
  5491 ;;		line 894 in file "main.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        0 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    2
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_allPeripheralInit
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _EUSART_Initialize
  5521  0B5D                     _EUSART_Initialize:	
  5522                           
  5523                           ;main.c: 895: PIE1bits.RC1IE = 0;
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _EUSART_Initialize: [wreg]
  5527  0B5D  0021               	movlb	1	; select bank1
  5528  0B5E  1291               	bcf	17,5	;volatile
  5529                           
  5530                           ;main.c: 896: PIE1bits.TX1IE = 0;
  5531  0B5F  1211               	bcf	17,4	;volatile
  5532                           
  5533                           ;main.c: 901: BAUD1CON = 0x0A;
  5534  0B60  300A               	movlw	10
  5535  0B61  0023               	movlb	3	; select bank3
  5536  0B62  009F               	movwf	31	;volatile
  5537                           
  5538                           ;main.c: 904: RC1STA = 0x90;
  5539  0B63  3090               	movlw	144
  5540  0B64  009D               	movwf	29	;volatile
  5541                           
  5542                           ;main.c: 907: TX1STA = 0x24;
  5543  0B65  3024               	movlw	36
  5544  0B66  009E               	movwf	30	;volatile
  5545                           
  5546                           ;main.c: 912: SP1BRGL = 0xA0;
  5547  0B67  30A0               	movlw	160
  5548  0B68  009B               	movwf	27	;volatile
  5549                           
  5550                           ;main.c: 914: SP1BRGH = 0x01;
  5551  0B69  3001               	movlw	1
  5552  0B6A  009C               	movwf	28	;volatile
  5553                           
  5554                           ;main.c: 917: GIE = 1;
  5555  0B6B  178B               	bsf	11,7	;volatile
  5556                           
  5557                           ;main.c: 920: PEIE = 1;
  5558  0B6C  170B               	bsf	11,6	;volatile
  5559                           
  5560                           ;main.c: 923: PIE1bits.RC1IE = 1;
  5561  0B6D  0021               	movlb	1	; select bank1
  5562  0B6E  1691               	bsf	17,5	;volatile
  5563                           
  5564                           ;main.c: 926: TX1STAbits.TXEN = 1;
  5565  0B6F  0023               	movlb	3	; select bank3
  5566  0B70  169E               	bsf	30,5	;volatile
  5567                           
  5568                           ;main.c: 929: RC1STAbits.SPEN = 1;
  5569  0B71  179D               	bsf	29,7	;volatile
  5570  0B72  0008               	return
  5571  0B73                     __end_of_EUSART_Initialize:	
  5572                           
  5573                           	psect	text23
  5574  0B47                     __ptext23:	
  5575 ;; *************** function _EUSART2_Initialize *****************
  5576 ;; Defined at:
  5577 ;;		line 931 in file "main.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;		None
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      void 
  5584 ;; Registers used:
  5585 ;;		wreg
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5595 ;;Total ram usage:        0 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    2
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_allPeripheralInit
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _EUSART2_Initialize
  5607  0B47                     _EUSART2_Initialize:	
  5608                           
  5609                           ;main.c: 933: PIE4bits.RC2IE = 0;
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in _EUSART2_Initialize: [wreg]
  5613  0B47  0021               	movlb	1	; select bank1
  5614  0B48  1294               	bcf	20,5	;volatile
  5615                           
  5616                           ;main.c: 934: PIE4bits.TX2IE = 0;
  5617  0B49  1214               	bcf	20,4	;volatile
  5618                           
  5619                           ;main.c: 939: BAUD2CON = 0x0A;
  5620  0B4A  300A               	movlw	10
  5621  0B4B  0029               	movlb	9	; select bank9
  5622  0B4C  0097               	movwf	23	;volatile
  5623                           
  5624                           ;main.c: 942: RC2STA = 0x90;
  5625  0B4D  3090               	movlw	144
  5626  0B4E  0095               	movwf	21	;volatile
  5627                           
  5628                           ;main.c: 945: TX2STA = 0x24;
  5629  0B4F  3024               	movlw	36
  5630  0B50  0096               	movwf	22	;volatile
  5631                           
  5632                           ;main.c: 948: SP2BRGL = 0xA0;
  5633  0B51  30A0               	movlw	160
  5634  0B52  0093               	movwf	19	;volatile
  5635                           
  5636                           ;main.c: 950: SP2BRGH = 0x01;
  5637  0B53  3001               	movlw	1
  5638  0B54  0094               	movwf	20	;volatile
  5639                           
  5640                           ;main.c: 953: GIE = 1;
  5641  0B55  178B               	bsf	11,7	;volatile
  5642                           
  5643                           ;main.c: 956: PEIE = 1;
  5644  0B56  170B               	bsf	11,6	;volatile
  5645                           
  5646                           ;main.c: 959: PIE4bits.RC2IE = 1;
  5647  0B57  0021               	movlb	1	; select bank1
  5648  0B58  1694               	bsf	20,5	;volatile
  5649                           
  5650                           ;main.c: 961: TX2STAbits.TXEN = 1;
  5651  0B59  0029               	movlb	9	; select bank9
  5652  0B5A  1696               	bsf	22,5	;volatile
  5653                           
  5654                           ;main.c: 964: RC2STAbits.SPEN = 1;
  5655  0B5B  1795               	bsf	21,7	;volatile
  5656  0B5C  0008               	return
  5657  0B5D                     __end_of_EUSART2_Initialize:	
  5658                           
  5659                           	psect	text24
  5660  0ACF                     __ptext24:	
  5661 ;; *************** function _CCP8_Initialize *****************
  5662 ;; Defined at:
  5663 ;;		line 1024 in file "main.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    2
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_allPeripheralInit
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _CCP8_Initialize
  5693  0ACF                     _CCP8_Initialize:	
  5694                           
  5695                           ;main.c: 1028: CCP9CON = 0x84;
  5696                           
  5697                           ;incstack = 0
  5698                           ; Regs used in _CCP8_Initialize: [wreg+status,2]
  5699  0ACF  3084               	movlw	132
  5700  0AD0  002C               	movlb	12	; select bank12
  5701  0AD1  009C               	movwf	28	;volatile
  5702                           
  5703                           ;main.c: 1031: CCPR8H = 0x00;
  5704  0AD2  0198               	clrf	24	;volatile
  5705                           
  5706                           ;main.c: 1034: CCPR8L = 0x00;
  5707  0AD3  0197               	clrf	23	;volatile
  5708                           
  5709                           ;main.c: 1040: PIR4bits.CCP8IF = 0;
  5710  0AD4  0020               	movlb	0	; select bank0
  5711  0AD5  1194               	bcf	20,3	;volatile
  5712                           
  5713                           ;main.c: 1043: PIE4bits.CCP8IE = 1;
  5714  0AD6  0021               	movlb	1	; select bank1
  5715  0AD7  1594               	bsf	20,3	;volatile
  5716  0AD8  0008               	return
  5717  0AD9                     __end_of_CCP8_Initialize:	
  5718                           
  5719                           	psect	text25
  5720  0AC5                     __ptext25:	
  5721 ;; *************** function _CCP10_Initialize *****************
  5722 ;; Defined at:
  5723 ;;		line 1045 in file "main.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;		None
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  5741 ;;Total ram usage:        0 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    2
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_allPeripheralInit
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _CCP10_Initialize
  5753  0AC5                     _CCP10_Initialize:	
  5754                           
  5755                           ;main.c: 1049: CCP10CON = 0x84;
  5756                           
  5757                           ;incstack = 0
  5758                           ; Regs used in _CCP10_Initialize: [wreg+status,2]
  5759  0AC5  3084               	movlw	132
  5760  0AC6  002C               	movlb	12	; select bank12
  5761  0AC7  009F               	movwf	31	;volatile
  5762                           
  5763                           ;main.c: 1052: CCPR10H = 0x00;
  5764  0AC8  019E               	clrf	30	;volatile
  5765                           
  5766                           ;main.c: 1055: CCPR10L = 0x00;
  5767  0AC9  019D               	clrf	29	;volatile
  5768                           
  5769                           ;main.c: 1061: PIR4bits.CCP10IF = 0;
  5770  0ACA  0020               	movlb	0	; select bank0
  5771  0ACB  1394               	bcf	20,7	;volatile
  5772                           
  5773                           ;main.c: 1064: PIE4bits.CCP10IE = 1;
  5774  0ACC  0021               	movlb	1	; select bank1
  5775  0ACD  1794               	bsf	20,7	;volatile
  5776  0ACE  0008               	return
  5777  0ACF                     __end_of_CCP10_Initialize:	
  5778                           
  5779                           	psect	text26
  5780  053A                     __ptext26:	
  5781 ;; *************** function _actiontouchPanel *****************
  5782 ;; Defined at:
  5783 ;;		line 636 in file "main.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  Switch_Num      1    wreg     unsigned char 
  5786 ;;  sw_status       1    3[BANK0 ] unsigned char 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  Switch_Num      1    8[BANK0 ] unsigned char 
  5789 ;;  switch_statu    2    9[BANK0 ] int 
  5790 ;;  SwNum           2    6[BANK0 ] int 
  5791 ;;  ch_sw_num       1    5[BANK0 ] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5801 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0
  5802 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  5803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  5804 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  5805 ;;Total ram usage:        8 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    3
  5808 ;; This function calls:
  5809 ;;		_sendFeedback_TO_Gateway
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function _actiontouchPanel
  5817  053A                     _actiontouchPanel:	
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in _actiontouchPanel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5821                           ;actiontouchPanel@Switch_Num stored from wreg
  5822  053A  0020               	movlb	0	; select bank0
  5823  053B  00A8               	movwf	actiontouchPanel@Switch_Num
  5824                           
  5825                           ;main.c: 639: M1=1; M2=1; M3=1; M4=1; M5=1; M6=1; M7=1; M8=1;
  5826  053C  3001               	movlw	1
  5827  053D  00E4               	movwf	_M1
  5828  053E  3000               	movlw	0
  5829  053F  00E5               	movwf	_M1+1
  5830  0540  3001               	movlw	1
  5831  0541  00E2               	movwf	_M2
  5832  0542  3000               	movlw	0
  5833  0543  00E3               	movwf	_M2+1
  5834  0544  3001               	movlw	1
  5835  0545  00E0               	movwf	_M3
  5836  0546  3000               	movlw	0
  5837  0547  00E1               	movwf	_M3+1
  5838  0548  3001               	movlw	1
  5839  0549  0021               	movlb	1	; select bank1
  5840  054A  00E3               	movwf	_M4^(0+128)
  5841  054B  3000               	movlw	0
  5842  054C  00E4               	movwf	(_M4^(0+128)+1)
  5843  054D  3001               	movlw	1
  5844  054E  00E1               	movwf	_M5^(0+128)
  5845  054F  3000               	movlw	0
  5846  0550  00E2               	movwf	(_M5^(0+128)+1)
  5847  0551  3001               	movlw	1
  5848  0552  00DF               	movwf	_M6^(0+128)
  5849  0553  3000               	movlw	0
  5850  0554  00E0               	movwf	(_M6^(0+128)+1)
  5851  0555  3001               	movlw	1
  5852  0556  00DD               	movwf	_M7^(0+128)
  5853  0557  3000               	movlw	0
  5854  0558  00DE               	movwf	(_M7^(0+128)+1)
  5855  0559  3001               	movlw	1
  5856  055A  00DB               	movwf	_M8^(0+128)
  5857  055B  3000               	movlw	0
  5858  055C  00DC               	movwf	(_M8^(0+128)+1)
  5859                           
  5860                           ;main.c: 641: int switch_status = sw_status - '0';
  5861  055D  0020               	movlb	0	; select bank0
  5862  055E  0823               	movf	actiontouchPanel@sw_status,w
  5863  055F  3ED0               	addlw	208
  5864  0560  00A9               	movwf	actiontouchPanel@switch_status
  5865  0561  30FF               	movlw	255
  5866  0562  1803               	skipnc
  5867  0563  3000               	movlw	0
  5868  0564  00AA               	movwf	actiontouchPanel@switch_status+1
  5869                           
  5870                           ;main.c: 642: int SwNum = Switch_Num - '@';
  5871  0565  0828               	movf	actiontouchPanel@Switch_Num,w
  5872  0566  3EC0               	addlw	192
  5873  0567  00A6               	movwf	actiontouchPanel@SwNum
  5874  0568  30FF               	movlw	255
  5875  0569  1803               	skipnc
  5876  056A  3000               	movlw	0
  5877  056B  00A7               	movwf	actiontouchPanel@SwNum+1
  5878                           
  5879                           ;main.c: 644: char ch_sw_num = SwNum +'0';
  5880  056C  0826               	movf	actiontouchPanel@SwNum,w
  5881  056D  3E30               	addlw	48
  5882  056E  00A4               	movwf	??_actiontouchPanel
  5883  056F  0824               	movf	??_actiontouchPanel,w
  5884  0570  00A5               	movwf	actiontouchPanel@ch_sw_num
  5885                           
  5886                           ;main.c: 646: if(checkFlag == 1)
  5887  0571  0368               	decf	_checkFlag,w
  5888  0572  0469               	iorwf	_checkFlag+1,w
  5889  0573  1D03               	btfss	3,2
  5890  0574  2E3C               	goto	l3804
  5891                           
  5892                           ;main.c: 648: {
  5893                           ;main.c: 649: checkFlag=0;
  5894  0575  01E8               	clrf	_checkFlag
  5895  0576  01E9               	clrf	_checkFlag+1
  5896                           
  5897                           ;main.c: 650: }
  5898  0577  0008               	return
  5899  0578                     l3732:	
  5900                           ;main.c: 655: case 'A':
  5901                           
  5902                           ;main.c: 651: else
  5903                           ;main.c: 652: {
  5904                           ;main.c: 653: switch(Switch_Num) {
  5905                           
  5906                           
  5907                           ;main.c: 656: {
  5908                           ;main.c: 657: if(M1 == 1 && copy_parentalLockBuffer[1] == '0' )
  5909  0578  0364               	decf	_M1,w
  5910  0579  0465               	iorwf	_M1+1,w
  5911  057A  1D03               	btfss	3,2
  5912  057B  0008               	return
  5913  057C  3030               	movlw	48
  5914  057D  0022               	movlb	2	; select bank2
  5915  057E  0643               	xorwf	(_copy_parentalLockBuffer^(0+256)+1),w
  5916  057F  1D03               	btfss	3,2
  5917  0580  0008               	return
  5918                           
  5919                           ;main.c: 658: {
  5920                           ;main.c: 659: sendFeedback_TO_Gateway('1',sw_status);
  5921  0581  0020               	movlb	0	; select bank0
  5922  0582  0823               	movf	actiontouchPanel@sw_status,w
  5923  0583  00A4               	movwf	??_actiontouchPanel
  5924  0584  0824               	movf	??_actiontouchPanel,w
  5925  0585  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  5926  0586  3031               	movlw	49
  5927  0587  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  5928                           
  5929                           ;main.c: 660: PORTEbits.RE1 = switch_status; M1 = 0;
  5930  0589  0020               	movlb	0	; select bank0
  5931  058A  0C29               	rrf	actiontouchPanel@switch_status,w
  5932  058B  1C03               	skipc
  5933  058C  1090               	bcf	16,1	;volatile
  5934  058D  1803               	skipnc
  5935  058E  1490               	bsf	16,1	;volatile
  5936  058F  01E4               	clrf	_M1
  5937  0590  01E5               	clrf	_M1+1
  5938                           
  5939                           ;main.c: 664: }
  5940                           ;main.c: 665: }
  5941                           ;main.c: 667: break;
  5942  0591  0008               	return
  5943  0592                     l3742:	
  5944                           ;main.c: 668: case 'B':
  5945                           
  5946                           
  5947                           ;main.c: 669: {
  5948                           ;main.c: 671: if(M2 == 1 && copy_parentalLockBuffer[2] == '0' )
  5949  0592  0362               	decf	_M2,w
  5950  0593  0463               	iorwf	_M2+1,w
  5951  0594  1D03               	btfss	3,2
  5952  0595  0008               	return
  5953  0596  3030               	movlw	48
  5954  0597  0022               	movlb	2	; select bank2
  5955  0598  0644               	xorwf	(_copy_parentalLockBuffer^(0+256)+2),w
  5956  0599  1D03               	btfss	3,2
  5957  059A  0008               	return
  5958                           
  5959                           ;main.c: 672: {
  5960                           ;main.c: 673: sendFeedback_TO_Gateway('2',sw_status);
  5961  059B  0020               	movlb	0	; select bank0
  5962  059C  0823               	movf	actiontouchPanel@sw_status,w
  5963  059D  00A4               	movwf	??_actiontouchPanel
  5964  059E  0824               	movf	??_actiontouchPanel,w
  5965  059F  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  5966  05A0  3032               	movlw	50
  5967  05A1  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  5968                           
  5969                           ;main.c: 674: PORTEbits.RE0 = switch_status; M2 = 0;
  5970  05A3  0020               	movlb	0	; select bank0
  5971  05A4  0C29               	rrf	actiontouchPanel@switch_status,w
  5972  05A5  1C03               	skipc
  5973  05A6  1010               	bcf	16,0	;volatile
  5974  05A7  1803               	skipnc
  5975  05A8  1410               	bsf	16,0	;volatile
  5976  05A9  01E2               	clrf	_M2
  5977  05AA  01E3               	clrf	_M2+1
  5978                           
  5979                           ;main.c: 680: }
  5980                           ;main.c: 682: }
  5981                           ;main.c: 684: break;
  5982  05AB  0008               	return
  5983  05AC                     l3752:	
  5984                           ;main.c: 685: case 'C':
  5985                           
  5986                           
  5987                           ;main.c: 686: {
  5988                           ;main.c: 687: if(M3 == 1 && copy_parentalLockBuffer[3] == '0' )
  5989  05AC  0360               	decf	_M3,w
  5990  05AD  0461               	iorwf	_M3+1,w
  5991  05AE  1D03               	btfss	3,2
  5992  05AF  0008               	return
  5993  05B0  3030               	movlw	48
  5994  05B1  0022               	movlb	2	; select bank2
  5995  05B2  0645               	xorwf	(_copy_parentalLockBuffer^(0+256)+3),w
  5996  05B3  1D03               	btfss	3,2
  5997  05B4  0008               	return
  5998                           
  5999                           ;main.c: 688: {
  6000                           ;main.c: 689: sendFeedback_TO_Gateway('3',sw_status);
  6001  05B5  0020               	movlb	0	; select bank0
  6002  05B6  0823               	movf	actiontouchPanel@sw_status,w
  6003  05B7  00A4               	movwf	??_actiontouchPanel
  6004  05B8  0824               	movf	??_actiontouchPanel,w
  6005  05B9  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  6006  05BA  3033               	movlw	51
  6007  05BB  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  6008                           
  6009                           ;main.c: 690: PORTGbits.RG0 = switch_status;
  6010  05BD  0020               	movlb	0	; select bank0
  6011  05BE  0C29               	rrf	actiontouchPanel@switch_status,w
  6012  05BF  0025               	movlb	5	; select bank5
  6013  05C0  1C03               	skipc
  6014  05C1  100D               	bcf	13,0	;volatile
  6015  05C2  1803               	skipnc
  6016  05C3  140D               	bsf	13,0	;volatile
  6017                           
  6018                           ;main.c: 691: M3 = 0;
  6019  05C4  0020               	movlb	0	; select bank0
  6020  05C5  01E0               	clrf	_M3
  6021  05C6  01E1               	clrf	_M3+1
  6022                           
  6023                           ;main.c: 692: }
  6024                           ;main.c: 694: }
  6025                           ;main.c: 695: break;
  6026  05C7  0008               	return
  6027  05C8                     l3762:	
  6028                           ;main.c: 696: case 'D':
  6029                           
  6030                           
  6031                           ;main.c: 697: {
  6032                           ;main.c: 698: if(M4 == 1 && copy_parentalLockBuffer[4] == '0')
  6033  05C8  0021               	movlb	1	; select bank1
  6034  05C9  0363               	decf	_M4^(0+128),w
  6035  05CA  0464               	iorwf	(_M4+1)^(0+128),w
  6036  05CB  1D03               	btfss	3,2
  6037  05CC  0008               	return
  6038  05CD  3030               	movlw	48
  6039  05CE  0022               	movlb	2	; select bank2
  6040  05CF  0646               	xorwf	(_copy_parentalLockBuffer^(0+256)+4),w
  6041  05D0  1D03               	btfss	3,2
  6042  05D1  0008               	return
  6043                           
  6044                           ;main.c: 699: {
  6045                           ;main.c: 700: sendFeedback_TO_Gateway('4',sw_status);
  6046  05D2  0020               	movlb	0	; select bank0
  6047  05D3  0823               	movf	actiontouchPanel@sw_status,w
  6048  05D4  00A4               	movwf	??_actiontouchPanel
  6049  05D5  0824               	movf	??_actiontouchPanel,w
  6050  05D6  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  6051  05D7  3034               	movlw	52
  6052  05D8  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  6053                           
  6054                           ;main.c: 701: PORTGbits.RG3 = switch_status;M4 = 0;
  6055  05DA  0020               	movlb	0	; select bank0
  6056  05DB  0C29               	rrf	actiontouchPanel@switch_status,w
  6057  05DC  0025               	movlb	5	; select bank5
  6058  05DD  1C03               	skipc
  6059  05DE  118D               	bcf	13,3	;volatile
  6060  05DF  1803               	skipnc
  6061  05E0  158D               	bsf	13,3	;volatile
  6062  05E1  0021               	movlb	1	; select bank1
  6063  05E2  01E3               	clrf	_M4^(0+128)
  6064  05E3  01E4               	clrf	(_M4+1)^(0+128)
  6065                           
  6066                           ;main.c: 702: }
  6067                           ;main.c: 704: }
  6068                           ;main.c: 705: break;
  6069  05E4  0008               	return
  6070  05E5                     l3772:	
  6071                           ;main.c: 706: case 'E':
  6072                           
  6073                           
  6074                           ;main.c: 707: {
  6075                           ;main.c: 708: if(M5 == 1 && copy_parentalLockBuffer[5] == '0')
  6076  05E5  0021               	movlb	1	; select bank1
  6077  05E6  0361               	decf	_M5^(0+128),w
  6078  05E7  0462               	iorwf	(_M5+1)^(0+128),w
  6079  05E8  1D03               	btfss	3,2
  6080  05E9  0008               	return
  6081  05EA  3030               	movlw	48
  6082  05EB  0022               	movlb	2	; select bank2
  6083  05EC  0647               	xorwf	(_copy_parentalLockBuffer^(0+256)+5),w
  6084  05ED  1D03               	btfss	3,2
  6085  05EE  0008               	return
  6086                           
  6087                           ;main.c: 709: {
  6088                           ;main.c: 710: sendFeedback_TO_Gateway('5',sw_status);
  6089  05EF  0020               	movlb	0	; select bank0
  6090  05F0  0823               	movf	actiontouchPanel@sw_status,w
  6091  05F1  00A4               	movwf	??_actiontouchPanel
  6092  05F2  0824               	movf	??_actiontouchPanel,w
  6093  05F3  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  6094  05F4  3035               	movlw	53
  6095  05F5  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  6096                           
  6097                           ;main.c: 711: PORTGbits.RG4 = switch_status; M5 = 0;
  6098  05F7  0020               	movlb	0	; select bank0
  6099  05F8  0C29               	rrf	actiontouchPanel@switch_status,w
  6100  05F9  0025               	movlb	5	; select bank5
  6101  05FA  1C03               	skipc
  6102  05FB  120D               	bcf	13,4	;volatile
  6103  05FC  1803               	skipnc
  6104  05FD  160D               	bsf	13,4	;volatile
  6105  05FE  0021               	movlb	1	; select bank1
  6106  05FF  01E1               	clrf	_M5^(0+128)
  6107  0600  01E2               	clrf	(_M5+1)^(0+128)
  6108                           
  6109                           ;main.c: 713: }
  6110                           ;main.c: 714: }
  6111                           ;main.c: 715: break;
  6112  0601  0008               	return
  6113  0602                     l3782:	
  6114                           ;main.c: 716: case 'F':
  6115                           
  6116                           
  6117                           ;main.c: 717: {
  6118                           ;main.c: 719: if(M6 == 1 && copy_parentalLockBuffer[6] == '0')
  6119  0602  0021               	movlb	1	; select bank1
  6120  0603  035F               	decf	_M6^(0+128),w
  6121  0604  0460               	iorwf	(_M6+1)^(0+128),w
  6122  0605  1D03               	btfss	3,2
  6123  0606  0008               	return
  6124  0607  3030               	movlw	48
  6125  0608  0022               	movlb	2	; select bank2
  6126  0609  0648               	xorwf	(_copy_parentalLockBuffer^(0+256)+6),w
  6127  060A  1D03               	btfss	3,2
  6128  060B  0008               	return
  6129                           
  6130                           ;main.c: 720: {
  6131                           ;main.c: 721: sendFeedback_TO_Gateway('6',sw_status);
  6132  060C  0020               	movlb	0	; select bank0
  6133  060D  0823               	movf	actiontouchPanel@sw_status,w
  6134  060E  00A4               	movwf	??_actiontouchPanel
  6135  060F  0824               	movf	??_actiontouchPanel,w
  6136  0610  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  6137  0611  3036               	movlw	54
  6138  0612  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  6139                           
  6140                           ;main.c: 722: PORTFbits.RF6 = switch_status;M6 = 0;
  6141  0614  0020               	movlb	0	; select bank0
  6142  0615  0C29               	rrf	actiontouchPanel@switch_status,w
  6143  0616  0025               	movlb	5	; select bank5
  6144  0617  1C03               	skipc
  6145  0618  130C               	bcf	12,6	;volatile
  6146  0619  1803               	skipnc
  6147  061A  170C               	bsf	12,6	;volatile
  6148  061B  0021               	movlb	1	; select bank1
  6149  061C  01DF               	clrf	_M6^(0+128)
  6150  061D  01E0               	clrf	(_M6+1)^(0+128)
  6151                           
  6152                           ;main.c: 724: }
  6153                           ;main.c: 725: }
  6154                           ;main.c: 726: break;
  6155  061E  0008               	return
  6156  061F                     l3792:	
  6157                           ;main.c: 727: case 'G':
  6158                           
  6159                           
  6160                           ;main.c: 728: {
  6161                           ;main.c: 729: if(M7 == 1 && copy_parentalLockBuffer[7] == '0')
  6162  061F  0021               	movlb	1	; select bank1
  6163  0620  035D               	decf	_M7^(0+128),w
  6164  0621  045E               	iorwf	(_M7+1)^(0+128),w
  6165  0622  1D03               	btfss	3,2
  6166  0623  0008               	return
  6167  0624  3030               	movlw	48
  6168  0625  0022               	movlb	2	; select bank2
  6169  0626  0649               	xorwf	(_copy_parentalLockBuffer^(0+256)+7),w
  6170  0627  1D03               	btfss	3,2
  6171  0628  0008               	return
  6172                           
  6173                           ;main.c: 730: {
  6174                           ;main.c: 731: sendFeedback_TO_Gateway('7',sw_status);
  6175  0629  0020               	movlb	0	; select bank0
  6176  062A  0823               	movf	actiontouchPanel@sw_status,w
  6177  062B  00A4               	movwf	??_actiontouchPanel
  6178  062C  0824               	movf	??_actiontouchPanel,w
  6179  062D  00A0               	movwf	sendFeedback_TO_Gateway@sw_status
  6180  062E  3037               	movlw	55
  6181  062F  318C  24C7         	fcall	_sendFeedback_TO_Gateway
  6182                           
  6183                           ;main.c: 732: PORTFbits.RF5 = switch_status; M7 = 0;
  6184  0631  0020               	movlb	0	; select bank0
  6185  0632  0C29               	rrf	actiontouchPanel@switch_status,w
  6186  0633  0025               	movlb	5	; select bank5
  6187  0634  1C03               	skipc
  6188  0635  128C               	bcf	12,5	;volatile
  6189  0636  1803               	skipnc
  6190  0637  168C               	bsf	12,5	;volatile
  6191  0638  0021               	movlb	1	; select bank1
  6192  0639  01DD               	clrf	_M7^(0+128)
  6193  063A  01DE               	clrf	(_M7+1)^(0+128)
  6194                           
  6195                           ;main.c: 791: }
  6196                           
  6197                           ;main.c: 790: break;
  6198                           
  6199                           ;main.c: 789: default:
  6200                           
  6201                           ;main.c: 738: {
  6202                           ;main.c: 786: }
  6203                           ;main.c: 787: break;
  6204                           
  6205                           ;main.c: 737: case 'H':
  6206                           
  6207                           ;main.c: 734: }
  6208                           ;main.c: 735: }
  6209                           ;main.c: 736: break;
  6210  063B  0008               	return
  6211  063C                     l3804:	
  6212  063C  0020               	movlb	0	; select bank0
  6213  063D  0828               	movf	actiontouchPanel@Switch_Num,w
  6214                           
  6215                           ; Switch size 1, requested type "space"
  6216                           ; Number of cases is 8, Range of values is 65 to 72
  6217                           ; switch strategies available:
  6218                           ; Name         Instructions Cycles
  6219                           ; direct_byte           25     9 (fixed)
  6220                           ; simple_byte           25    13 (average)
  6221                           ; jumptable            263     9 (fixed)
  6222                           ;	Chosen strategy is direct_byte
  6223  063E  3EBF               	addlw	-65
  6224  063F  1C03               	skipc
  6225  0640  0008               	return
  6226  0641  0084               	movwf	4
  6227  0642  3008               	movlw	8
  6228  0643  0204               	subwf	4,w
  6229  0644  1803               	skipnc
  6230  0645  0008               	return
  6231  0646  3188               	movlp	high S4000
  6232  0647  3504               	lslf	4,w
  6233  0648  3E10               	addlw	low S4000
  6234  0649  0082               	movwf	2
  6235  064A  0008               	return
  6236  064B                     l306:	
  6237  064B  0008               	return
  6238  064C                     __end_of_actiontouchPanel:	
  6239                           
  6240                           	psect	swtext2
  6241  0810                     __pswtext2:	
  6242  0810                     S4000:	
  6243  0810  3185  2D78         	ljmp	l3732
  6244  0812  3185  2D92         	ljmp	l3742
  6245  0814  3185  2DAC         	ljmp	l3752
  6246  0816  3185  2DC8         	ljmp	l3762
  6247  0818  3185  2DE5         	ljmp	l3772
  6248  081A  3186  2E02         	ljmp	l3782
  6249  081C  3186  2E1F         	ljmp	l3792
  6250  081E  3186  2E4B         	ljmp	l306
  6251                           
  6252                           	psect	text27
  6253  0CC7                     __ptext27:	
  6254 ;; *************** function _sendFeedback_TO_Gateway *****************
  6255 ;; Defined at:
  6256 ;;		line 1140 in file "main.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  Switch_Num      1    wreg     unsigned char 
  6259 ;;  sw_status       1    0[BANK0 ] unsigned char 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  Switch_Num      1    2[BANK0 ] unsigned char 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0
  6272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  6273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  6274 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  6275 ;;Total ram usage:        3 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    2
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_actiontouchPanel
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           
  6286                           ;psect for function _sendFeedback_TO_Gateway
  6287  0CC7                     _sendFeedback_TO_Gateway:	
  6288                           
  6289                           ;incstack = 0
  6290                           ; Regs used in _sendFeedback_TO_Gateway: [wreg]
  6291                           ;sendFeedback_TO_Gateway@Switch_Num stored from wreg
  6292  0CC7  0020               	movlb	0	; select bank0
  6293  0CC8  00A2               	movwf	sendFeedback_TO_Gateway@Switch_Num
  6294                           
  6295                           ;main.c: 1142: _delay((unsigned long)((5)*(16000000/4000.0))); TX1REG = 'R';
  6296  0CC9  301A               	movlw	26
  6297  0CCA  0020               	movlb	0	; select bank0
  6298  0CCB  00A1               	movwf	??_sendFeedback_TO_Gateway
  6299  0CCC  30F8               	movlw	248
  6300  0CCD                     u4057:	
  6301  0CCD  0B89               	decfsz	9,f
  6302  0CCE  2CCD               	goto	u4057
  6303  0CCF  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  6304  0CD0  2CCD               	goto	u4057
  6305  0CD1  0000               	nop
  6306  0CD2  3052               	movlw	82
  6307  0CD3  0023               	movlb	3	; select bank3
  6308  0CD4  009A               	movwf	26	;volatile
  6309                           
  6310                           ;main.c: 1143: _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG = sw_status;
  6311  0CD5  3006               	movlw	6
  6312  0CD6  0020               	movlb	0	; select bank0
  6313  0CD7  00A1               	movwf	??_sendFeedback_TO_Gateway
  6314  0CD8  3030               	movlw	48
  6315  0CD9                     u4067:	
  6316  0CD9  0B89               	decfsz	9,f
  6317  0CDA  2CD9               	goto	u4067
  6318  0CDB  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  6319  0CDC  2CD9               	goto	u4067
  6320  0CDD  0000               	nop
  6321  0CDE  0020               	movlb	0	; select bank0
  6322  0CDF  0820               	movf	sendFeedback_TO_Gateway@sw_status,w
  6323  0CE0  0023               	movlb	3	; select bank3
  6324  0CE1  009A               	movwf	26	;volatile
  6325                           
  6326                           ;main.c: 1144: _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG = '0';
  6327  0CE2  3006               	movlw	6
  6328  0CE3  0020               	movlb	0	; select bank0
  6329  0CE4  00A1               	movwf	??_sendFeedback_TO_Gateway
  6330  0CE5  3030               	movlw	48
  6331  0CE6                     u4077:	
  6332  0CE6  0B89               	decfsz	9,f
  6333  0CE7  2CE6               	goto	u4077
  6334  0CE8  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  6335  0CE9  2CE6               	goto	u4077
  6336  0CEA  0000               	nop
  6337  0CEB  3030               	movlw	48
  6338  0CEC  0023               	movlb	3	; select bank3
  6339  0CED  009A               	movwf	26	;volatile
  6340                           
  6341                           ;main.c: 1145: _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG = Switch_Num;
  6342  0CEE  3006               	movlw	6
  6343  0CEF  0020               	movlb	0	; select bank0
  6344  0CF0  00A1               	movwf	??_sendFeedback_TO_Gateway
  6345  0CF1  3030               	movlw	48
  6346  0CF2                     u4087:	
  6347  0CF2  0B89               	decfsz	9,f
  6348  0CF3  2CF2               	goto	u4087
  6349  0CF4  0BA1               	decfsz	??_sendFeedback_TO_Gateway,f
  6350  0CF5  2CF2               	goto	u4087
  6351  0CF6  0000               	nop
  6352  0CF7  0020               	movlb	0	; select bank0
  6353  0CF8  0822               	movf	sendFeedback_TO_Gateway@Switch_Num,w
  6354  0CF9  0023               	movlb	3	; select bank3
  6355  0CFA  009A               	movwf	26	;volatile
  6356  0CFB  0008               	return
  6357  0CFC                     __end_of_sendFeedback_TO_Gateway:	
  6358                           
  6359                           	psect	text28
  6360  0B0C                     __ptext28:	
  6361 ;; *************** function _ReceivingIndicationLedBlinking *****************
  6362 ;; Defined at:
  6363 ;;		line 1092 in file "main.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6380 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:        2 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    2
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _ReceivingIndicationLedBlinking
  6393  0B0C                     _ReceivingIndicationLedBlinking:	
  6394                           
  6395                           ;main.c: 1093: PORTFbits.RF1 = 0;
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in _ReceivingIndicationLedBlinking: [wreg]
  6399  0B0C  0025               	movlb	5	; select bank5
  6400  0B0D  108C               	bcf	12,1	;volatile
  6401                           
  6402                           ;main.c: 1094: _delay((unsigned long)((100)*(16000000/4000.0)));
  6403  0B0E  3003               	movlw	3
  6404  0B0F  0020               	movlb	0	; select bank0
  6405  0B10  00A1               	movwf	??_ReceivingIndicationLedBlinking+1
  6406  0B11  3008               	movlw	8
  6407  0B12  00A0               	movwf	??_ReceivingIndicationLedBlinking
  6408  0B13  3077               	movlw	119
  6409  0B14                     u4097:	
  6410  0B14  0B89               	decfsz	9,f
  6411  0B15  2B14               	goto	u4097
  6412  0B16  0BA0               	decfsz	??_ReceivingIndicationLedBlinking,f
  6413  0B17  2B14               	goto	u4097
  6414  0B18  0BA1               	decfsz	??_ReceivingIndicationLedBlinking+1,f
  6415  0B19  2B14               	goto	u4097
  6416                           
  6417                           ;main.c: 1095: PORTFbits.RF1 = 1;
  6418  0B1A  0025               	movlb	5	; select bank5
  6419  0B1B  148C               	bsf	12,1	;volatile
  6420  0B1C  0008               	return
  6421  0B1D                     __end_of_ReceivingIndicationLedBlinking:	
  6422                           
  6423                           	psect	text29
  6424  0C0D                     __ptext29:	
  6425 ;; *************** function _GPIO_pin_Initialize *****************
  6426 ;; Defined at:
  6427 ;;		line 798 in file "main.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    3
  6448 ;; This function calls:
  6449 ;;		_clearAllPorts
  6450 ;;		_pinINIT_extra
  6451 ;; This function is called by:
  6452 ;;		_main
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function _GPIO_pin_Initialize
  6458  0C0D                     _GPIO_pin_Initialize:	
  6459                           
  6460                           ;main.c: 799: clearAllPorts();
  6461                           
  6462                           ;incstack = 0
  6463                           ; Regs used in _GPIO_pin_Initialize: [status,2+status,0+pclath+cstack]
  6464  0C0D  318A  22EE  318C   	fcall	_clearAllPorts
  6465                           
  6466                           ;main.c: 800: pinINIT_extra();
  6467  0C10  318B  2332  318C   	fcall	_pinINIT_extra
  6468                           
  6469                           ;main.c: 801: TRISDbits.TRISD6 = 1;
  6470  0C13  0021               	movlb	1	; select bank1
  6471  0C14  170F               	bsf	15,6	;volatile
  6472                           
  6473                           ;main.c: 802: TRISDbits.TRISD7 = 1;
  6474  0C15  178F               	bsf	15,7	;volatile
  6475                           
  6476                           ;main.c: 803: TRISBbits.TRISB0 = 1;
  6477  0C16  140D               	bsf	13,0	;volatile
  6478                           
  6479                           ;main.c: 804: TRISBbits.TRISB1 = 1;
  6480  0C17  148D               	bsf	13,1	;volatile
  6481                           
  6482                           ;main.c: 805: TRISBbits.TRISB2 = 1;
  6483  0C18  150D               	bsf	13,2	;volatile
  6484                           
  6485                           ;main.c: 806: TRISBbits.TRISB3 = 1;
  6486  0C19  158D               	bsf	13,3	;volatile
  6487                           
  6488                           ;main.c: 807: TRISBbits.TRISB4 = 1;
  6489  0C1A  160D               	bsf	13,4	;volatile
  6490                           
  6491                           ;main.c: 808: TRISBbits.TRISB5 = 1;
  6492  0C1B  168D               	bsf	13,5	;volatile
  6493                           
  6494                           ;main.c: 813: TRISEbits.TRISE1 = 0;
  6495  0C1C  1090               	bcf	16,1	;volatile
  6496                           
  6497                           ;main.c: 814: TRISEbits.TRISE0 = 0;
  6498  0C1D  1010               	bcf	16,0	;volatile
  6499                           
  6500                           ;main.c: 815: TRISGbits.TRISG0 = 0;
  6501  0C1E  0026               	movlb	6	; select bank6
  6502  0C1F  100D               	bcf	13,0	;volatile
  6503                           
  6504                           ;main.c: 816: TRISGbits.TRISG3 = 0;
  6505  0C20  118D               	bcf	13,3	;volatile
  6506                           
  6507                           ;main.c: 817: TRISGbits.TRISG4 = 0;
  6508  0C21  120D               	bcf	13,4	;volatile
  6509                           
  6510                           ;main.c: 818: TRISFbits.TRISF6 = 0;
  6511  0C22  130C               	bcf	12,6	;volatile
  6512                           
  6513                           ;main.c: 819: TRISFbits.TRISF5 = 0;
  6514  0C23  128C               	bcf	12,5	;volatile
  6515                           
  6516                           ;main.c: 820: TRISFbits.TRISF4 = 0;
  6517  0C24  120C               	bcf	12,4	;volatile
  6518                           
  6519                           ;main.c: 821: TRISFbits.TRISF3 = 0;
  6520  0C25  118C               	bcf	12,3	;volatile
  6521                           
  6522                           ;main.c: 825: TRISFbits.TRISF0 = 0;
  6523  0C26  100C               	bcf	12,0	;volatile
  6524                           
  6525                           ;main.c: 826: TRISFbits.TRISF1 = 0;
  6526  0C27  108C               	bcf	12,1	;volatile
  6527                           
  6528                           ;main.c: 827: TRISFbits.TRISF2 = 0;
  6529  0C28  110C               	bcf	12,2	;volatile
  6530                           
  6531                           ;main.c: 829: TRISEbits.TRISE3 = 1;
  6532  0C29  0021               	movlb	1	; select bank1
  6533  0C2A  1590               	bsf	16,3	;volatile
  6534                           
  6535                           ;main.c: 830: TRISEbits.TRISE4 = 1;
  6536  0C2B  1610               	bsf	16,4	;volatile
  6537                           
  6538                           ;main.c: 835: TRISCbits.TRISC6 = 0;
  6539  0C2C  130E               	bcf	14,6	;volatile
  6540                           
  6541                           ;main.c: 836: TRISCbits.TRISC7 = 1;
  6542  0C2D  178E               	bsf	14,7	;volatile
  6543                           
  6544                           ;main.c: 837: TRISGbits.TRISG1 = 0;
  6545  0C2E  0026               	movlb	6	; select bank6
  6546  0C2F  108D               	bcf	13,1	;volatile
  6547                           
  6548                           ;main.c: 838: TRISGbits.TRISG1 = 1;
  6549  0C30  148D               	bsf	13,1	;volatile
  6550                           
  6551                           ;main.c: 840: clearAllPorts();
  6552  0C31  318A  22EE         	fcall	_clearAllPorts
  6553  0C33  0008               	return
  6554  0C34                     __end_of_GPIO_pin_Initialize:	
  6555                           
  6556                           	psect	text30
  6557  0B32                     __ptext30:	
  6558 ;; *************** function _pinINIT_extra *****************
  6559 ;; Defined at:
  6560 ;;		line 1150 in file "main.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		status,2
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    2
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_GPIO_pin_Initialize
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _pinINIT_extra
  6590  0B32                     _pinINIT_extra:	
  6591                           
  6592                           ;main.c: 1151: ANSELG=0x00; WPUG = 0;
  6593                           
  6594                           ;incstack = 0
  6595                           ; Regs used in _pinINIT_extra: [status,2]
  6596  0B32  0028               	movlb	8	; select bank8
  6597  0B33  018D               	clrf	13	;volatile
  6598  0B34  0029               	movlb	9	; select bank9
  6599  0B35  018D               	clrf	13	;volatile
  6600                           
  6601                           ;main.c: 1153: ANSELF=0x00;
  6602  0B36  0028               	movlb	8	; select bank8
  6603  0B37  018C               	clrf	12	;volatile
  6604                           
  6605                           ;main.c: 1155: ANSELE=0x00; WPUE=0x00;
  6606  0B38  0023               	movlb	3	; select bank3
  6607  0B39  0190               	clrf	16	;volatile
  6608  0B3A  0024               	movlb	4	; select bank4
  6609  0B3B  0190               	clrf	16	;volatile
  6610                           
  6611                           ;main.c: 1157: ANSELD=0x00; WPUD=0x00;
  6612  0B3C  0023               	movlb	3	; select bank3
  6613  0B3D  018F               	clrf	15	;volatile
  6614  0B3E  0024               	movlb	4	; select bank4
  6615  0B3F  018F               	clrf	15	;volatile
  6616                           
  6617                           ;main.c: 1159: ANSELB=0x00; WPUB=0x00;
  6618  0B40  0023               	movlb	3	; select bank3
  6619  0B41  018D               	clrf	13	;volatile
  6620  0B42  0024               	movlb	4	; select bank4
  6621  0B43  018D               	clrf	13	;volatile
  6622                           
  6623                           ;main.c: 1161: ANSELA=0x00;
  6624  0B44  0023               	movlb	3	; select bank3
  6625  0B45  018C               	clrf	12	;volatile
  6626  0B46  0008               	return
  6627  0B47                     __end_of_pinINIT_extra:	
  6628                           
  6629                           	psect	text31
  6630  0AEE                     __ptext31:	
  6631 ;; *************** function _clearAllPorts *****************
  6632 ;; Defined at:
  6633 ;;		line 1167 in file "main.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		None
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_GPIO_pin_Initialize
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           
  6662                           ;psect for function _clearAllPorts
  6663  0AEE                     _clearAllPorts:	
  6664                           
  6665                           ;main.c: 1171: PORTEbits.RE1=0;
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _clearAllPorts: []
  6669  0AEE  0020               	movlb	0	; select bank0
  6670  0AEF  1090               	bcf	16,1	;volatile
  6671                           
  6672                           ;main.c: 1172: PORTEbits.RE0=0;
  6673  0AF0  1010               	bcf	16,0	;volatile
  6674                           
  6675                           ;main.c: 1173: PORTGbits.RG0=0;
  6676  0AF1  0025               	movlb	5	; select bank5
  6677  0AF2  100D               	bcf	13,0	;volatile
  6678                           
  6679                           ;main.c: 1174: PORTGbits.RG3=0;
  6680  0AF3  118D               	bcf	13,3	;volatile
  6681                           
  6682                           ;main.c: 1175: PORTGbits.RG4=0;
  6683  0AF4  120D               	bcf	13,4	;volatile
  6684                           
  6685                           ;main.c: 1176: PORTFbits.RF6=0;
  6686  0AF5  130C               	bcf	12,6	;volatile
  6687                           
  6688                           ;main.c: 1177: PORTFbits.RF5=0;
  6689  0AF6  128C               	bcf	12,5	;volatile
  6690                           
  6691                           ;main.c: 1178: PORTFbits.RF4=0;
  6692  0AF7  120C               	bcf	12,4	;volatile
  6693                           
  6694                           ;main.c: 1179: PORTFbits.RF3 = 1;
  6695  0AF8  158C               	bsf	12,3	;volatile
  6696                           
  6697                           ;main.c: 1180: PORTFbits.RF0 = 1;
  6698  0AF9  140C               	bsf	12,0	;volatile
  6699                           
  6700                           ;main.c: 1181: PORTFbits.RF1 = 1;
  6701  0AFA  148C               	bsf	12,1	;volatile
  6702                           
  6703                           ;main.c: 1182: PORTFbits.RF2 = 1;
  6704  0AFB  150C               	bsf	12,2	;volatile
  6705  0AFC  0008               	return
  6706  0AFD                     __end_of_clearAllPorts:	
  6707                           
  6708                           	psect	intentry
  6709  0004                     __pintentry:	
  6710 ;; *************** function _isr *****************
  6711 ;; Defined at:
  6712 ;;		line 207 in file "main.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  6728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  6729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  6730 ;;Total ram usage:        2 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    1
  6733 ;; This function calls:
  6734 ;;		_errorsISR
  6735 ;; This function is called by:
  6736 ;;		Interrupt level 1
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740  0004                     _isr:	
  6741                           
  6742                           ;incstack = 0
  6743  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6744                           
  6745                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6746  0005  3180               	pagesel	$
  6747  0006  0020               	movlb	0	; select bank0
  6748  0007  087F               	movf	127,w
  6749  0008  00F4               	movwf	??_isr+1
  6750                           
  6751                           ;main.c: 210: if(RC1IF){
  6752  0009  1E91               	btfss	17,5	;volatile
  6753  000A  284A               	goto	i1l2764
  6754                           
  6755                           ;main.c: 211: if(RC1STAbits.OERR){
  6756  000B  0023               	movlb	3	; select bank3
  6757  000C  1C9D               	btfss	29,1	;volatile
  6758  000D  2817               	goto	i1l2748
  6759                           
  6760                           ;main.c: 212: RC1STAbits.CREN = 0;
  6761  000E  121D               	bcf	29,4	;volatile
  6762                           
  6763                           ;main.c: 213: RC1STAbits.CREN = 1;
  6764  000F  161D               	bsf	29,4	;volatile
  6765                           
  6766                           ;main.c: 214: errorsISR("EROV");
  6767  0010  302E               	movlw	low (STR_2| (0+32768))
  6768  0011  00F0               	movwf	errorsISR@errNum
  6769  0012  3090               	movlw	high (STR_2| (0+32768))
  6770  0013  00F1               	movwf	errorsISR@errNum+1
  6771  0014  318B  231D  3180   	fcall	_errorsISR
  6772  0017                     i1l2748:	
  6773                           
  6774                           ;main.c: 215: }
  6775                           ;main.c: 217: mainReceivedDataBuffer[mainReceivedDataPosition]=RC1REG;
  6776  0017  0023               	movlb	3	; select bank3
  6777  0018  0819               	movf	25,w	;volatile
  6778  0019  00F3               	movwf	??_isr
  6779  001A  0877               	movf	_mainReceivedDataPosition,w
  6780  001B  3E20               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  6781  001C  0086               	movwf	6
  6782  001D  3001               	movlw	1	; select bank2/3
  6783  001E  0087               	movwf	7
  6784  001F  0873               	movf	??_isr,w
  6785  0020  0081               	movwf	1
  6786                           
  6787                           ;main.c: 221: if(mainReceivedDataBuffer[0]=='%'){
  6788  0021  3025               	movlw	37
  6789  0022  0022               	movlb	2	; select bank2
  6790  0023  0620               	xorwf	_mainReceivedDataBuffer^(0+256),w
  6791  0024  1D03               	btfss	3,2
  6792  0025  283E               	goto	i1l247
  6793                           
  6794                           ;main.c: 222: mainReceivedDataPosition++;
  6795  0026  3001               	movlw	1
  6796  0027  07F7               	addwf	_mainReceivedDataPosition,f
  6797  0028  3000               	movlw	0
  6798  0029  3DF8               	addwfc	_mainReceivedDataPosition+1,f
  6799                           
  6800                           ;main.c: 223: if(mainReceivedDataPosition>15){
  6801  002A  0878               	movf	_mainReceivedDataPosition+1,w
  6802  002B  3A80               	xorlw	128
  6803  002C  00F3               	movwf	??_isr
  6804  002D  3080               	movlw	128
  6805  002E  0273               	subwf	??_isr,w
  6806  002F  1D03               	skipz
  6807  0030  2833               	goto	u246_25
  6808  0031  3010               	movlw	16
  6809  0032  0277               	subwf	_mainReceivedDataPosition,w
  6810  0033                     u246_25:	
  6811  0033  1C03               	skipc
  6812  0034  284A               	goto	i1l2764
  6813                           
  6814                           ;main.c: 224: mainDataReceived=1;
  6815  0035  3001               	movlw	1
  6816  0036  0020               	movlb	0	; select bank0
  6817  0037  00EA               	movwf	_mainDataReceived
  6818  0038  3000               	movlw	0
  6819  0039  00EB               	movwf	_mainDataReceived+1
  6820                           
  6821                           ;main.c: 225: mainReceivedDataPosition=0;
  6822  003A  01F7               	clrf	_mainReceivedDataPosition
  6823  003B  01F8               	clrf	_mainReceivedDataPosition+1
  6824                           
  6825                           ;main.c: 226: RC1IF=0;
  6826  003C  1291               	bcf	17,5	;volatile
  6827                           
  6828                           ;main.c: 227: }
  6829                           ;main.c: 228: }
  6830  003D  284A               	goto	i1l2764
  6831  003E                     i1l247:	
  6832                           
  6833                           ;main.c: 229: else{
  6834                           ;main.c: 230: RC1STAbits.CREN = 0;
  6835  003E  0023               	movlb	3	; select bank3
  6836  003F  121D               	bcf	29,4	;volatile
  6837                           
  6838                           ;main.c: 231: RC1STAbits.CREN = 1;
  6839  0040  161D               	bsf	29,4	;volatile
  6840                           
  6841                           ;main.c: 232: mainReceivedDataPosition=0;
  6842  0041  01F7               	clrf	_mainReceivedDataPosition
  6843  0042  01F8               	clrf	_mainReceivedDataPosition+1
  6844                           
  6845                           ;main.c: 235: errorsISR("ERRX");
  6846  0043  3033               	movlw	low (STR_3| (0+32768))
  6847  0044  00F0               	movwf	errorsISR@errNum
  6848  0045  3090               	movlw	high (STR_3| (0+32768))
  6849  0046  00F1               	movwf	errorsISR@errNum+1
  6850  0047  318B  231D  3180   	fcall	_errorsISR
  6851  004A                     i1l2764:	
  6852                           
  6853                           ;main.c: 236: }
  6854                           ;main.c: 237: }
  6855                           ;main.c: 240: if(RC2IF){
  6856  004A  0020               	movlb	0	; select bank0
  6857  004B  1E94               	btfss	20,5	;volatile
  6858  004C  2897               	goto	i1l2794
  6859                           
  6860                           ;main.c: 241: if(RC2STAbits.OERR){
  6861  004D  0029               	movlb	9	; select bank9
  6862  004E  1C95               	btfss	21,1	;volatile
  6863  004F  2859               	goto	i1l2772
  6864                           
  6865                           ;main.c: 242: RC2STAbits.CREN = 0;
  6866  0050  1215               	bcf	21,4	;volatile
  6867                           
  6868                           ;main.c: 243: RC2STAbits.CREN = 1;
  6869  0051  1615               	bsf	21,4	;volatile
  6870                           
  6871                           ;main.c: 246: errorsISR("ERROV");
  6872  0052  3019               	movlw	low (STR_4| (0+32768))
  6873  0053  00F0               	movwf	errorsISR@errNum
  6874  0054  3090               	movlw	high (STR_4| (0+32768))
  6875  0055  00F1               	movwf	errorsISR@errNum+1
  6876  0056  318B  231D  3180   	fcall	_errorsISR
  6877  0059                     i1l2772:	
  6878                           
  6879                           ;main.c: 247: }
  6880                           ;main.c: 248: if(RC2STAbits.FERR){
  6881  0059  0029               	movlb	9	; select bank9
  6882  005A  1D15               	btfss	21,2	;volatile
  6883  005B  2865               	goto	i1l2778
  6884                           
  6885                           ;main.c: 249: RC2STAbits.CREN = 0;
  6886  005C  1215               	bcf	21,4	;volatile
  6887                           
  6888                           ;main.c: 250: RC2STAbits.CREN = 1;
  6889  005D  1615               	bsf	21,4	;volatile
  6890                           
  6891                           ;main.c: 253: errorsISR("RERR");
  6892  005E  301F               	movlw	low (STR_5| (0+32768))
  6893  005F  00F0               	movwf	errorsISR@errNum
  6894  0060  3090               	movlw	high (STR_5| (0+32768))
  6895  0061  00F1               	movwf	errorsISR@errNum+1
  6896  0062  318B  231D  3180   	fcall	_errorsISR
  6897  0065                     i1l2778:	
  6898                           
  6899                           ;main.c: 254: }
  6900                           ;main.c: 256: touchpanleReceivedDatabuffer[touchpanelReceivedataPosition] = RC2REG;
  6901  0065  0029               	movlb	9	; select bank9
  6902  0066  0811               	movf	17,w	;volatile
  6903  0067  00F3               	movwf	??_isr
  6904  0068  0875               	movf	_touchpanelReceivedataPosition,w
  6905  0069  3E32               	addlw	(low (_touchpanleReceivedDatabuffer| (0+256)))& (0+255)
  6906  006A  0086               	movwf	6
  6907  006B  3001               	movlw	1	; select bank2/3
  6908  006C  0087               	movwf	7
  6909  006D  0873               	movf	??_isr,w
  6910  006E  0081               	movwf	1
  6911                           
  6912                           ;main.c: 260: if(touchpanleReceivedDatabuffer[0] == '(')
  6913  006F  3028               	movlw	40
  6914  0070  0022               	movlb	2	; select bank2
  6915  0071  0632               	xorwf	_touchpanleReceivedDatabuffer^(0+256),w
  6916  0072  1D03               	btfss	3,2
  6917  0073  288B               	goto	i1l253
  6918                           
  6919                           ;main.c: 261: {
  6920                           ;main.c: 262: touchpanelReceivedataPosition++;
  6921  0074  3001               	movlw	1
  6922  0075  07F5               	addwf	_touchpanelReceivedataPosition,f
  6923  0076  3000               	movlw	0
  6924  0077  3DF6               	addwfc	_touchpanelReceivedataPosition+1,f
  6925                           
  6926                           ;main.c: 263: if(touchpanelReceivedataPosition > 7)
  6927  0078  0876               	movf	_touchpanelReceivedataPosition+1,w
  6928  0079  3A80               	xorlw	128
  6929  007A  00F3               	movwf	??_isr
  6930  007B  3080               	movlw	128
  6931  007C  0273               	subwf	??_isr,w
  6932  007D  3008               	movlw	8
  6933  007E  1903               	btfsc	3,2
  6934  007F  0275               	subwf	_touchpanelReceivedataPosition,w
  6935  0080  1C03               	skipc
  6936  0081  2897               	goto	i1l2794
  6937                           
  6938                           ;main.c: 264: {
  6939                           ;main.c: 265: touchPanelDataReceived = 1;
  6940  0082  3001               	movlw	1
  6941  0083  0020               	movlb	0	; select bank0
  6942  0084  00E6               	movwf	_touchPanelDataReceived	;volatile
  6943  0085  3000               	movlw	0
  6944  0086  00E7               	movwf	_touchPanelDataReceived+1	;volatile
  6945                           
  6946                           ;main.c: 267: touchpanelReceivedataPosition=0;
  6947  0087  01F5               	clrf	_touchpanelReceivedataPosition
  6948  0088  01F6               	clrf	_touchpanelReceivedataPosition+1
  6949                           
  6950                           ;main.c: 268: RC2IF = 0;
  6951  0089  1294               	bcf	20,5	;volatile
  6952                           
  6953                           ;main.c: 269: }
  6954                           ;main.c: 270: }
  6955  008A  2897               	goto	i1l2794
  6956  008B                     i1l253:	
  6957                           
  6958                           ;main.c: 271: else{
  6959                           ;main.c: 272: RC2STAbits.CREN = 0;
  6960  008B  0029               	movlb	9	; select bank9
  6961  008C  1215               	bcf	21,4	;volatile
  6962                           
  6963                           ;main.c: 273: RC2STAbits.CREN = 1;
  6964  008D  1615               	bsf	21,4	;volatile
  6965                           
  6966                           ;main.c: 274: touchpanelReceivedataPosition=0;
  6967  008E  01F5               	clrf	_touchpanelReceivedataPosition
  6968  008F  01F6               	clrf	_touchpanelReceivedataPosition+1
  6969                           
  6970                           ;main.c: 276: errorsISR("ERRT");
  6971  0090  3029               	movlw	low (STR_6| (0+32768))
  6972  0091  00F0               	movwf	errorsISR@errNum
  6973  0092  3090               	movlw	high (STR_6| (0+32768))
  6974  0093  00F1               	movwf	errorsISR@errNum+1
  6975  0094  318B  231D  3180   	fcall	_errorsISR
  6976  0097                     i1l2794:	
  6977                           
  6978                           ;main.c: 277: }
  6979                           ;main.c: 278: }
  6980                           ;main.c: 282: if(PIE1bits.TMR2IE==1 && PIR1bits.TMR2IF==1)
  6981  0097  0021               	movlb	1	; select bank1
  6982  0098  1C91               	btfss	17,1	;volatile
  6983  0099  28A2               	goto	i1l256
  6984  009A  0020               	movlb	0	; select bank0
  6985  009B  1C91               	btfss	17,1	;volatile
  6986  009C  28A2               	goto	i1l256
  6987                           
  6988                           ;main.c: 283: {
  6989                           ;main.c: 284: PIR1bits.TMR2IF=0;
  6990  009D  1091               	bcf	17,1	;volatile
  6991                           
  6992                           ;main.c: 285: PORTFbits.RF3 = 0;
  6993  009E  0025               	movlb	5	; select bank5
  6994  009F  118C               	bcf	12,3	;volatile
  6995                           
  6996                           ;main.c: 286: T2CONbits.TMR2ON=0;
  6997  00A0  0020               	movlb	0	; select bank0
  6998  00A1  111C               	bcf	28,2	;volatile
  6999  00A2                     i1l256:	
  7000                           
  7001                           ;main.c: 287: }
  7002                           ;main.c: 291: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  7003  00A2  0021               	movlb	1	; select bank1
  7004  00A3  1C11               	btfss	17,0	;volatile
  7005  00A4  28B0               	goto	i1l2810
  7006  00A5  0020               	movlb	0	; select bank0
  7007  00A6  1C11               	btfss	17,0	;volatile
  7008  00A7  28B0               	goto	i1l2810
  7009                           
  7010                           ;main.c: 292: {
  7011                           ;main.c: 293: PIR1bits.TMR1IF=0;
  7012  00A8  1011               	bcf	17,0	;volatile
  7013                           
  7014                           ;main.c: 294: PORTFbits.RF3 = 1;
  7015  00A9  0025               	movlb	5	; select bank5
  7016  00AA  158C               	bsf	12,3	;volatile
  7017                           
  7018                           ;main.c: 295: PR2=0x9F;
  7019  00AB  309F               	movlw	159
  7020  00AC  0020               	movlb	0	; select bank0
  7021  00AD  009B               	movwf	27	;volatile
  7022                           
  7023                           ;main.c: 296: T2CONbits.TMR2ON = 1;
  7024  00AE  151C               	bsf	28,2	;volatile
  7025                           
  7026                           ;main.c: 297: T1CONbits.TMR1ON = 0;
  7027  00AF  1018               	bcf	24,0	;volatile
  7028  00B0                     i1l2810:	
  7029                           
  7030                           ;main.c: 298: }
  7031                           ;main.c: 302: if(PIR4bits.CCP10IF == 1){
  7032  00B0  0020               	movlb	0	; select bank0
  7033  00B1  1B94               	btfsc	20,7	;volatile
  7034                           
  7035                           ;main.c: 303: if(CCP10IF){
  7036  00B2  1F94               	btfss	20,7	;volatile
  7037  00B3  28C4               	goto	i1l262
  7038                           
  7039                           ;main.c: 304: if(CCP10IF == 1){
  7040  00B4  1F94               	btfss	20,7	;volatile
  7041  00B5  28C4               	goto	i1l262
  7042                           
  7043                           ;main.c: 305: CCP10IF=0;
  7044  00B6  1394               	bcf	20,7	;volatile
  7045                           
  7046                           ;main.c: 306: if(start_PWM_Generation_For_DIMMER == 1)
  7047  00B7  0021               	movlb	1	; select bank1
  7048  00B8  0355               	decf	_start_PWM_Generation_For_DIMMER^(0+128),w
  7049  00B9  0456               	iorwf	(_start_PWM_Generation_For_DIMMER+1)^(0+128),w
  7050  00BA  1D03               	btfss	3,2
  7051  00BB  28BF               	goto	i1l261
  7052                           
  7053                           ;main.c: 307: TMR1H = Timer1H;
  7054  00BC  0859               	movf	_Timer1H^(0+128),w
  7055  00BD  0020               	movlb	0	; select bank0
  7056  00BE  0097               	movwf	23	;volatile
  7057  00BF                     i1l261:	
  7058                           
  7059                           ;main.c: 308: TMR1L = Timer1L;
  7060  00BF  0021               	movlb	1	; select bank1
  7061  00C0  0857               	movf	_Timer1L^(0+128),w
  7062  00C1  0020               	movlb	0	; select bank0
  7063  00C2  0096               	movwf	22	;volatile
  7064                           
  7065                           ;main.c: 309: T1CONbits.TMR1ON = 1;
  7066  00C3  1418               	bsf	24,0	;volatile
  7067  00C4                     i1l262:	
  7068  00C4  0874               	movf	??_isr+1,w
  7069  00C5  00FF               	movwf	127
  7070  00C6  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7071  00C7  0009               	retfie
  7072  00C8                     __end_of_isr:	
  7073                           
  7074                           	psect	text33
  7075  0B1D                     __ptext33:	
  7076 ;; *************** function _errorsISR *****************
  7077 ;; Defined at:
  7078 ;;		line 1066 in file "main.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  errNum          2    0[COMMON] PTR const unsigned char 
  7081 ;;		 -> STR_6(5), STR_5(5), STR_4(6), STR_3(5), 
  7082 ;;		 -> STR_2(5), 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  7097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0
  7098 ;;Total ram usage:        3 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_isr
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           
  7108                           ;psect for function _errorsISR
  7109  0B1D                     _errorsISR:	
  7110  0B1D                     i1l2552:	
  7111                           ;main.c: 1068: while(*errNum != (0))
  7112                           
  7113                           ;incstack = 0
  7114                           ; Regs used in _errorsISR: [wreg-fsr0h+status,2+status,0+pclath]
  7115                           
  7116  0B1D  0870               	movf	errorsISR@errNum,w
  7117  0B1E  0084               	movwf	4
  7118  0B1F  0871               	movf	errorsISR@errNum+1,w
  7119  0B20  0085               	movwf	5
  7120  0B21  0012               	moviw fsr0++
  7121  0B22  1903               	btfsc	3,2
  7122  0B23  0008               	return
  7123  0B24                     i1l343:	
  7124                           ;main.c: 1069: {
  7125                           ;main.c: 1070: while (!TX1STAbits.TRMT);
  7126                           
  7127  0B24  0023               	movlb	3	; select bank3
  7128  0B25  1C9E               	btfss	30,1	;volatile
  7129  0B26  2B24               	goto	i1l343
  7130                           
  7131                           ;main.c: 1071: TX1REG = *errNum;
  7132  0B27  0870               	movf	errorsISR@errNum,w
  7133  0B28  0084               	movwf	4
  7134  0B29  0871               	movf	errorsISR@errNum+1,w
  7135  0B2A  0085               	movwf	5
  7136  0B2B  0800               	movf	0,w	;code access
  7137  0B2C  009A               	movwf	26	;volatile
  7138                           
  7139                           ;main.c: 1072: *errNum++;
  7140  0B2D  3001               	movlw	1
  7141  0B2E  07F0               	addwf	errorsISR@errNum,f
  7142  0B2F  3000               	movlw	0
  7143  0B30  3DF1               	addwfc	errorsISR@errNum+1,f
  7144  0B31  2B1D               	goto	i1l2552
  7145  0B32                     __end_of_errorsISR:	
  7146  007E                     btemp	set	126	;btemp
  7147  007E                     int$flags	set	126
  7148  007E                     wtemp0	set	126


Data Sizes:
    Strings     53
    Constant    8
    Data        142
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     64      76
    BANK1            80     53      73
    BANK2            80      0      80
    BANK3            80      8      66
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), 

    strncpy@to	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), applianceControl@HexlevelBuffer(BANK1[5]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), applianceControl@HexlevelBuffer(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> applianceControl@dimmerSpeedStringBuffer(BANK1[2]), applianceControl@switchNumberStringBuffer(BANK1[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sendAcknowledgment@currentStateBuffer	PTR unsigned char  size(1) Largest target is 58
		 -> currentStateBuffer(BANK3[58]), 

    errorsMain@errNum	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    errorsISR@errNum	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), 

    hexadecimalToDecimal@hexVal	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_errorsISR

Critical Paths under _main in BANK0

    _main->_applianceControl
    _applianceControl->___fttol
    _sprintf->___lwdiv
    _hexadecimalToDecimal->_strlen
    _atoi->___wmul
    ___fttol->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _actiontouchPanel->_sendFeedback_TO_Gateway

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_applianceControl

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   18468
                                             58 BANK0      6     6      0
                                              0 BANK3      8     8      0
                _GPIO_pin_Initialize
     _ReceivingIndicationLedBlinking
                   _actiontouchPanel
                  _allPeripheralInit
                   _applianceControl
             _copyReceivedDataBuffer
    _copyTouchpanelReceiveDataBuffer
                         _errorsMain
 ---------------------------------------------------------------------------------
 (1) _errorsMain                                           3     1      2     219
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _copyTouchpanelReceiveDataBuffer                      3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _copyReceivedDataBuffer                               3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _applianceControl                                    67    61      6   16401
                                             44 BANK0     14     8      6
                                              0 BANK1     53    53      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _atoi
               _hexadecimalToDecimal
                 _sendAcknowledgment
                            _sprintf
                             _strlen
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              6     3      3     576
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    20      6    1102
                                              8 BANK0     18    12      6
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendAcknowledgment                                   4     4      0     104
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _hexadecimalToDecimal                                13    11      2    1538
                                              8 BANK0     13    11      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               8     6      2     196
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1130
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     598
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             30 BANK0     14    10      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3046
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3132
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2614
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _allPeripheralInit                                    0     0      0       0
                   _CCP10_Initialize
                    _CCP8_Initialize
                 _EUSART2_Initialize
                  _EUSART_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP10_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _actiontouchPanel                                     8     7      1    1245
                                              3 BANK0      8     7      1
            _sendFeedback_TO_Gateway
 ---------------------------------------------------------------------------------
 (2) _sendFeedback_TO_Gateway                              3     2      1     601
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _ReceivingIndicationLedBlinking                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_pin_Initialize                                  0     0      0       0
                      _clearAllPorts
                      _pinINIT_extra
 ---------------------------------------------------------------------------------
 (2) _pinINIT_extra                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearAllPorts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0     365
                                              3 COMMON     2     2      0
                          _errorsISR
 ---------------------------------------------------------------------------------
 (5) _errorsISR                                            3     1      2     365
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_pin_Initialize
     _clearAllPorts
     _pinINIT_extra
   _ReceivingIndicationLedBlinking
   _actiontouchPanel
     _sendFeedback_TO_Gateway
   _allPeripheralInit
     _CCP10_Initialize
     _CCP8_Initialize
     _EUSART2_Initialize
     _EUSART_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _applianceControl
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _atoi
       ___wmul
       _isdigit
     _hexadecimalToDecimal
       ___wmul
       _strlen
     _sendAcknowledgment
     _sprintf
       ___lwdiv
     _strlen
     _strncpy
   _copyReceivedDataBuffer
   _copyTouchpanelReceiveDataBuffer
   _errorsMain

 _isr (ROOT)
   _errorsISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     130       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     40      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     35      49       8       91.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      8      42      12       82.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0     130      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 16 12:23:25 2019

                      __size_of_allPeripheralInit 0012                                                 pc 0002  
                                     __CFG_CP$OFF 0000                                                _M1 0064  
                                              _M2 0062                                                _M3 0060  
                                              _M4 00E3                                                _M5 00E1  
                                              _M6 00DF                                                _M7 00DD  
                                              _M8 00DB                           hexadecimalToDecimal@len 002C  
                             ___wmul@multiplicand 0022                      applianceControl@integerSpeed 00CB  
                                             l240 040F                                               l306 064B  
                                             l235 03D3                                               l352 0B7B  
                                             l280 0536                                               l272 04B6  
                                             l610 0DCF                                               l602 0DB4  
                                             l426 0B95                                               l367 0BB1  
                                             l609 0DC7                                               l693 0F3D  
                                             _GIE 005F                     applianceControl@clockPerCycle 00B4  
                                             _PR2 001B                          hexadecimalToDecimal@base 0030  
                       __size_of_applianceControl 030B                                               _isr 0004  
                                 _TMR2_Initialize 0AD9                                      __CFG_BORV$LO 0000  
                                             wreg 0009                                      __CFG_FOSC$HS 0000  
                                            S4000 0810                                              S3998 0800  
                                    __CFG_LVP$OFF 0000                                      ___ftdiv@cntr 0038  
                                    ___ftdiv@sign 003D                                              l3020 0B8F  
                                            l3012 0BEE                                              l3014 0BF9  
                                            l3040 0D91                                              l3104 0DEF  
                                            l3050 0DB9                                              l3042 0D9B  
                                            l3122 0E11                                              l3106 0DE8  
                                            l3052 0DC1                                              l3044 0DA0  
                                            l3036 0D8A                                              l3132 0E4C  
                                            l3124 0E15                                              l3116 0E0A  
                                            l3108 0DF4                                              l3126 0E3C  
                                            l3230 0E87                                              l3222 0E6A  
                                            l3150 0740                                              l3400 06B4  
                                            l3072 0B0A                                              l3208 0BAC  
                                            l3160 0751                                              l3144 0728  
                                            l3330 0BD1                                              l3242 0ECB  
                                            l3340 0F6E                                              l3412 06D0  
                                            l3404 06BC                                              l3180 07AE  
                                            l3238 0EC5                                              l3094 0D23  
                                            l3086 0D05                                              l3166 0770  
                                            l3360 0FC5                                              l3416 06D8  
                                            l3432 0EE9                                              l3088 0D11  
                                            l3176 0774                                              l3192 0C3A  
                                            l3600 03CD                                              l3346 0F84  
                                            l3450 0F19                                              l3098 0D2C  
                                            l3178 0706                                              l3194 0C50  
                                            l3602 03D6                                              l3610 03FC  
                                            l3460 0F40                                              l3452 0F27  
                                            l3382 0663                                              l3198 0C58  
                                            l3606 03EE                                              l3710 0B73  
                                            l3368 0FDE                                              l3464 0F4E  
                                            l3458 0F34                                              l3732 0578  
                                            l3804 063C                                              l3388 0679  
                                            l3742 0592                                              l3590 03A5  
                                            l3752 05AC                                              l3592 03AD  
                                            l3832 0436                                              l3762 05C8  
                                            l3594 03B5                                              l3586 0395  
                                            l3850 047E                                              l3772 05E5  
                                            l3596 03BD                                              l3588 039D  
                                            l3908 0518                                              l3782 0602  
                                            l3598 03C5                                              l3862 0498  
                                            l3792 061F                                              l3882 04DB  
                                            l3868 04B9                                              l3896 04FD  
                                            l3994 03F3                                              l3996 0402  
                                            ?_isr 0070                                              STR_1 1038  
                                            STR_2 102E                                              STR_3 1033  
                                            STR_4 1019                                              STR_5 101F  
                                            STR_6 1029                                              STR_7 1024  
                                            STR_8 1024                                              STR_9 103B  
                                            u3005 0D1C                                              u3015 0D24  
                                            u3115 0766                                              u4007 035B  
                                            u3305 0FA6                                              u4017 0368  
                                            u3315 0FC6                                              u4027 0374  
                                            u3325 0FD5                                              u3405 06BD  
                                            u4037 0380                                              u3335 0FDF  
                                            u3415 06C3                                              u4047 038C  
                                            u4057 0CCD                                              u4067 0CD9  
                                            u3515 0F1A                                              u4077 0CE6  
                                            u3445 06D9                                              u2805 0B9B  
                                            u4087 0CF2                                              u3295 0F96  
                                            u3455 06DF                                              u3375 0685  
                                            u4097 0B14                                              u3385 0695  
                                            u3545 0F35                                              u3625 0CA7  
                                            _PEIE 005E                                              u2925 0DD6  
                                            u2845 0D96                                              u3485 0EF0  
                                            u2865 0DAF                                              u3585 0C75  
                                            u2795 0B96                                              u2885 0DBC  
                                            u3845 0496                                              u2975 0D08  
                                            u3855 04B4                                              u3945 0516  
                                            u2995 0D12                                              u3955 0534  
                                            u3967 0416                                              u3977 0335  
                                            u3987 0341                                              u3997 034D  
                                            _TMR2 001A                                              _WPUB 020D  
                                            _WPUD 020F                                              _WPUE 0210  
                                            _WPUG 048D                                      __CFG_WRT$OFF 0000  
                                            _atoi 0DE6                                              _main 0410  
                                    ___ftpack@arg 0020                                      ___ftpack@exp 0023  
                                            fsr0h 0005                                              fsr1h 0007  
                                            indf0 0000                                              fsr0l 0004  
                                            indf1 0001                                              fsr1l 0006  
                                            btemp 007E                           _copy_parentalLockBuffer 0142  
                                            start 00C8                                     __CFG_IESO$OFF 0000  
                  applianceControl@HexlevelBuffer 00A8                            __size_of_pinINIT_extra 0015  
                                    ___ftmul@cntr 0036                                      ___ftmul@sign 0037  
                       ??_sendFeedback_TO_Gateway 0021                                      ___fttol@exp1 004B  
                                    ___fttol@lval 0047                                             ??_isr 0073  
             applianceControl@charParentalControl 0050                                      main@end_flag 01DC  
                       __size_of_CCP10_Initialize 000A                                             ?_atoi 0026  
                                           ?_main 0070                                             STR_10 1008  
                                   __CFG_WDTE$OFF 0000                                   __end_of___ftdiv 1000  
                                 __end_of___ftmul 0700                                             _T1CON 0018  
                                 __end_of___fttol 0F57                                             _T2CON 001C  
                                           _RC1IF 008D                                             _RC2IF 00A5  
                                 __end_of___lwdiv 0D31                                             i1l261 00BF  
                                           i1l253 008B                                             i1l262 00C4  
                                           i1l343 0B24                                             i1l247 003E  
                                           i1l256 00A2                     applianceControl@CompleteClock 00AD  
                                           _TMR1H 0017                                             _TMR1L 0016  
                       applianceControl@remainder 00A2                            ??_hexadecimalToDecimal 002A  
                                  __CFG_FCMEN$OFF 0000                                     ___awtoft@sign 002D  
                                 __end_of_isdigit 0B0C                                     ___ftpack@sign 0024  
                                           atoi@a 002B                                             atoi@s 002D  
                         __end_of_TMR1_Initialize 0AEE                                    __CFG_BOREN$OFF 0000  
                                           status 0003                                             wtemp0 007E  
                                 __end_of_sprintf 07B3                                   __end_of_strncpy 0C63  
                               ?_actiontouchPanel 0023                             __end_of_clearAllPorts 0AFD  
                             _GPIO_pin_Initialize 0C0D                                    __CFG_MCLRE$OFF 0000  
                              ??_actiontouchPanel 0024                                   __initialization 00CA  
                         ?_copyReceivedDataBuffer 0070                                      __end_of_atoi 0E51  
                                    __end_of_main 053A                                   _CCP8_Initialize 0ACF  
copyTouchpanelReceiveDataBuffer@dataBufferCounter 0021                           __end_of_TMR2_Initialize 0AE3  
                                  __CFG_LPBOR$OFF 0000                                            ??_atoi 0028  
                                          ??_main 005A                                     ___fttol@sign1 0046  
                            ?_GPIO_pin_Initialize 0070                                     _pinINIT_extra 0B32  
                       main@dataBufferCounter_749 01E0                   __end_of_sendFeedback_TO_Gateway 0CFC  
                      __end_of_EUSART2_Initialize 0B5D                                            _CCPR8H 0618  
                                          _CCPR8L 0617                                  __end_of___awtoft 0BE8  
                                          _ANSELA 018C                                            _ANSELB 018D  
                                          _ANSELD 018F                                            _ANSELE 0190  
                                          _ANSELF 040C                                  __end_of___ftpack 0DE6  
                                          _ANSELG 040D                                            _T1GCON 0019  
                                          _RC1REG 0199                                            _RC2REG 0491  
                                          _RC1STA 019D                                            _RC2STA 0495  
                    _touchpanleReceivedDatabuffer 0132                                            i1l2552 0B1D  
                                          i1l2810 00B0                                            i1l2772 0059  
                                          i1l2748 0017                                            i1l2764 004A  
                                          i1l2778 0065                                            i1l2794 0097  
                                          u246_25 0033                                            _TX1REG 019A  
                                          _TX2REG 0492                                            _TX1STA 019E  
                                          _TX2STA 0496                                    __CFG_PWRTE$OFF 0000  
                  __end_of_copyReceivedDataBuffer 0C95                       __size_of_sendAcknowledgment 001E  
                                          ___wmul 0B8C                                         ??___ftdiv 0034  
                                       ??___ftmul 002E                                         ??___fttol 0042  
                                       ??___lwdiv 0024                                            _strlen 0BE8  
                           ??_GPIO_pin_Initialize 0075                             ___ftmul@f3_as_product 0033  
                        _mainReceivedDataPosition 0077                                  _applianceControl 0105  
                                       ??_isdigit 0075                                    ?_pinINIT_extra 0070  
         __end_of_copyTouchpanelReceiveDataBuffer 0CC7          __size_of_copyTouchpanelReceiveDataBuffer 0032  
               ??_copyTouchpanelReceiveDataBuffer 0020                  ?_copyTouchpanelReceiveDataBuffer 0070  
                 _copyTouchpanelReceiveDataBuffer 0C95                                         ??_sprintf 002E  
                   _touchpanelReceivedataPosition 0075                        actiontouchPanel@Switch_Num 0028  
                                       ??_strncpy 0023                                  ?_TMR1_Initialize 0070  
                         __end_of__initialization 0101                           __end_of_CCP8_Initialize 0AD9  
                                      ___ftdiv@f1 0031                                        ___ftdiv@f2 002E  
                                      ___ftdiv@f3 0039                                        ___awtoft@c 0028  
                sendFeedback_TO_Gateway@sw_status 0020                                        ___ftmul@f1 0028  
                                      ___ftmul@f2 002B                                        ___fttol@f1 003E  
               sendFeedback_TO_Gateway@Switch_Num 0022                                    __pcstackCOMMON 0070  
                                    __pidataBANK1 0AB5                                      __pidataBANK2 0D31  
                                    __pidataBANK3 07B3                                  ?_TMR2_Initialize 0070  
                                _CCP10_Initialize 0AC5                                        __pbssBANK0 0060  
                                      __pbssBANK1 00D5                                   __CFG_VCAPEN$OFF 0000  
                              __size_of_errorsISR 0015                                        __pmaintext 0410  
                                         ?___wmul 0020                                        __pintentry 0004  
                                         _CCP10IF 00A7                        sendAcknowledgment@Tx_count 0021  
                                         _CCP9CON 061C                                           _CCPR10H 061E  
                                         _CCPR10L 061D                                         ?___awtoft 0028  
                                       ?___ftpack 0020                                   ??_pinINIT_extra 0075  
                                         ?_strlen 0020                                           _SP1BRGH 019C  
                                         _SP1BRGL 019B                                           _SP2BRGH 0494  
                                         _SP2BRGL 0493                   _start_PWM_Generation_For_DIMMER 00D5  
     applianceControl@currentStateBufferPositions 00D1                                  ?_CCP8_Initialize 0070  
                applianceControl@chDimmerSpeedLSB 004F                  applianceControl@chDimmerSpeedMSB 004E  
                                         _Timer1H 00D9                                           _Timer1L 00D7  
                                         ___ftdiv 0F57                                   __size_of___wmul 001C  
                                         ___ftmul 064C                                           ___fttol 0ED0  
                                         ___lwdiv 0CFC                                   __CFG_STVREN$OFF 0000  
                                      ??___awtoft 002B                                        ??___ftpack 0025  
                                      _errorsMain 0B73                                           __ptext1 0B73  
                                         __ptext2 0C95                                           __ptext3 0C63  
                                         __ptext4 0105                                           __ptext5 0C34  
                                         __ptext6 0700                                           __ptext7 0CFC  
                                         __ptext8 0BA8                                           __ptext9 0E51  
                       __size_of_actiontouchPanel 0112                                   __size_of_strlen 0025  
                               __end_of_hexpowers 1008                                         _T1CONbits 0018  
                                       _T2CONbits 001C                                           _isdigit 0AFD  
                                    __size_of_isr 00C4                                 __end_of_errorsISR 0B32  
                   __size_of_hexadecimalToDecimal 007F              sendAcknowledgment@currentStateBuffer 0023  
                                         _sprintf 0700                                           clrloop0 0ABA  
                                         _strncpy 0C34                              end_of_initialization 0101  
                                         init_ram 0ABF                                           initloop 0AC0  
                               _EUSART_Initialize 0B5D                          ?_sendFeedback_TO_Gateway 0020  
                        __end_of_applianceControl 0410                applianceControl@integerSwitchState 00D3  
                              _EUSART2_Initialize 0B47                                ?_EUSART_Initialize 0070  
                          _touchPanelDataReceived 0066                                    main@start_flag 01DA  
                             ?_EUSART2_Initialize 0070                                           strlen@s 0026  
                             ??_EUSART_Initialize 0075                                         _PORTEbits 0010  
                                       _PORTFbits 028C                                         _PORTGbits 028D  
          __end_of_ReceivingIndicationLedBlinking 0B1D           __size_of_ReceivingIndicationLedBlinking 0011  
                  _ReceivingIndicationLedBlinking 0B0C                            __size_of_clearAllPorts 000F  
                                       _TRISBbits 008D                                         _TRISCbits 008E  
                                       _TRISDbits 008F                                         _TRISEbits 0090  
                                       _TRISFbits 030C                                         _TRISGbits 030D  
                            ??_EUSART2_Initialize 0075                          __end_of_CCP10_Initialize 0ACF  
                       __end_of_EUSART_Initialize 0B73                                       ___ftdiv@exp 003C  
        applianceControl@switchNumberStringBuffer 00C6                        __end_of_sendAcknowledgment 0BC6  
                                     ___ftmul@exp 0032                       __end_of_GPIO_pin_Initialize 0C34  
                                  __end_of___wmul 0BA8                            _mainReceivedDataBuffer 0120  
            applianceControl@ConvertStringIntoInt 00A0                                       ?_errorsMain 0020  
                                  __end_of_strlen 0C0D                               start_initialization 00CA  
                                     __end_of_isr 00C8                             applianceControl@F3894 00E7  
                           applianceControl@F3896 00E5                             applianceControl@Pulse 00B7  
                           applianceControl@start 00A4                                     _clearAllPorts 0AEE  
                        __size_of_TMR1_Initialize 000B           copyReceivedDataBuffer@dataBufferCounter 0021  
                                        ??___wmul 0075                                       __pdataBANK1 00E5  
                                     __pdataBANK2 0120                                       __pdataBANK3 01A0  
                                        ??_strlen 0022                                  _actiontouchPanel 053A  
                               __size_of___awtoft 0022                                 __size_of___ftpack 0065  
                                _mainDataReceived 006A                                       __pbssCOMMON 0075  
                                       ___latbits 0002                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00A0                                     __pcstackBANK3 01DA  
                        __size_of_TMR2_Initialize 000A                                      _isdigit$1027 0020  
                        ??_copyReceivedDataBuffer 0020                        __size_of_EUSART_Initialize 0016  
       applianceControl@ConvertIntToTimeInMilisec 00C8                                       sprintf@flag 0032  
                                       _checkFlag 0068                                       sprintf@prec 0037  
                             __size_of_errorsMain 0019                                    ?_clearAllPorts 0070  
                                ___lwdiv@dividend 0022                                   errorsISR@errNum 0070  
                                errorsMain@errNum 0020                                          ?___ftdiv 002E  
                                        ?___ftmul 0028                                          ?___fttol 003E  
                                        ?___lwdiv 0020                                         __pswtext1 0800  
                                       __pswtext2 0810                                          _CCP10CON 061F  
                                        _BAUD1CON 019F                                          _BAUD2CON 0497  
                           __end_of_pinINIT_extra 0B47                                          ?_isdigit 0070  
                                       _hexpowers 1000               applianceControl@charFinalFrameState 0051  
                                ___lwdiv@quotient 0026                                          ?_sprintf 0028  
                                       _errorsISR 0B1D                                          ?_strncpy 0020  
                   actiontouchPanel@switch_status 0029           applianceControl@dimmerSpeedStringBuffer 00CD  
                                  ___wmul@product 0024                                         clear_ram0 0AB9  
                                     strncpy@from 0020                                          _PIE1bits 0091  
                                     strncpy@size 0021                                          _PIE4bits 0094  
                               ?_applianceControl 004C                       hexadecimalToDecimal@dec_val 002E  
                                        _PIR1bits 0011                      __end_of_hexadecimalToDecimal 0ED0  
                                        _PIR4bits 0014                                ??_applianceControl 0052  
                        __size_of_CCP8_Initialize 000A                                 ??_TMR1_Initialize 0075  
                           hexadecimalToDecimal@i 0033                                 ___wmul@multiplier 0020  
                __size_of_sendFeedback_TO_Gateway 0035                     applianceControl@charSwitchLSB 004C  
                   applianceControl@charSwitchMSB 00C5                                        ?_errorsISR 0070  
                 __size_of_copyReceivedDataBuffer 0032                                 ??_TMR2_Initialize 0075  
                               ?_CCP10_Initialize 0070                                   ??_clearAllPorts 0075  
                ??_ReceivingIndicationLedBlinking 0020                   ?_ReceivingIndicationLedBlinking 0070  
                              ??_CCP10_Initialize 0075                              applianceControl@deno 00B1  
                            applianceControl@strH 00BF                              applianceControl@strL 00C2  
                                __size_of___ftdiv 00A9                                  __size_of___ftmul 00B4  
                                __size_of___fttol 0087                                 _allPeripheralInit 07ED  
                                __size_of___lwdiv 0035                                          ___awtoft 0BC6  
                                        ___ftpack 0D81                                      ??_errorsMain 0022  
                              _sendAcknowledgment 0BA8                                ?_allPeripheralInit 0070  
                                      sprintf@idx 0033                                        sprintf@val 0035  
                                __size_of_isdigit 000F                                   ___lwdiv@divisor 0020  
                             ?_sendAcknowledgment 0070                                   ___lwdiv@counter 0025  
                                        __ptext10 0BE8                                          __ptext11 0DE6  
                                        __ptext20 0AD9                                          __ptext12 0AFD  
                                        __ptext21 0AE3                                          __ptext13 0B8C  
                                        __ptext30 0B32                                          __ptext22 0B5D  
                                        __ptext14 0ED0                                          __ptext31 0AEE  
                                        __ptext23 0B47                                          __ptext15 064C  
                                        __ptext24 0ACF                                          __ptext16 0F57  
                                        __ptext33 0B1D                                          __ptext25 0AC5  
                                        __ptext17 0BC6                                          __ptext26 053A  
                                        __ptext18 0D81                                          __ptext27 0CC7  
                                        __ptext19 07ED                                          __ptext28 0B0C  
                                        __ptext29 0C0D                               ??_allPeripheralInit 0075  
                 applianceControl@charSwitchSTATE 004D                                  __size_of_sprintf 00B3  
                                __size_of_strncpy 002F                       __size_of_EUSART2_Initialize 0016  
                           main@dataBufferCounter 01DE                                     __size_of_atoi 006B  
                                   __size_of_main 012A                          __end_of_actiontouchPanel 064C  
                       actiontouchPanel@ch_sw_num 0025                                __end_of_errorsMain 0B8C  
                              _currentStateBuffer 01A0                                        _RC1STAbits 019D  
                            ??_sendAcknowledgment 0020                                        _RC2STAbits 0495  
                      hexadecimalToDecimal@hexVal 0032                         __end_of_allPeripheralInit 07FF  
                                        int$flags 007E                                          atoi@sign 002A  
                          _copyReceivedDataBuffer 0C63                             actiontouchPanel@SwNum 0026  
                          _tempReceivedDataBuffer 015E                      __size_of_GPIO_pin_Initialize 0027  
                               ??_CCP8_Initialize 0075                               applianceControl@end 00A6  
                                  __pstringtext10 0000                                          isdigit@c 0021  
                            _hexadecimalToDecimal 0E51                                       ??_errorsISR 0072  
                                        intlevel1 0000                                         sprintf@ap 0034  
                                       sprintf@sp 0038                                 __CFG_CLKOUTEN$OFF 0000  
             applianceControl@integerSwitchNumber 00CF                         applianceControl@NeedPulse 00BB  
                                       strncpy@cp 0025                                         strncpy@to 0024  
                              _parentalLockBuffer 0150                           _sendFeedback_TO_Gateway 0CC7  
                                   __pstringtext1 1000                                     __pstringtext2 1019  
                                   __pstringtext3 101F                                     __pstringtext4 1024  
                                   __pstringtext5 1029                                     __pstringtext6 102E  
                                   __pstringtext7 1033                                     __pstringtext8 1038  
                                   __pstringtext9 103B                         actiontouchPanel@sw_status 0023  
                                        sprintf@c 0039                                          sprintf@f 0028  
                                        strlen@cp 0027                   _tempReceiveTouchpanelDataBuffer 0168  
                           ?_hexadecimalToDecimal 0028                                        _TX1STAbits 019E  
                                      _TX2STAbits 0496                                   _TMR1_Initialize 0AE3  
